#test test_mul1
printf("Running NASA s21_mul check...\n");
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul4
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul5
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul6
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul7
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul8
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul9
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul10
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul11
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul12
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul13
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul14
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul15
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul16
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul17
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 52818775009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul18
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -52818775009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul19
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul20
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul21
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 13204693752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul22
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -13204693752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul23
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul24
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul25
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul26
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul27
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul28
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul29
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul30
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul31
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul32
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul33
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul34
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul35
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul36
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul37
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 20923672451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul38
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -20923672451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul39
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul40
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul41
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 66023468761886.947994619958612
    s21_decimal decimal_check = {{0x55555554, 0x55555555, 0xD5555555, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul42
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -66023468761886.947994619958612
    s21_decimal decimal_check = {{0x55555554, 0x55555555, 0xD5555555, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul43
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 13204693752377.389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul44
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -13204693752377.389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul45
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul46
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul47
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul48
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul49
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 2.6409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul50
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -2.6409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul51
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26.409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul52
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26.409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul53
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul54
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul55
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul56
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul57
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul58
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul59
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul60
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul61
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul62
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul63
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul64
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul65
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul66
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul67
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul68
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul69
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul70
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul71
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul72
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul73
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul74
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul75
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -52818775009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul76
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 52818775009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul77
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul78
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul79
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -13204693752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul80
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 13204693752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul81
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul82
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul83
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul84
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul85
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul86
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul87
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul88
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul89
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul90
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul91
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul92
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul93
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul94
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul95
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -20923672451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul96
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 20923672451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul97
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul98
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul99
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -66023468761886.947994619958612
    s21_decimal decimal_check = {{0x55555554, 0x55555555, 0xD5555555, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul100
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 66023468761886.947994619958612
    s21_decimal decimal_check = {{0x55555554, 0x55555555, 0xD5555555, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul101
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -13204693752377.389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul102
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 13204693752377.389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul103
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul104
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul105
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul106
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul107
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -2.6409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul108
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 2.6409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul109
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26.409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul110
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26.409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul111
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul112
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul113
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul114
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul115
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul116
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul117
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul118
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul119
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul120
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul121
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul122
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul123
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul124
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul125
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul126
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul127
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul128
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul129
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul130
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul131
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul132
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul133
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 52818774997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul134
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -52818774997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul135
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul136
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul137
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 13204693749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul138
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -13204693749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul139
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul140
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul141
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul142
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul143
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul144
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul145
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul146
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul147
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul148
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul149
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul150
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul151
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul152
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul153
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 20923672446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul154
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -20923672446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul155
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul156
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul157
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 66023468746514.661270107805012
    s21_decimal decimal_check = {{0xD5555554, 0x80000000, 0xD5555554, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul158
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -66023468746514.661270107805012
    s21_decimal decimal_check = {{0xD5555554, 0x80000000, 0xD5555554, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul159
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 13204693749302.932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul160
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -13204693749302.932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul161
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul162
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul163
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul164
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul165
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 2.6409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul166
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -2.6409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul167
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26.409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul168
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26.409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul169
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul170
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul171
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul172
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul173
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul174
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul175
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul176
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul177
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul178
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul179
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul180
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul181
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul182
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul183
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul184
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul185
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul186
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul187
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul188
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul189
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul190
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul191
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -52818774997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul192
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 52818774997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul193
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul194
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul195
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -13204693749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul196
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 13204693749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul197
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul198
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul199
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul200
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul201
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul202
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul203
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul204
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul205
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul206
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul207
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul208
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul209
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul210
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul211
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -20923672446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul212
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 20923672446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul213
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul214
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul215
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -66023468746514.661270107805012
    s21_decimal decimal_check = {{0xD5555554, 0x80000000, 0xD5555554, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul216
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 66023468746514.661270107805012
    s21_decimal decimal_check = {{0xD5555554, 0x80000000, 0xD5555554, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul217
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -13204693749302.932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul218
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 13204693749302.932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul219
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul220
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul221
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul222
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul223
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -2.6409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul224
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 2.6409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul225
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26.409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul226
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26.409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul227
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul228
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul229
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul230
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul231
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul232
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul233
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul234
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul235
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul236
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul237
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul238
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul239
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul240
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul241
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 8803129166201954835059936825
    s21_decimal decimal_check = {{0x38E38E39, 0x55555555, 0x1C71C71C, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul242
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -8803129166201954835059936825
    s21_decimal decimal_check = {{0x38E38E39, 0x55555555, 0x1C71C71C, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul243
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 162389070814544768680495185.58
    s21_decimal decimal_check = {{0x9C3D3FDE, 0xD33DA3EB, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul244
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -162389070814544768680495185.58
    s21_decimal decimal_check = {{0x9C3D3FDE, 0xD33DA3EB, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul245
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul246
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul247
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 162389067710850691399003335
    s21_decimal decimal_check = {{0xFF79ACC7, 0xFFFFFFFF, 0x865338, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul248
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -162389067710850691399003335
    s21_decimal decimal_check = {{0xFF79ACC7, 0xFFFFFFFF, 0x865338, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul249
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 12297829382473034409.999999385
    s21_decimal decimal_check = {{0x82EE2199, 0xAAAAAAAA, 0x27BC86AA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul250
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -12297829382473034409.999999385
    s21_decimal decimal_check = {{0x82EE2199, 0xAAAAAAAA, 0x27BC86AA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul251
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul252
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul253
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 3074457345618258602.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul254
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -3074457345618258602.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul255
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3074457345618258602.4999999994
    s21_decimal decimal_check = {{0x475359FA, 0xAAAAAAAA, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul256
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3074457345618258602.4999999994
    s21_decimal decimal_check = {{0x475359FA, 0xAAAAAAAA, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul257
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3074457345618258602.5000000006
    s21_decimal decimal_check = {{0x47535A06, 0xAAAAAAAA, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul258
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3074457345618258602.5000000006
    s21_decimal decimal_check = {{0x47535A06, 0xAAAAAAAA, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul259
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914691236517205.0000000006
    s21_decimal decimal_check = {{0x8EA6B406, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul260
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914691236517205.0000000006
    s21_decimal decimal_check = {{0x8EA6B406, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul261
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 49191317529892137640
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul262
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -49191317529892137640
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul263
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914691236517204.9999999994
    s21_decimal decimal_check = {{0x8EA6B3FA, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul264
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914691236517204.9999999994
    s21_decimal decimal_check = {{0x8EA6B3FA, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul265
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul266
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul267
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 48716721244363430604.148555673
    s21_decimal decimal_check = {{0xD4B7BF99, 0x79B8EBC2, 0x9D6986FE, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul268
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -48716721244363430604.148555673
    s21_decimal decimal_check = {{0xD4B7BF99, 0x79B8EBC2, 0x9D6986FE, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul269
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 4871672124436343060.4148555676
    s21_decimal decimal_check = {{0xD4B7BF9C, 0x79B8EBC2, 0x9D6986FE, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul270
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -4871672124436343060.4148555676
    s21_decimal decimal_check = {{0xD4B7BF9C, 0x79B8EBC2, 0x9D6986FE, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul271
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul272
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul273
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 15372.2867280912930125
    s21_decimal decimal_check = {{0x5555554D, 0x55555555, 0x8, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul274
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -15372.2867280912930125
    s21_decimal decimal_check = {{0x5555554D, 0x55555555, 0x8, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul275
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 3074.4573456182586025
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul276
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -3074.4573456182586025
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul277
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul278
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul279
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul280
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul281
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000006148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul282
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000006148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul283
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000061489146912365172050
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul284
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000061489146912365172050
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul285
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul286
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul287
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul288
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul289
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -43385638798924061271577.476380
    s21_decimal decimal_check = {{0x588A3D1C, 0x5F33F93, 0x8C2FC260, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul290
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 43385638798924061271577.476380
    s21_decimal decimal_check = {{0x588A3D1C, 0x5F33F93, 0x8C2FC260, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul291
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul292
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul293
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul294
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul295
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul296
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul297
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul298
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul299
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -8803129166201954835059936825
    s21_decimal decimal_check = {{0x38E38E39, 0x55555555, 0x1C71C71C, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul300
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 8803129166201954835059936825
    s21_decimal decimal_check = {{0x38E38E39, 0x55555555, 0x1C71C71C, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul301
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -162389070814544768680495185.58
    s21_decimal decimal_check = {{0x9C3D3FDE, 0xD33DA3EB, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul302
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 162389070814544768680495185.58
    s21_decimal decimal_check = {{0x9C3D3FDE, 0xD33DA3EB, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul303
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul304
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul305
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -162389067710850691399003335
    s21_decimal decimal_check = {{0xFF79ACC7, 0xFFFFFFFF, 0x865338, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul306
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 162389067710850691399003335
    s21_decimal decimal_check = {{0xFF79ACC7, 0xFFFFFFFF, 0x865338, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul307
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -12297829382473034409.999999385
    s21_decimal decimal_check = {{0x82EE2199, 0xAAAAAAAA, 0x27BC86AA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul308
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 12297829382473034409.999999385
    s21_decimal decimal_check = {{0x82EE2199, 0xAAAAAAAA, 0x27BC86AA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul309
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul310
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul311
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -3074457345618258602.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul312
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 3074457345618258602.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul313
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3074457345618258602.4999999994
    s21_decimal decimal_check = {{0x475359FA, 0xAAAAAAAA, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul314
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3074457345618258602.4999999994
    s21_decimal decimal_check = {{0x475359FA, 0xAAAAAAAA, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul315
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3074457345618258602.5000000006
    s21_decimal decimal_check = {{0x47535A06, 0xAAAAAAAA, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul316
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3074457345618258602.5000000006
    s21_decimal decimal_check = {{0x47535A06, 0xAAAAAAAA, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul317
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914691236517205.0000000006
    s21_decimal decimal_check = {{0x8EA6B406, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul318
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914691236517205.0000000006
    s21_decimal decimal_check = {{0x8EA6B406, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul319
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -49191317529892137640
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul320
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 49191317529892137640
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul321
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914691236517204.9999999994
    s21_decimal decimal_check = {{0x8EA6B3FA, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul322
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914691236517204.9999999994
    s21_decimal decimal_check = {{0x8EA6B3FA, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul323
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul324
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul325
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -48716721244363430604.148555673
    s21_decimal decimal_check = {{0xD4B7BF99, 0x79B8EBC2, 0x9D6986FE, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul326
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 48716721244363430604.148555673
    s21_decimal decimal_check = {{0xD4B7BF99, 0x79B8EBC2, 0x9D6986FE, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul327
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -4871672124436343060.4148555676
    s21_decimal decimal_check = {{0xD4B7BF9C, 0x79B8EBC2, 0x9D6986FE, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul328
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 4871672124436343060.4148555676
    s21_decimal decimal_check = {{0xD4B7BF9C, 0x79B8EBC2, 0x9D6986FE, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul329
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul330
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul331
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -15372.2867280912930125
    s21_decimal decimal_check = {{0x5555554D, 0x55555555, 0x8, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul332
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 15372.2867280912930125
    s21_decimal decimal_check = {{0x5555554D, 0x55555555, 0x8, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul333
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -3074.4573456182586025
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul334
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 3074.4573456182586025
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul335
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul336
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul337
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul338
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul339
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000006148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul340
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000006148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul341
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000061489146912365172050
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul342
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000061489146912365172050
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul343
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul344
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul345
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul346
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul347
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 43385638798924061271577.476380
    s21_decimal decimal_check = {{0x588A3D1C, 0x5F33F93, 0x8C2FC260, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul348
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -43385638798924061271577.476380
    s21_decimal decimal_check = {{0x588A3D1C, 0x5F33F93, 0x8C2FC260, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul349
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul350
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul351
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul352
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul353
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul354
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul355
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul356
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul357
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 8803129164152316605602201600
    s21_decimal decimal_check = {{0x0, 0x38E38E39, 0x1C71C71C, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul358
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -8803129164152316605602201600
    s21_decimal decimal_check = {{0x0, 0x38E38E39, 0x1C71C71C, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul359
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul360
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul361
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 162389070738926464946696025.64
    s21_decimal decimal_check = {{0x932B7F04, 0x6A4C9F42, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul362
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -162389070738926464946696025.64
    s21_decimal decimal_check = {{0x932B7F04, 0x6A4C9F42, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul363
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 162389067673041540250337280
    s21_decimal decimal_check = {{0x0, 0xFF79ACC7, 0x865338, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul364
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -162389067673041540250337280
    s21_decimal decimal_check = {{0x0, 0xFF79ACC7, 0x865338, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul365
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 12297829379609722879.999999385
    s21_decimal decimal_check = {{0xFFFFFD99, 0x82EE23FF, 0x27BC86AA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul366
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -12297829379609722879.999999385
    s21_decimal decimal_check = {{0xFFFFFD99, 0x82EE23FF, 0x27BC86AA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul367
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul368
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul369
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 3074457344902430720.0
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul370
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -3074457344902430720.0
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul371
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3074457344902430719.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x475359FF, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul372
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3074457344902430719.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x475359FF, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul373
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3074457344902430720.0000000006
    s21_decimal decimal_check = {{0x6, 0x47535A00, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul374
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3074457344902430720.0000000006
    s21_decimal decimal_check = {{0x6, 0x47535A00, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul375
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914689804861440.0000000006
    s21_decimal decimal_check = {{0x6, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul376
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914689804861440.0000000006
    s21_decimal decimal_check = {{0x6, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul377
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 49191317518438891520
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA8, 0x2, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul378
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -49191317518438891520
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA8, 0x2, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul379
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914689804861439.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x8EA6B3FF, 0xC6AEA154, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul380
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914689804861439.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x8EA6B3FF, 0xC6AEA154, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul381
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul382
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul383
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 48716721233020685042.758212308
    s21_decimal decimal_check = {{0xF8685AD4, 0xDC4F64C4, 0x9D6986FD, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul384
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -48716721233020685042.758212308
    s21_decimal decimal_check = {{0xF8685AD4, 0xDC4F64C4, 0x9D6986FD, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul385
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 4871672123302068504.2758212311
    s21_decimal decimal_check = {{0xF8685AD7, 0xDC4F64C4, 0x9D6986FD, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul386
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -4871672123302068504.2758212311
    s21_decimal decimal_check = {{0xF8685AD7, 0xDC4F64C4, 0x9D6986FD, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul387
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul388
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul389
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 15372.2867245121536000
    s21_decimal decimal_check = {{0x0, 0x5555554D, 0x8, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul390
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -15372.2867245121536000
    s21_decimal decimal_check = {{0x0, 0x5555554D, 0x8, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul391
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 3074.4573449024307200
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul392
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -3074.4573449024307200
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul393
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul394
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul395
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul396
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul397
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000006148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul398
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000006148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul399
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000061489146898048614400
    s21_decimal decimal_check = {{0x0, 0x55555552, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul400
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000061489146898048614400
    s21_decimal decimal_check = {{0x0, 0x55555552, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul401
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul402
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul403
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul404
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul405
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -43385638788822555067041.628136
    s21_decimal decimal_check = {{0xDEC6BFE8, 0x79C37D33, 0x8C2FC25F, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul406
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 43385638788822555067041.628136
    s21_decimal decimal_check = {{0xDEC6BFE8, 0x79C37D33, 0x8C2FC25F, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul407
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul408
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul409
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul410
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul411
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul412
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul413
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul414
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul415
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -8803129164152316605602201600
    s21_decimal decimal_check = {{0x0, 0x38E38E39, 0x1C71C71C, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul416
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 8803129164152316605602201600
    s21_decimal decimal_check = {{0x0, 0x38E38E39, 0x1C71C71C, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul417
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul418
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul419
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -162389070738926464946696025.64
    s21_decimal decimal_check = {{0x932B7F04, 0x6A4C9F42, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul420
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 162389070738926464946696025.64
    s21_decimal decimal_check = {{0x932B7F04, 0x6A4C9F42, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul421
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -162389067673041540250337280
    s21_decimal decimal_check = {{0x0, 0xFF79ACC7, 0x865338, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul422
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 162389067673041540250337280
    s21_decimal decimal_check = {{0x0, 0xFF79ACC7, 0x865338, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul423
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -12297829379609722879.999999385
    s21_decimal decimal_check = {{0xFFFFFD99, 0x82EE23FF, 0x27BC86AA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul424
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 12297829379609722879.999999385
    s21_decimal decimal_check = {{0xFFFFFD99, 0x82EE23FF, 0x27BC86AA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul425
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul426
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul427
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -3074457344902430720.0
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul428
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 3074457344902430720.0
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul429
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3074457344902430719.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x475359FF, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul430
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3074457344902430719.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x475359FF, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul431
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3074457344902430720.0000000006
    s21_decimal decimal_check = {{0x6, 0x47535A00, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul432
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3074457344902430720.0000000006
    s21_decimal decimal_check = {{0x6, 0x47535A00, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul433
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914689804861440.0000000006
    s21_decimal decimal_check = {{0x6, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul434
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914689804861440.0000000006
    s21_decimal decimal_check = {{0x6, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul435
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -49191317518438891520
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA8, 0x2, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul436
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 49191317518438891520
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA8, 0x2, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul437
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914689804861439.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x8EA6B3FF, 0xC6AEA154, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul438
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914689804861439.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x8EA6B3FF, 0xC6AEA154, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul439
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul440
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul441
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -48716721233020685042.758212308
    s21_decimal decimal_check = {{0xF8685AD4, 0xDC4F64C4, 0x9D6986FD, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul442
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 48716721233020685042.758212308
    s21_decimal decimal_check = {{0xF8685AD4, 0xDC4F64C4, 0x9D6986FD, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul443
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -4871672123302068504.2758212311
    s21_decimal decimal_check = {{0xF8685AD7, 0xDC4F64C4, 0x9D6986FD, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul444
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 4871672123302068504.2758212311
    s21_decimal decimal_check = {{0xF8685AD7, 0xDC4F64C4, 0x9D6986FD, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul445
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul446
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul447
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -15372.2867245121536000
    s21_decimal decimal_check = {{0x0, 0x5555554D, 0x8, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul448
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 15372.2867245121536000
    s21_decimal decimal_check = {{0x0, 0x5555554D, 0x8, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul449
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -3074.4573449024307200
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul450
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 3074.4573449024307200
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul451
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul452
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul453
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul454
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul455
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000006148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul456
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000006148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul457
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000061489146898048614400
    s21_decimal decimal_check = {{0x0, 0x55555552, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul458
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000061489146898048614400
    s21_decimal decimal_check = {{0x0, 0x55555552, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul459
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul460
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul461
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul462
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul463
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 43385638788822555067041.628136
    s21_decimal decimal_check = {{0xDEC6BFE8, 0x79C37D33, 0x8C2FC25F, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul464
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -43385638788822555067041.628136
    s21_decimal decimal_check = {{0xDEC6BFE8, 0x79C37D33, 0x8C2FC25F, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul465
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul466
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul467
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul468
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul469
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 8803129166201954835059936825
    s21_decimal decimal_check = {{0x38E38E39, 0x55555555, 0x1C71C71C, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul470
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -8803129166201954835059936825
    s21_decimal decimal_check = {{0x38E38E39, 0x55555555, 0x1C71C71C, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul471
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 8803129164152316605602201600
    s21_decimal decimal_check = {{0x0, 0x38E38E39, 0x1C71C71C, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul472
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -8803129164152316605602201600
    s21_decimal decimal_check = {{0x0, 0x38E38E39, 0x1C71C71C, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul473
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 2049638229457735225
    s21_decimal decimal_check = {{0x38E38E39, 0x1C71C71C, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul474
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -2049638229457735225
    s21_decimal decimal_check = {{0x38E38E39, 0x1C71C71C, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul475
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 37809151871301144.549901141093
    s21_decimal decimal_check = {{0x89830465, 0xEF592213, 0x7A2AFF55, 0xC0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul476
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -37809151871301144.549901141093
    s21_decimal decimal_check = {{0x89830465, 0xEF592213, 0x7A2AFF55, 0x800C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul477
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 37809151862498015.385748824487
    s21_decimal decimal_check = {{0x1454E1A7, 0x752E22BE, 0x7A2AFF55, 0xC0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul478
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -37809151862498015.385748824487
    s21_decimal decimal_check = {{0x1454E1A7, 0x752E22BE, 0x7A2AFF55, 0x800C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul479
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 37809151148666055
    s21_decimal decimal_check = {{0xFF79ACC7, 0x865338, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul480
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -37809151148666055
    s21_decimal decimal_check = {{0xFF79ACC7, 0x865338, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul481
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 2863311529.9999999999999998568
    s21_decimal decimal_check = {{0xA40FFA68, 0xAA15E8A7, 0x5C84C202, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul482
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -2863311529.9999999999999998568
    s21_decimal decimal_check = {{0xA40FFA68, 0xAA15E8A7, 0x5C84C202, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul483
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul484
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul485
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 715827882.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul486
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -715827882.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul487
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 715827882.49999999999999999986
    s21_decimal decimal_check = {{0x1A27FFF2, 0xA936C5A3, 0xE74BE506, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul488
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -715827882.49999999999999999986
    s21_decimal decimal_check = {{0x1A27FFF2, 0xA936C5A3, 0xE74BE506, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul489
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 715827882.50000000000000000014
    s21_decimal decimal_check = {{0x1A28000E, 0xA936C5A3, 0xE74BE506, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul490
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -715827882.50000000000000000014
    s21_decimal decimal_check = {{0x1A28000E, 0xA936C5A3, 0xE74BE506, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul491
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1431655765.0000000000000000001
    s21_decimal decimal_check = {{0xD2080001, 0x550AF453, 0x2E426101, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul492
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1431655765.0000000000000000001
    s21_decimal decimal_check = {{0xD2080001, 0x550AF453, 0x2E426101, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul493
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 11453246120
    s21_decimal decimal_check = {{0xAAAAAAA8, 0x2, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul494
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -11453246120
    s21_decimal decimal_check = {{0xAAAAAAA8, 0x2, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul495
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1431655764.9999999999999999999
    s21_decimal decimal_check = {{0xD207FFFF, 0x550AF453, 0x2E426101, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul496
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1431655764.9999999999999999999
    s21_decimal decimal_check = {{0xD207FFFF, 0x550AF453, 0x2E426101, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul497
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul498
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul499
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 11342745561.390343364970342328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x120000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul500
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -11342745561.390343364970342328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x80120000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul501
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 1134274556.1390343364970342329
    s21_decimal decimal_check = {{0xA940E7B9, 0xFB0123D2, 0x24A67FCC, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul502
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -1134274556.1390343364970342329
    s21_decimal decimal_check = {{0xA940E7B9, 0xFB0123D2, 0x24A67FCC, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul503
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 1134274556139034336497034.2328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x40000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul504
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -1134274556139034336497034.2328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x80040000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul505
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000035791394125
    s21_decimal decimal_check = {{0x5555554D, 0x8, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul506
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000035791394125
    s21_decimal decimal_check = {{0x5555554D, 0x8, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul507
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000007158278825
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul508
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000007158278825
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul509
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul510
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul511
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul512
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul513
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000001431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul514
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000001431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul515
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000014316557650
    s21_decimal decimal_check = {{0x55555552, 0x3, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul516
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000014316557650
    s21_decimal decimal_check = {{0x55555552, 0x3, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul517
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 573285387375055566280120.80033
    s21_decimal decimal_check = {{0xCDA51BA1, 0x3B2C6423, 0xB93D0E48, 0x50000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul518
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -573285387375055566280120.80033
    s21_decimal decimal_check = {{0xCDA51BA1, 0x3B2C6423, 0xB93D0E48, 0x80050000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul519
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul520
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul521
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -10101506204535.848243870220179
    s21_decimal decimal_check = {{0x8656BF93, 0x9DDEA388, 0x20A3C524, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul522
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 10101506204535.848243870220179
    s21_decimal decimal_check = {{0x8656BF93, 0x9DDEA388, 0x20A3C524, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul523
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul524
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul525
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul526
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul527
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -8803129166201954835059936825
    s21_decimal decimal_check = {{0x38E38E39, 0x55555555, 0x1C71C71C, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul528
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 8803129166201954835059936825
    s21_decimal decimal_check = {{0x38E38E39, 0x55555555, 0x1C71C71C, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul529
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -8803129164152316605602201600
    s21_decimal decimal_check = {{0x0, 0x38E38E39, 0x1C71C71C, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul530
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 8803129164152316605602201600
    s21_decimal decimal_check = {{0x0, 0x38E38E39, 0x1C71C71C, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul531
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -2049638229457735225
    s21_decimal decimal_check = {{0x38E38E39, 0x1C71C71C, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul532
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 2049638229457735225
    s21_decimal decimal_check = {{0x38E38E39, 0x1C71C71C, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul533
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -37809151871301144.549901141093
    s21_decimal decimal_check = {{0x89830465, 0xEF592213, 0x7A2AFF55, 0x800C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul534
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 37809151871301144.549901141093
    s21_decimal decimal_check = {{0x89830465, 0xEF592213, 0x7A2AFF55, 0xC0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul535
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -37809151862498015.385748824487
    s21_decimal decimal_check = {{0x1454E1A7, 0x752E22BE, 0x7A2AFF55, 0x800C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul536
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 37809151862498015.385748824487
    s21_decimal decimal_check = {{0x1454E1A7, 0x752E22BE, 0x7A2AFF55, 0xC0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul537
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -37809151148666055
    s21_decimal decimal_check = {{0xFF79ACC7, 0x865338, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul538
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 37809151148666055
    s21_decimal decimal_check = {{0xFF79ACC7, 0x865338, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul539
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -2863311529.9999999999999998568
    s21_decimal decimal_check = {{0xA40FFA68, 0xAA15E8A7, 0x5C84C202, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul540
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 2863311529.9999999999999998568
    s21_decimal decimal_check = {{0xA40FFA68, 0xAA15E8A7, 0x5C84C202, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul541
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul542
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul543
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -715827882.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul544
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 715827882.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul545
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -715827882.49999999999999999986
    s21_decimal decimal_check = {{0x1A27FFF2, 0xA936C5A3, 0xE74BE506, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul546
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 715827882.49999999999999999986
    s21_decimal decimal_check = {{0x1A27FFF2, 0xA936C5A3, 0xE74BE506, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul547
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -715827882.50000000000000000014
    s21_decimal decimal_check = {{0x1A28000E, 0xA936C5A3, 0xE74BE506, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul548
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 715827882.50000000000000000014
    s21_decimal decimal_check = {{0x1A28000E, 0xA936C5A3, 0xE74BE506, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul549
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1431655765.0000000000000000001
    s21_decimal decimal_check = {{0xD2080001, 0x550AF453, 0x2E426101, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul550
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1431655765.0000000000000000001
    s21_decimal decimal_check = {{0xD2080001, 0x550AF453, 0x2E426101, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul551
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -11453246120
    s21_decimal decimal_check = {{0xAAAAAAA8, 0x2, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul552
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 11453246120
    s21_decimal decimal_check = {{0xAAAAAAA8, 0x2, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul553
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1431655764.9999999999999999999
    s21_decimal decimal_check = {{0xD207FFFF, 0x550AF453, 0x2E426101, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul554
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1431655764.9999999999999999999
    s21_decimal decimal_check = {{0xD207FFFF, 0x550AF453, 0x2E426101, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul555
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul556
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul557
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -11342745561.390343364970342328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x80120000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul558
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 11342745561.390343364970342328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x120000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul559
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -1134274556.1390343364970342329
    s21_decimal decimal_check = {{0xA940E7B9, 0xFB0123D2, 0x24A67FCC, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul560
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 1134274556.1390343364970342329
    s21_decimal decimal_check = {{0xA940E7B9, 0xFB0123D2, 0x24A67FCC, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul561
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -1134274556139034336497034.2328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x80040000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul562
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 1134274556139034336497034.2328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x40000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul563
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000035791394125
    s21_decimal decimal_check = {{0x5555554D, 0x8, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul564
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000035791394125
    s21_decimal decimal_check = {{0x5555554D, 0x8, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul565
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000007158278825
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul566
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000007158278825
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul567
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul568
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul569
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul570
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul571
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000001431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul572
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000001431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul573
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000014316557650
    s21_decimal decimal_check = {{0x55555552, 0x3, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul574
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000014316557650
    s21_decimal decimal_check = {{0x55555552, 0x3, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul575
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -573285387375055566280120.80033
    s21_decimal decimal_check = {{0xCDA51BA1, 0x3B2C6423, 0xB93D0E48, 0x80050000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul576
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 573285387375055566280120.80033
    s21_decimal decimal_check = {{0xCDA51BA1, 0x3B2C6423, 0xB93D0E48, 0x50000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul577
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul578
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul579
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 10101506204535.848243870220179
    s21_decimal decimal_check = {{0x8656BF93, 0x9DDEA388, 0x20A3C524, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul580
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -10101506204535.848243870220179
    s21_decimal decimal_check = {{0x8656BF93, 0x9DDEA388, 0x20A3C524, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul581
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul582
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul583
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul584
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul585
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 162389070814544768680495185.58
    s21_decimal decimal_check = {{0x9C3D3FDE, 0xD33DA3EB, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul586
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -162389070814544768680495185.58
    s21_decimal decimal_check = {{0x9C3D3FDE, 0xD33DA3EB, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul587
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul588
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul589
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 37809151871301144.549901141093
    s21_decimal decimal_check = {{0x89830465, 0xEF592213, 0x7A2AFF55, 0xC0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul590
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -37809151871301144.549901141093
    s21_decimal decimal_check = {{0x89830465, 0xEF592213, 0x7A2AFF55, 0x800C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul591
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 697455748376297.86264842104701
    s21_decimal decimal_check = {{0xEE096F7D, 0x2AB5E44, 0xE15C2FF4, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul592
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -697455748376297.86264842104701
    s21_decimal decimal_check = {{0xEE096F7D, 0x2AB5E44, 0xE15C2FF4, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul593
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 697455748213908.79187168543020
    s21_decimal decimal_check = {{0xCCBA412C, 0x214F2E51, 0xE15C2FF3, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul594
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -697455748213908.79187168543020
    s21_decimal decimal_check = {{0xCCBA412C, 0x214F2E51, 0xE15C2FF3, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul595
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 697455735046033.30393551696197
    s21_decimal decimal_check = {{0xC7D87145, 0xBF360B54, 0xE15C2FAB, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul596
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -697455735046033.30393551696197
    s21_decimal decimal_check = {{0xC7D87145, 0xBF360B54, 0xE15C2FAB, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul597
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 52818775.009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul598
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -52818775.009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul599
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul600
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul601
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 13204693.752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul602
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -13204693.752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul603
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693.752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul604
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693.752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul605
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693.752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul606
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693.752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul607
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul608
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul609
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 211275100.03803823358278386756
    s21_decimal decimal_check = {{0x44444444, 0x44444444, 0x44444444, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul610
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -211275100.03803823358278386756
    s21_decimal decimal_check = {{0x44444444, 0x44444444, 0x44444444, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul611
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul612
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul613
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul614
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul615
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 209236724.51288935879452631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul616
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -209236724.51288935879452631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul617
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 20923672.451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul618
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -20923672.451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul619
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 20923672451288935879452.631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul620
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -20923672451288935879452.631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul621
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000660234687618869479946
    s21_decimal decimal_check = {{0xE9B5CA0A, 0xCA98CE50, 0x23, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul622
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000660234687618869479946
    s21_decimal decimal_check = {{0xE9B5CA0A, 0xCA98CE50, 0x23, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul623
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000132046937523773895989
    s21_decimal decimal_check = {{0x2EBDF535, 0x2884F610, 0x7, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul624
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000132046937523773895989
    s21_decimal decimal_check = {{0x2EBDF535, 0x2884F610, 0x7, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul625
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul626
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul627
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul628
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul629
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000026409388
    s21_decimal decimal_check = {{0x192F9AC, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul630
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000026409388
    s21_decimal decimal_check = {{0x192F9AC, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul631
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul632
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul633
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 10575248824567332858988.474037
    s21_decimal decimal_check = {{0xDD4A2EB5, 0x822F484A, 0x222BA40B, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul634
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -10575248824567332858988.474037
    s21_decimal decimal_check = {{0xDD4A2EB5, 0x822F484A, 0x222BA40B, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul635
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -1517920227744271651902592220.2
    s21_decimal decimal_check = {{0x930D09A, 0x4A3E7493, 0x310BF11C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul636
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 1517920227744271651902592220.2
    s21_decimal decimal_check = {{0x930D09A, 0x4A3E7493, 0x310BF11C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul637
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -186339899757.44756315902694159
    s21_decimal decimal_check = {{0x6497D30F, 0xB053CF6F, 0x3C35ACDC, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul638
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 186339899757.44756315902694159
    s21_decimal decimal_check = {{0x6497D30F, 0xB053CF6F, 0x3C35ACDC, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul639
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul640
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul641
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul642
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul643
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -162389070814544768680495185.58
    s21_decimal decimal_check = {{0x9C3D3FDE, 0xD33DA3EB, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul644
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 162389070814544768680495185.58
    s21_decimal decimal_check = {{0x9C3D3FDE, 0xD33DA3EB, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul645
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul646
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul647
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -37809151871301144.549901141093
    s21_decimal decimal_check = {{0x89830465, 0xEF592213, 0x7A2AFF55, 0x800C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul648
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 37809151871301144.549901141093
    s21_decimal decimal_check = {{0x89830465, 0xEF592213, 0x7A2AFF55, 0xC0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul649
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -697455748376297.86264842104701
    s21_decimal decimal_check = {{0xEE096F7D, 0x2AB5E44, 0xE15C2FF4, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul650
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 697455748376297.86264842104701
    s21_decimal decimal_check = {{0xEE096F7D, 0x2AB5E44, 0xE15C2FF4, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul651
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -697455748213908.79187168543020
    s21_decimal decimal_check = {{0xCCBA412C, 0x214F2E51, 0xE15C2FF3, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul652
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 697455748213908.79187168543020
    s21_decimal decimal_check = {{0xCCBA412C, 0x214F2E51, 0xE15C2FF3, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul653
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -697455735046033.30393551696197
    s21_decimal decimal_check = {{0xC7D87145, 0xBF360B54, 0xE15C2FAB, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul654
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 697455735046033.30393551696197
    s21_decimal decimal_check = {{0xC7D87145, 0xBF360B54, 0xE15C2FAB, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul655
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -52818775.009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul656
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 52818775.009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul657
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul658
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul659
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -13204693.752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul660
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 13204693.752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul661
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693.752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul662
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693.752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul663
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693.752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul664
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693.752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul665
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul666
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul667
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -211275100.03803823358278386756
    s21_decimal decimal_check = {{0x44444444, 0x44444444, 0x44444444, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul668
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 211275100.03803823358278386756
    s21_decimal decimal_check = {{0x44444444, 0x44444444, 0x44444444, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul669
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul670
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul671
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul672
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul673
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -209236724.51288935879452631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul674
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 209236724.51288935879452631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul675
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -20923672.451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul676
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 20923672.451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul677
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -20923672451288935879452.631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul678
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 20923672451288935879452.631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul679
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000660234687618869479946
    s21_decimal decimal_check = {{0xE9B5CA0A, 0xCA98CE50, 0x23, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul680
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000660234687618869479946
    s21_decimal decimal_check = {{0xE9B5CA0A, 0xCA98CE50, 0x23, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul681
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000132046937523773895989
    s21_decimal decimal_check = {{0x2EBDF535, 0x2884F610, 0x7, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul682
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000132046937523773895989
    s21_decimal decimal_check = {{0x2EBDF535, 0x2884F610, 0x7, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul683
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul684
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul685
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul686
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul687
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000026409388
    s21_decimal decimal_check = {{0x192F9AC, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul688
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000026409388
    s21_decimal decimal_check = {{0x192F9AC, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul689
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul690
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul691
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -10575248824567332858988.474037
    s21_decimal decimal_check = {{0xDD4A2EB5, 0x822F484A, 0x222BA40B, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul692
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 10575248824567332858988.474037
    s21_decimal decimal_check = {{0xDD4A2EB5, 0x822F484A, 0x222BA40B, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul693
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 1517920227744271651902592220.2
    s21_decimal decimal_check = {{0x930D09A, 0x4A3E7493, 0x310BF11C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul694
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -1517920227744271651902592220.2
    s21_decimal decimal_check = {{0x930D09A, 0x4A3E7493, 0x310BF11C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul695
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 186339899757.44756315902694159
    s21_decimal decimal_check = {{0x6497D30F, 0xB053CF6F, 0x3C35ACDC, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul696
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -186339899757.44756315902694159
    s21_decimal decimal_check = {{0x6497D30F, 0xB053CF6F, 0x3C35ACDC, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul697
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul698
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul699
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul700
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul701
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul702
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul703
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 162389070738926464946696025.64
    s21_decimal decimal_check = {{0x932B7F04, 0x6A4C9F42, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul704
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -162389070738926464946696025.64
    s21_decimal decimal_check = {{0x932B7F04, 0x6A4C9F42, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul705
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 37809151862498015.385748824487
    s21_decimal decimal_check = {{0x1454E1A7, 0x752E22BE, 0x7A2AFF55, 0xC0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul706
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -37809151862498015.385748824487
    s21_decimal decimal_check = {{0x1454E1A7, 0x752E22BE, 0x7A2AFF55, 0x800C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul707
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 697455748213908.79187168543020
    s21_decimal decimal_check = {{0xCCBA412C, 0x214F2E51, 0xE15C2FF3, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul708
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -697455748213908.79187168543020
    s21_decimal decimal_check = {{0xCCBA412C, 0x214F2E51, 0xE15C2FF3, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul709
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 697455748051519.72113275896525
    s21_decimal decimal_check = {{0x8CC742CD, 0x3FF2FE5F, 0xE15C2FF2, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul710
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -697455748051519.72113275896525
    s21_decimal decimal_check = {{0x8CC742CD, 0x3FF2FE5F, 0xE15C2FF2, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul711
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 697455734883644.23626247542172
    s21_decimal decimal_check = {{0xE9FE959C, 0xDDD9DBA9, 0xE15C2FAA, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul712
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -697455734883644.23626247542172
    s21_decimal decimal_check = {{0xE9FE959C, 0xDDD9DBA9, 0xE15C2FAA, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul713
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 52818774.997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul714
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -52818774.997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul715
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul716
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul717
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 13204693.749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul718
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -13204693.749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul719
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693.749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul720
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693.749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul721
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693.749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul722
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693.749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul723
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul724
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul725
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 211275099.98884691606434497604
    s21_decimal decimal_check = {{0x44444444, 0x0, 0x44444444, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul726
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -211275099.98884691606434497604
    s21_decimal decimal_check = {{0x44444444, 0x0, 0x44444444, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul727
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul728
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul729
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul730
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul731
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 209236724.46417263756150562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul732
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -209236724.46417263756150562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul733
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 20923672.446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul734
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -20923672.446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul735
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 20923672446417263756150.562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul736
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -20923672446417263756150.562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul737
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000660234687465146612701
    s21_decimal decimal_check = {{0x1F1CFBDD, 0xCA98CE2D, 0x23, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul738
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000660234687465146612701
    s21_decimal decimal_check = {{0x1F1CFBDD, 0xCA98CE2D, 0x23, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul739
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000132046937493029322540
    s21_decimal decimal_check = {{0x638FF2C, 0x2884F609, 0x7, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul740
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000132046937493029322540
    s21_decimal decimal_check = {{0x638FF2C, 0x2884F609, 0x7, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul741
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul742
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul743
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul744
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul745
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul746
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul747
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul748
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul749
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 10575248822105090868937.919094
    s21_decimal decimal_check = {{0x7D468A76, 0x6003A43F, 0x222BA40B, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul750
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -10575248822105090868937.919094
    s21_decimal decimal_check = {{0x7D468A76, 0x6003A43F, 0x222BA40B, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul751
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -1517920227390853308343951696.3
    s21_decimal decimal_check = {{0xEFFE4D23, 0x19328376, 0x310BF11C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul752
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 1517920227390853308343951696.3
    s21_decimal decimal_check = {{0xEFFE4D23, 0x19328376, 0x310BF11C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul753
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -186339899714.06192437020438652
    s21_decimal decimal_check = {{0xF079B07C, 0x741E2292, 0x3C35ACDC, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul754
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 186339899714.06192437020438652
    s21_decimal decimal_check = {{0xF079B07C, 0x741E2292, 0x3C35ACDC, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul755
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul756
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul757
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul758
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul759
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul760
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 162389070776735616809194041.03
    s21_decimal decimal_check = {{0xFD781E47, 0x9EC52196, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul761
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -162389070738926464946696025.64
    s21_decimal decimal_check = {{0x932B7F04, 0x6A4C9F42, 0x34788254, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul762
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 162389070738926464946696025.64
    s21_decimal decimal_check = {{0x932B7F04, 0x6A4C9F42, 0x34788254, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul763
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -37809151862498015.385748824487
    s21_decimal decimal_check = {{0x1454E1A7, 0x752E22BE, 0x7A2AFF55, 0x800C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul764
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 37809151862498015.385748824487
    s21_decimal decimal_check = {{0x1454E1A7, 0x752E22BE, 0x7A2AFF55, 0xC0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul765
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -697455748213908.79187168543020
    s21_decimal decimal_check = {{0xCCBA412C, 0x214F2E51, 0xE15C2FF3, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul766
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 697455748213908.79187168543020
    s21_decimal decimal_check = {{0xCCBA412C, 0x214F2E51, 0xE15C2FF3, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul767
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -697455748051519.72113275896525
    s21_decimal decimal_check = {{0x8CC742CD, 0x3FF2FE5F, 0xE15C2FF2, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul768
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 697455748051519.72113275896525
    s21_decimal decimal_check = {{0x8CC742CD, 0x3FF2FE5F, 0xE15C2FF2, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul769
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -697455734883644.23626247542172
    s21_decimal decimal_check = {{0xE9FE959C, 0xDDD9DBA9, 0xE15C2FAA, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul770
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 697455734883644.23626247542172
    s21_decimal decimal_check = {{0xE9FE959C, 0xDDD9DBA9, 0xE15C2FAA, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul771
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -52818774.997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul772
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 52818774.997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul773
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul774
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul775
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -13204693.749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul776
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 13204693.749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul777
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693.749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul778
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693.749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul779
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693.749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul780
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693.749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul781
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul782
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul783
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -211275099.98884691606434497604
    s21_decimal decimal_check = {{0x44444444, 0x0, 0x44444444, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul784
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 211275099.98884691606434497604
    s21_decimal decimal_check = {{0x44444444, 0x0, 0x44444444, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul785
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul786
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul787
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul788
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul789
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -209236724.46417263756150562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul790
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 209236724.46417263756150562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul791
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -20923672.446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul792
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 20923672.446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul793
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -20923672446417263756150.562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul794
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 20923672446417263756150.562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul795
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000660234687465146612701
    s21_decimal decimal_check = {{0x1F1CFBDD, 0xCA98CE2D, 0x23, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul796
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000660234687465146612701
    s21_decimal decimal_check = {{0x1F1CFBDD, 0xCA98CE2D, 0x23, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul797
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000132046937493029322540
    s21_decimal decimal_check = {{0x638FF2C, 0x2884F609, 0x7, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul798
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000132046937493029322540
    s21_decimal decimal_check = {{0x638FF2C, 0x2884F609, 0x7, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul799
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul800
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul801
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul802
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul803
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul804
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul805
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul806
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul807
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -10575248822105090868937.919094
    s21_decimal decimal_check = {{0x7D468A76, 0x6003A43F, 0x222BA40B, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul808
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 10575248822105090868937.919094
    s21_decimal decimal_check = {{0x7D468A76, 0x6003A43F, 0x222BA40B, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul809
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 1517920227390853308343951696.3
    s21_decimal decimal_check = {{0xEFFE4D23, 0x19328376, 0x310BF11C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul810
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -1517920227390853308343951696.3
    s21_decimal decimal_check = {{0xEFFE4D23, 0x19328376, 0x310BF11C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul811
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 186339899714.06192437020438652
    s21_decimal decimal_check = {{0xF079B07C, 0x741E2292, 0x3C35ACDC, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul812
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -186339899714.06192437020438652
    s21_decimal decimal_check = {{0xF079B07C, 0x741E2292, 0x3C35ACDC, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul813
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul814
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul815
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul816
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul817
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 162389067710850691399003335
    s21_decimal decimal_check = {{0xFF79ACC7, 0xFFFFFFFF, 0x865338, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul818
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -162389067710850691399003335
    s21_decimal decimal_check = {{0xFF79ACC7, 0xFFFFFFFF, 0x865338, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul819
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 162389067673041540250337280
    s21_decimal decimal_check = {{0x0, 0xFF79ACC7, 0x865338, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul820
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -162389067673041540250337280
    s21_decimal decimal_check = {{0x0, 0xFF79ACC7, 0x865338, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul821
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 37809151148666055
    s21_decimal decimal_check = {{0xFF79ACC7, 0x865338, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul822
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -37809151148666055
    s21_decimal decimal_check = {{0xFF79ACC7, 0x865338, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul823
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 697455735046033.30393551696197
    s21_decimal decimal_check = {{0xC7D87145, 0xBF360B54, 0xE15C2FAB, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul824
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -697455735046033.30393551696197
    s21_decimal decimal_check = {{0xC7D87145, 0xBF360B54, 0xE15C2FAB, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul825
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 697455734883644.23626247542172
    s21_decimal decimal_check = {{0xE9FE959C, 0xDDD9DBA9, 0xE15C2FAA, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul826
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -697455734883644.23626247542172
    s21_decimal decimal_check = {{0xE9FE959C, 0xDDD9DBA9, 0xE15C2FAA, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul827
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 697455721715769
    s21_decimal decimal_check = {{0x108A1839, 0x27A55, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul828
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -697455721715769
    s21_decimal decimal_check = {{0x108A1839, 0x27A55, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul829
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 52818773.999999999999999997359
    s21_decimal decimal_check = {{0xA9BFF5AF, 0xF0E83FEA, 0xAAAAAA73, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul830
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -52818773.999999999999999997359
    s21_decimal decimal_check = {{0xA9BFF5AF, 0xF0E83FEA, 0xAAAAAA73, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul831
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul832
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul833
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 13204693.5
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul834
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -13204693.5
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul835
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693.499999999999999999997
    s21_decimal decimal_check = {{0xAA6FFFFD, 0xFC3A0FFA, 0x2AAAAA9C, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul836
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693.499999999999999999997
    s21_decimal decimal_check = {{0xAA6FFFFD, 0xFC3A0FFA, 0x2AAAAA9C, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul837
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 13204693.500000000000000000003
    s21_decimal decimal_check = {{0xAA700003, 0xFC3A0FFA, 0x2AAAAA9C, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul838
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -13204693.500000000000000000003
    s21_decimal decimal_check = {{0xAA700003, 0xFC3A0FFA, 0x2AAAAA9C, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul839
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.000000000000000000003
    s21_decimal decimal_check = {{0x54E00003, 0xF8741FF5, 0x55555539, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul840
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.000000000000000000003
    s21_decimal decimal_check = {{0x54E00003, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul841
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 211275096
    s21_decimal decimal_check = {{0xC97CD58, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul842
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -211275096
    s21_decimal decimal_check = {{0xC97CD58, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul843
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409386.999999999999999999997
    s21_decimal decimal_check = {{0x54DFFFFD, 0xF8741FF5, 0x55555539, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul844
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409386.999999999999999999997
    s21_decimal decimal_check = {{0x54DFFFFD, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul845
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul846
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul847
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 209236720.51380999118065508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul848
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -209236720.51380999118065508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul849
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 20923672.051380999118065508860
    s21_decimal decimal_check = {{0x3BF421FC, 0xB95D0366, 0x439BA7E6, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul850
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -20923672.051380999118065508860
    s21_decimal decimal_check = {{0x3BF421FC, 0xB95D0366, 0x439BA7E6, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul851
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 20923672051380999118065.508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul852
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -20923672051380999118065.508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul853
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000660234675
    s21_decimal decimal_check = {{0x275A61B3, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul854
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000660234675
    s21_decimal decimal_check = {{0x275A61B3, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul855
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000132046935
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul856
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000132046935
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul857
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul858
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul859
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul860
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul861
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul862
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul863
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000264093870
    s21_decimal decimal_check = {{0xFBDC0AE, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul864
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000264093870
    s21_decimal decimal_check = {{0xFBDC0AE, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul865
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 10575248622445743161168.257945
    s21_decimal decimal_check = {{0x2D766399, 0x8D2F2559, 0x222BA400, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul866
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -10575248622445743161168.257945
    s21_decimal decimal_check = {{0x2D766399, 0x8D2F2559, 0x222BA400, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul867
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -1517920198732713195385438703.6
    s21_decimal decimal_check = {{0xB557935C, 0x9014D982, 0x310BF10C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul868
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 1517920198732713195385438703.6
    s21_decimal decimal_check = {{0xB557935C, 0x9014D982, 0x310BF10C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul869
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -186339896195.98840622531843224
    s21_decimal decimal_check = {{0xCF019498, 0x61CF580D, 0x3C35ACC9, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul870
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 186339896195.98840622531843224
    s21_decimal decimal_check = {{0xCF019498, 0x61CF580D, 0x3C35ACC9, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul871
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul872
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul873
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul874
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul875
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -162389067710850691399003335
    s21_decimal decimal_check = {{0xFF79ACC7, 0xFFFFFFFF, 0x865338, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul876
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 162389067710850691399003335
    s21_decimal decimal_check = {{0xFF79ACC7, 0xFFFFFFFF, 0x865338, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul877
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -162389067673041540250337280
    s21_decimal decimal_check = {{0x0, 0xFF79ACC7, 0x865338, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul878
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 162389067673041540250337280
    s21_decimal decimal_check = {{0x0, 0xFF79ACC7, 0x865338, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul879
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -37809151148666055
    s21_decimal decimal_check = {{0xFF79ACC7, 0x865338, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul880
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 37809151148666055
    s21_decimal decimal_check = {{0xFF79ACC7, 0x865338, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul881
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -697455735046033.30393551696197
    s21_decimal decimal_check = {{0xC7D87145, 0xBF360B54, 0xE15C2FAB, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul882
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 697455735046033.30393551696197
    s21_decimal decimal_check = {{0xC7D87145, 0xBF360B54, 0xE15C2FAB, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul883
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -697455734883644.23626247542172
    s21_decimal decimal_check = {{0xE9FE959C, 0xDDD9DBA9, 0xE15C2FAA, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul884
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 697455734883644.23626247542172
    s21_decimal decimal_check = {{0xE9FE959C, 0xDDD9DBA9, 0xE15C2FAA, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul885
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -697455721715769
    s21_decimal decimal_check = {{0x108A1839, 0x27A55, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul886
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 697455721715769
    s21_decimal decimal_check = {{0x108A1839, 0x27A55, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul887
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -52818773.999999999999999997359
    s21_decimal decimal_check = {{0xA9BFF5AF, 0xF0E83FEA, 0xAAAAAA73, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul888
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 52818773.999999999999999997359
    s21_decimal decimal_check = {{0xA9BFF5AF, 0xF0E83FEA, 0xAAAAAA73, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul889
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul890
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul891
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -13204693.5
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul892
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 13204693.5
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul893
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693.499999999999999999997
    s21_decimal decimal_check = {{0xAA6FFFFD, 0xFC3A0FFA, 0x2AAAAA9C, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul894
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693.499999999999999999997
    s21_decimal decimal_check = {{0xAA6FFFFD, 0xFC3A0FFA, 0x2AAAAA9C, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul895
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -13204693.500000000000000000003
    s21_decimal decimal_check = {{0xAA700003, 0xFC3A0FFA, 0x2AAAAA9C, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul896
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 13204693.500000000000000000003
    s21_decimal decimal_check = {{0xAA700003, 0xFC3A0FFA, 0x2AAAAA9C, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul897
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.000000000000000000003
    s21_decimal decimal_check = {{0x54E00003, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul898
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.000000000000000000003
    s21_decimal decimal_check = {{0x54E00003, 0xF8741FF5, 0x55555539, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul899
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -211275096
    s21_decimal decimal_check = {{0xC97CD58, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul900
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 211275096
    s21_decimal decimal_check = {{0xC97CD58, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul901
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409386.999999999999999999997
    s21_decimal decimal_check = {{0x54DFFFFD, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul902
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409386.999999999999999999997
    s21_decimal decimal_check = {{0x54DFFFFD, 0xF8741FF5, 0x55555539, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul903
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul904
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul905
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -209236720.51380999118065508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul906
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 209236720.51380999118065508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul907
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -20923672.051380999118065508860
    s21_decimal decimal_check = {{0x3BF421FC, 0xB95D0366, 0x439BA7E6, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul908
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 20923672.051380999118065508860
    s21_decimal decimal_check = {{0x3BF421FC, 0xB95D0366, 0x439BA7E6, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul909
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -20923672051380999118065.508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul910
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 20923672051380999118065.508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul911
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000660234675
    s21_decimal decimal_check = {{0x275A61B3, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul912
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000660234675
    s21_decimal decimal_check = {{0x275A61B3, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul913
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000132046935
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul914
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000132046935
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul915
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul916
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul917
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul918
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul919
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul920
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul921
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000264093870
    s21_decimal decimal_check = {{0xFBDC0AE, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul922
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000264093870
    s21_decimal decimal_check = {{0xFBDC0AE, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul923
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -10575248622445743161168.257945
    s21_decimal decimal_check = {{0x2D766399, 0x8D2F2559, 0x222BA400, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul924
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 10575248622445743161168.257945
    s21_decimal decimal_check = {{0x2D766399, 0x8D2F2559, 0x222BA400, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul925
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 1517920198732713195385438703.6
    s21_decimal decimal_check = {{0xB557935C, 0x9014D982, 0x310BF10C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul926
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -1517920198732713195385438703.6
    s21_decimal decimal_check = {{0xB557935C, 0x9014D982, 0x310BF10C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul927
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 186339896195.98840622531843224
    s21_decimal decimal_check = {{0xCF019498, 0x61CF580D, 0x3C35ACC9, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul928
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -186339896195.98840622531843224
    s21_decimal decimal_check = {{0xCF019498, 0x61CF580D, 0x3C35ACC9, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul929
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 52818775009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul930
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -52818775009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul931
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 52818774997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul932
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -52818774997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul933
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 12297829382473034409.999999385
    s21_decimal decimal_check = {{0x82EE2199, 0xAAAAAAAA, 0x27BC86AA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul934
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -12297829382473034409.999999385
    s21_decimal decimal_check = {{0x82EE2199, 0xAAAAAAAA, 0x27BC86AA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul935
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 12297829379609722879.999999385
    s21_decimal decimal_check = {{0xFFFFFD99, 0x82EE23FF, 0x27BC86AA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul936
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -12297829379609722879.999999385
    s21_decimal decimal_check = {{0xFFFFFD99, 0x82EE23FF, 0x27BC86AA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul937
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 2863311529.9999999999999998568
    s21_decimal decimal_check = {{0xA40FFA68, 0xAA15E8A7, 0x5C84C202, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul938
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -2863311529.9999999999999998568
    s21_decimal decimal_check = {{0xA40FFA68, 0xAA15E8A7, 0x5C84C202, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul939
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 52818775.009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul940
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -52818775.009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul941
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 52818774.997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul942
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -52818774.997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul943
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 52818773.999999999999999997359
    s21_decimal decimal_check = {{0xA9BFF5AF, 0xF0E83FEA, 0xAAAAAA73, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul944
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -52818773.999999999999999997359
    s21_decimal decimal_check = {{0xA9BFF5AF, 0xF0E83FEA, 0xAAAAAA73, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul945
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 3.9999999999999999999999996000
    s21_decimal decimal_check = {{0x3FFFF060, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul946
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -3.9999999999999999999999996000
    s21_decimal decimal_check = {{0x3FFFF060, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul947
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal_check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul948
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal_check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul949
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.9999999999999999999999999500
    s21_decimal decimal_check = {{0xFFFFE0C, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul950
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.9999999999999999999999999500
    s21_decimal decimal_check = {{0xFFFFE0C, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul951
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.9999999999999999999999999498
    s21_decimal decimal_check = {{0xFFFFE0A, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul952
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.9999999999999999999999999498
    s21_decimal decimal_check = {{0xFFFFE0A, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul953
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.9999999999999999999999999502
    s21_decimal decimal_check = {{0xFFFFE0E, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul954
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.9999999999999999999999999502
    s21_decimal decimal_check = {{0xFFFFE0E, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul955
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.9999999999999999999999999002
    s21_decimal decimal_check = {{0x1FFFFC1A, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul956
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.9999999999999999999999999002
    s21_decimal decimal_check = {{0x1FFFFC1A, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul957
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 15.999999999999999999999999200
    s21_decimal decimal_check = {{0x7FFFFCE0, 0xFD0803CE, 0x33B2E3C9, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul958
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -15.999999999999999999999999200
    s21_decimal decimal_check = {{0x7FFFFCE0, 0xFD0803CE, 0x33B2E3C9, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul959
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.9999999999999999999999998998
    s21_decimal decimal_check = {{0x1FFFFC16, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul960
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.9999999999999999999999998998
    s21_decimal decimal_check = {{0x1FFFFC16, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul961
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul962
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul963
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 15.845632502852867518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul964
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -15.845632502852867518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul965
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 1.5845632502852867518708789276
    s21_decimal decimal_check = {{0x3333301C, 0x33333333, 0x33333333, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul966
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -1.5845632502852867518708789276
    s21_decimal decimal_check = {{0x3333301C, 0x33333333, 0x33333333, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul967
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 1584563250285286.7518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul968
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -1584563250285286.7518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul969
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000050000000000000
    s21_decimal decimal_check = {{0x883D2000, 0x2D79, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul970
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000050000000000000
    s21_decimal decimal_check = {{0x883D2000, 0x2D79, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul971
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000010000000000000
    s21_decimal decimal_check = {{0x4E72A000, 0x918, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul972
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000010000000000000
    s21_decimal decimal_check = {{0x4E72A000, 0x918, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul973
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul974
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul975
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul976
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul977
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000002
    s21_decimal decimal_check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul978
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000002
    s21_decimal decimal_check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul979
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000020
    s21_decimal decimal_check = {{0x14, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul980
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000020
    s21_decimal decimal_check = {{0x14, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul981
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 800870434625820.2177254820354
    s21_decimal decimal_check = {{0xDCA98A02, 0x8CE489CB, 0x19E0A51C, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul982
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -800870434625820.2177254820354
    s21_decimal decimal_check = {{0xDCA98A02, 0x8CE489CB, 0x19E0A51C, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul983
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -114953080791516531253.48487852
    s21_decimal decimal_check = {{0x90D572AC, 0xA3EBFD4F, 0x2524B22B, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul984
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 114953080791516531253.48487852
    s21_decimal decimal_check = {{0x90D572AC, 0xA3EBFD4F, 0x2524B22B, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul985
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -14111.641152139457551613630632
    s21_decimal decimal_check = {{0xD22D18A8, 0xB969E962, 0x2D98E03F, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul986
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 14111.641152139457551613630632
    s21_decimal decimal_check = {{0xD22D18A8, 0xB969E962, 0x2D98E03F, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul987
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -52818775009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul988
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 52818775009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul989
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -52818774997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul990
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 52818774997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul991
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -12297829382473034409.999999385
    s21_decimal decimal_check = {{0x82EE2199, 0xAAAAAAAA, 0x27BC86AA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul992
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 12297829382473034409.999999385
    s21_decimal decimal_check = {{0x82EE2199, 0xAAAAAAAA, 0x27BC86AA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul993
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -12297829379609722879.999999385
    s21_decimal decimal_check = {{0xFFFFFD99, 0x82EE23FF, 0x27BC86AA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul994
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 12297829379609722879.999999385
    s21_decimal decimal_check = {{0xFFFFFD99, 0x82EE23FF, 0x27BC86AA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul995
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -2863311529.9999999999999998568
    s21_decimal decimal_check = {{0xA40FFA68, 0xAA15E8A7, 0x5C84C202, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul996
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 2863311529.9999999999999998568
    s21_decimal decimal_check = {{0xA40FFA68, 0xAA15E8A7, 0x5C84C202, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul997
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -52818775.009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul998
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 52818775.009509558395695964249
    s21_decimal decimal_check = {{0xAAAAA059, 0xAAAAAAAA, 0xAAAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul999
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -52818774.997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1000
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 52818774.997211729016086241369
    s21_decimal decimal_check = {{0xAAAAA059, 0x0, 0xAAAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1001
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -52818773.999999999999999997359
    s21_decimal decimal_check = {{0xA9BFF5AF, 0xF0E83FEA, 0xAAAAAA73, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1002
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 52818773.999999999999999997359
    s21_decimal decimal_check = {{0xA9BFF5AF, 0xF0E83FEA, 0xAAAAAA73, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1003
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -3.9999999999999999999999996000
    s21_decimal decimal_check = {{0x3FFFF060, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1004
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 3.9999999999999999999999996000
    s21_decimal decimal_check = {{0x3FFFF060, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1005
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal_check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1006
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal_check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1007
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.9999999999999999999999999500
    s21_decimal decimal_check = {{0xFFFFE0C, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1008
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.9999999999999999999999999500
    s21_decimal decimal_check = {{0xFFFFE0C, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1009
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.9999999999999999999999999498
    s21_decimal decimal_check = {{0xFFFFE0A, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1010
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.9999999999999999999999999498
    s21_decimal decimal_check = {{0xFFFFE0A, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1011
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.9999999999999999999999999502
    s21_decimal decimal_check = {{0xFFFFE0E, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1012
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.9999999999999999999999999502
    s21_decimal decimal_check = {{0xFFFFE0E, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1013
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.9999999999999999999999999002
    s21_decimal decimal_check = {{0x1FFFFC1A, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1014
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.9999999999999999999999999002
    s21_decimal decimal_check = {{0x1FFFFC1A, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1015
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -15.999999999999999999999999200
    s21_decimal decimal_check = {{0x7FFFFCE0, 0xFD0803CE, 0x33B2E3C9, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1016
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 15.999999999999999999999999200
    s21_decimal decimal_check = {{0x7FFFFCE0, 0xFD0803CE, 0x33B2E3C9, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1017
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.9999999999999999999999998998
    s21_decimal decimal_check = {{0x1FFFFC16, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1018
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.9999999999999999999999998998
    s21_decimal decimal_check = {{0x1FFFFC16, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1019
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1020
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1021
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -15.845632502852867518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1022
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 15.845632502852867518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1023
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -1.5845632502852867518708789276
    s21_decimal decimal_check = {{0x3333301C, 0x33333333, 0x33333333, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1024
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 1.5845632502852867518708789276
    s21_decimal decimal_check = {{0x3333301C, 0x33333333, 0x33333333, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1025
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -1584563250285286.7518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1026
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 1584563250285286.7518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1027
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000050000000000000
    s21_decimal decimal_check = {{0x883D2000, 0x2D79, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1028
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000050000000000000
    s21_decimal decimal_check = {{0x883D2000, 0x2D79, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1029
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000010000000000000
    s21_decimal decimal_check = {{0x4E72A000, 0x918, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1030
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000010000000000000
    s21_decimal decimal_check = {{0x4E72A000, 0x918, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1031
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1032
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1033
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1034
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1035
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000002
    s21_decimal decimal_check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1036
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000002
    s21_decimal decimal_check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1037
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000020
    s21_decimal decimal_check = {{0x14, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1038
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000020
    s21_decimal decimal_check = {{0x14, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1039
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -800870434625820.2177254820354
    s21_decimal decimal_check = {{0xDCA98A02, 0x8CE489CB, 0x19E0A51C, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1040
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 800870434625820.2177254820354
    s21_decimal decimal_check = {{0xDCA98A02, 0x8CE489CB, 0x19E0A51C, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1041
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 114953080791516531253.48487852
    s21_decimal decimal_check = {{0x90D572AC, 0xA3EBFD4F, 0x2524B22B, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1042
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -114953080791516531253.48487852
    s21_decimal decimal_check = {{0x90D572AC, 0xA3EBFD4F, 0x2524B22B, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1043
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 14111.641152139457551613630632
    s21_decimal decimal_check = {{0xD22D18A8, 0xB969E962, 0x2D98E03F, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1044
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -14111.641152139457551613630632
    s21_decimal decimal_check = {{0xD22D18A8, 0xB969E962, 0x2D98E03F, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1045
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1046
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1047
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1048
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1049
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1050
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1051
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1052
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1053
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1054
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1055
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1056
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1057
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1058
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1059
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1060
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1061
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal_check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1062
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal_check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1063
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1064
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1065
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1066
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1067
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1068
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1069
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal_check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1070
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal_check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1071
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal_check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1072
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal_check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1073
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1074
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1075
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal_check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1076
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal_check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1077
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1078
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1079
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1080
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1081
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1082
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1083
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1084
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1085
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1086
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1087
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1088
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1089
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1090
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1091
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1092
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1093
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1094
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1095
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1096
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1097
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal_check = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1098
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal_check = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1099
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -57476540395758265626.742442133
    s21_decimal decimal_check = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1100
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 57476540395758265626.742442133
    s21_decimal decimal_check = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1101
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -7055.820576069728775806815669
    s21_decimal decimal_check = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1102
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 7055.820576069728775806815669
    s21_decimal decimal_check = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1103
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1104
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1105
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1106
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1107
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1108
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1109
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1110
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1111
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1112
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1113
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1114
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1115
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1116
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1117
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1118
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1119
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal_check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1120
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal_check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1121
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1122
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1123
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1124
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1125
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1126
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1127
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal_check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1128
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal_check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1129
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal_check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1130
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal_check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1131
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1132
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1133
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal_check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1134
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal_check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1135
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1136
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1137
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1138
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1139
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1140
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1141
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1142
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1143
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1144
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1145
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1146
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1147
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1148
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1149
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1150
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1151
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1152
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1153
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1154
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1155
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal_check = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1156
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal_check = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1157
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 57476540395758265626.742442133
    s21_decimal decimal_check = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1158
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -57476540395758265626.742442133
    s21_decimal decimal_check = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1159
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 7055.820576069728775806815669
    s21_decimal decimal_check = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1160
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -7055.820576069728775806815669
    s21_decimal decimal_check = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1161
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 13204693752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1162
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -13204693752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1163
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 13204693749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1164
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -13204693749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1165
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 3074457345618258602.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1166
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -3074457345618258602.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1167
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 3074457344902430720.0
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1168
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -3074457344902430720.0
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1169
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 715827882.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1170
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -715827882.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1171
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 13204693.752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1172
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -13204693.752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1173
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 13204693.749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1174
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -13204693.749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1175
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 13204693.5
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1176
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -13204693.5
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1177
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.9999999999999999999999999500
    s21_decimal decimal_check = {{0xFFFFE0C, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1178
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.9999999999999999999999999500
    s21_decimal decimal_check = {{0xFFFFE0C, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1179
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1180
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1181
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.25
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1182
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.25
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1183
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1184
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1185
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1186
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1187
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1188
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1189
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 4.0
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1190
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -4.0
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1191
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1192
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1193
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 39614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1194
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -39614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1195
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 3.9614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1196
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -3.9614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1197
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1198
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1199
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 396140812571321.68796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1200
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -396140812571321.68796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1201
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.00000000000000125
    s21_decimal decimal_check = {{0x7D, 0x0, 0x0, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1202
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.00000000000000125
    s21_decimal decimal_check = {{0x7D, 0x0, 0x0, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1203
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.00000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1204
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.00000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1205
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1206
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1207
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1208
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1209
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul1210
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul1211
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1212
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1213
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 200217608656455.05443137051885
    s21_decimal decimal_check = {{0xA7A7DCED, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1214
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -200217608656455.05443137051885
    s21_decimal decimal_check = {{0xA7A7DCED, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1215
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -28738270197879132813.371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1216
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 28738270197879132813.371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1217
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -3527.9102880348643879034078345
    s21_decimal decimal_check = {{0xD70C489, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1218
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 3527.9102880348643879034078345
    s21_decimal decimal_check = {{0xD70C489, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1219
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -13204693752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1220
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 13204693752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1221
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -13204693749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1222
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 13204693749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1223
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -3074457345618258602.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1224
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 3074457345618258602.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1225
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -3074457344902430720.0
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1226
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 3074457344902430720.0
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1227
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -715827882.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1228
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 715827882.5
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1229
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -13204693.752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1230
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 13204693.752377389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1231
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -13204693.749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1232
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 13204693.749302932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1233
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -13204693.5
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1234
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 13204693.5
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1235
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.9999999999999999999999999500
    s21_decimal decimal_check = {{0xFFFFE0C, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1236
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.9999999999999999999999999500
    s21_decimal decimal_check = {{0xFFFFE0C, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1237
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1238
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1239
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.25
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80020000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1240
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.25
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x20000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1241
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1242
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1243
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1244
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1245
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1246
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1247
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -4.0
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1248
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 4.0
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1249
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1250
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1251
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -39614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1252
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 39614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1253
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -3.9614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1254
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 3.9614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1255
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1256
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1257
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -396140812571321.68796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1258
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 396140812571321.68796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1259
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.00000000000000125
    s21_decimal decimal_check = {{0x7D, 0x0, 0x0, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1260
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.00000000000000125
    s21_decimal decimal_check = {{0x7D, 0x0, 0x0, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1261
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.00000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1262
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.00000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1263
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1264
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1265
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1266
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1267
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul1268
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul1269
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1270
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1271
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -200217608656455.05443137051885
    s21_decimal decimal_check = {{0xA7A7DCED, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1272
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 200217608656455.05443137051885
    s21_decimal decimal_check = {{0xA7A7DCED, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1273
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 28738270197879132813.371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1274
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -28738270197879132813.371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1275
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 3527.9102880348643879034078345
    s21_decimal decimal_check = {{0xD70C489, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1276
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -3527.9102880348643879034078345
    s21_decimal decimal_check = {{0xD70C489, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1277
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 13204693752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1278
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -13204693752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1279
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 13204693749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1280
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -13204693749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1281
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 3074457345618258602.4999999994
    s21_decimal decimal_check = {{0x475359FA, 0xAAAAAAAA, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1282
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -3074457345618258602.4999999994
    s21_decimal decimal_check = {{0x475359FA, 0xAAAAAAAA, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1283
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 3074457344902430719.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x475359FF, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1284
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -3074457344902430719.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x475359FF, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1285
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 715827882.49999999999999999986
    s21_decimal decimal_check = {{0x1A27FFF2, 0xA936C5A3, 0xE74BE506, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1286
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -715827882.49999999999999999986
    s21_decimal decimal_check = {{0x1A27FFF2, 0xA936C5A3, 0xE74BE506, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1287
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 13204693.752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1288
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -13204693.752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1289
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 13204693.749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1290
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -13204693.749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1291
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 13204693.499999999999999999997
    s21_decimal decimal_check = {{0xAA6FFFFD, 0xFC3A0FFA, 0x2AAAAA9C, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1292
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -13204693.499999999999999999997
    s21_decimal decimal_check = {{0xAA6FFFFD, 0xFC3A0FFA, 0x2AAAAA9C, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1293
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.9999999999999999999999999498
    s21_decimal decimal_check = {{0xFFFFE0A, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1294
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.9999999999999999999999999498
    s21_decimal decimal_check = {{0xFFFFE0A, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1295
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1296
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1297
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1298
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1299
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.2499999999999999999999999999
    s21_decimal decimal_check = {{0x43FFFFFF, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1300
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.2499999999999999999999999999
    s21_decimal decimal_check = {{0x43FFFFFF, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1301
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1302
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1303
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1304
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1305
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 3.9999999999999999999999999992
    s21_decimal decimal_check = {{0x3FFFFFF8, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1306
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -3.9999999999999999999999999992
    s21_decimal decimal_check = {{0x3FFFFFF8, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1307
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1308
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1309
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 39614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1310
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -39614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1311
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 3.9614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1312
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -3.9614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1313
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.3961408125713216879677197516
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1314
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.3961408125713216879677197516
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1315
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 396140812571321.68796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1316
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -396140812571321.68796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1317
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1318
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1319
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1320
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1321
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1322
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1323
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1324
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1325
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul1326
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul1327
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1328
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1329
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 200217608656455.05443137051881
    s21_decimal decimal_check = {{0xA7A7DCE9, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1330
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -200217608656455.05443137051881
    s21_decimal decimal_check = {{0xA7A7DCE9, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1331
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -28738270197879132813.371221061
    s21_decimal decimal_check = {{0xEA15A445, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1332
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 28738270197879132813.371221061
    s21_decimal decimal_check = {{0xEA15A445, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1333
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -3527.9102880348643879034078338
    s21_decimal decimal_check = {{0xD70C482, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1334
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 3527.9102880348643879034078338
    s21_decimal decimal_check = {{0xD70C482, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1335
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -13204693752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1336
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 13204693752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1337
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -13204693749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1338
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 13204693749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1339
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -3074457345618258602.4999999994
    s21_decimal decimal_check = {{0x475359FA, 0xAAAAAAAA, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1340
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 3074457345618258602.4999999994
    s21_decimal decimal_check = {{0x475359FA, 0xAAAAAAAA, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1341
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -3074457344902430719.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x475359FF, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1342
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 3074457344902430719.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x475359FF, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1343
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -715827882.49999999999999999986
    s21_decimal decimal_check = {{0x1A27FFF2, 0xA936C5A3, 0xE74BE506, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1344
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 715827882.49999999999999999986
    s21_decimal decimal_check = {{0x1A27FFF2, 0xA936C5A3, 0xE74BE506, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1345
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -13204693.752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1346
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 13204693.752377389598923991720
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1347
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -13204693.749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1348
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 13204693.749302932254021561000
    s21_decimal decimal_check = {{0x2AAAAAA8, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1349
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -13204693.499999999999999999997
    s21_decimal decimal_check = {{0xAA6FFFFD, 0xFC3A0FFA, 0x2AAAAA9C, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1350
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 13204693.499999999999999999997
    s21_decimal decimal_check = {{0xAA6FFFFD, 0xFC3A0FFA, 0x2AAAAA9C, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1351
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.9999999999999999999999999498
    s21_decimal decimal_check = {{0xFFFFE0A, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1352
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.9999999999999999999999999498
    s21_decimal decimal_check = {{0xFFFFE0A, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1353
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1354
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1355
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1356
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1357
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.2499999999999999999999999999
    s21_decimal decimal_check = {{0x43FFFFFF, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1358
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.2499999999999999999999999999
    s21_decimal decimal_check = {{0x43FFFFFF, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1359
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1360
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1361
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1362
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1363
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -3.9999999999999999999999999992
    s21_decimal decimal_check = {{0x3FFFFFF8, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1364
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 3.9999999999999999999999999992
    s21_decimal decimal_check = {{0x3FFFFFF8, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1365
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1366
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1367
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -39614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1368
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 39614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1369
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -3.9614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1370
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 3.9614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1371
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.3961408125713216879677197516
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1372
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.3961408125713216879677197516
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1373
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -396140812571321.68796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1374
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 396140812571321.68796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1375
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1376
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1377
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1378
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1379
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1380
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1381
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1382
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1383
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul1384
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul1385
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1386
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1387
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -200217608656455.05443137051881
    s21_decimal decimal_check = {{0xA7A7DCE9, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1388
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 200217608656455.05443137051881
    s21_decimal decimal_check = {{0xA7A7DCE9, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1389
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 28738270197879132813.371221061
    s21_decimal decimal_check = {{0xEA15A445, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1390
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -28738270197879132813.371221061
    s21_decimal decimal_check = {{0xEA15A445, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1391
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 3527.9102880348643879034078338
    s21_decimal decimal_check = {{0xD70C482, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1392
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -3527.9102880348643879034078338
    s21_decimal decimal_check = {{0xD70C482, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1393
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 13204693752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1394
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -13204693752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1395
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 13204693749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1396
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -13204693749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1397
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 3074457345618258602.5000000006
    s21_decimal decimal_check = {{0x47535A06, 0xAAAAAAAA, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1398
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -3074457345618258602.5000000006
    s21_decimal decimal_check = {{0x47535A06, 0xAAAAAAAA, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1399
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 3074457344902430720.0000000006
    s21_decimal decimal_check = {{0x6, 0x47535A00, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1400
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -3074457344902430720.0000000006
    s21_decimal decimal_check = {{0x6, 0x47535A00, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1401
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 715827882.50000000000000000014
    s21_decimal decimal_check = {{0x1A28000E, 0xA936C5A3, 0xE74BE506, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1402
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -715827882.50000000000000000014
    s21_decimal decimal_check = {{0x1A28000E, 0xA936C5A3, 0xE74BE506, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1403
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 13204693.752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1404
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -13204693.752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1405
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 13204693.749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1406
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -13204693.749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1407
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 13204693.500000000000000000003
    s21_decimal decimal_check = {{0xAA700003, 0xFC3A0FFA, 0x2AAAAA9C, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1408
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -13204693.500000000000000000003
    s21_decimal decimal_check = {{0xAA700003, 0xFC3A0FFA, 0x2AAAAA9C, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1409
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.9999999999999999999999999502
    s21_decimal decimal_check = {{0xFFFFE0E, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1410
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.9999999999999999999999999502
    s21_decimal decimal_check = {{0xFFFFE0E, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1411
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal_check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1412
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal_check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1413
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1414
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1415
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1416
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1417
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.2500000000000000000000000001
    s21_decimal decimal_check = {{0x44000001, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1418
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.2500000000000000000000000001
    s21_decimal decimal_check = {{0x44000001, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1419
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000002
    s21_decimal decimal_check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1420
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000002
    s21_decimal decimal_check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1421
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 4.0000000000000000000000000008
    s21_decimal decimal_check = {{0x40000008, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1422
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -4.0000000000000000000000000008
    s21_decimal decimal_check = {{0x40000008, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1423
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1424
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1425
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 39614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1426
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -39614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1427
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 3.9614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1428
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -3.9614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1429
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.3961408125713216879677197518
    s21_decimal decimal_check = {{0xCCCCCCCE, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1430
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.3961408125713216879677197518
    s21_decimal decimal_check = {{0xCCCCCCCE, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1431
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 396140812571321.68796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1432
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -396140812571321.68796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1433
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1434
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1435
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1436
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1437
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1438
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1439
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1440
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1441
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1442
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1443
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1444
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1445
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 200217608656455.05443137051889
    s21_decimal decimal_check = {{0xA7A7DCF1, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1446
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -200217608656455.05443137051889
    s21_decimal decimal_check = {{0xA7A7DCF1, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1447
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -28738270197879132813.371221072
    s21_decimal decimal_check = {{0xEA15A450, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1448
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 28738270197879132813.371221072
    s21_decimal decimal_check = {{0xEA15A450, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1449
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -3527.9102880348643879034078352
    s21_decimal decimal_check = {{0xD70C490, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1450
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 3527.9102880348643879034078352
    s21_decimal decimal_check = {{0xD70C490, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1451
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -13204693752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1452
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 13204693752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1453
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -13204693749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1454
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 13204693749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1455
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -3074457345618258602.5000000006
    s21_decimal decimal_check = {{0x47535A06, 0xAAAAAAAA, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1456
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 3074457345618258602.5000000006
    s21_decimal decimal_check = {{0x47535A06, 0xAAAAAAAA, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1457
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -3074457344902430720.0000000006
    s21_decimal decimal_check = {{0x6, 0x47535A00, 0x635750AA, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1458
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 3074457344902430720.0000000006
    s21_decimal decimal_check = {{0x6, 0x47535A00, 0x635750AA, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1459
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -715827882.50000000000000000014
    s21_decimal decimal_check = {{0x1A28000E, 0xA936C5A3, 0xE74BE506, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1460
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 715827882.50000000000000000014
    s21_decimal decimal_check = {{0x1A28000E, 0xA936C5A3, 0xE74BE506, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1461
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -13204693.752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1462
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 13204693.752377389598923991725
    s21_decimal decimal_check = {{0xAAAAAAAD, 0xAAAAAAAA, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1463
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -13204693.749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1464
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 13204693.749302932254021561005
    s21_decimal decimal_check = {{0x2AAAAAAD, 0x80000000, 0x2AAAAAAA, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1465
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -13204693.500000000000000000003
    s21_decimal decimal_check = {{0xAA700003, 0xFC3A0FFA, 0x2AAAAA9C, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1466
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 13204693.500000000000000000003
    s21_decimal decimal_check = {{0xAA700003, 0xFC3A0FFA, 0x2AAAAA9C, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1467
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.9999999999999999999999999502
    s21_decimal decimal_check = {{0xFFFFE0E, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1468
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.9999999999999999999999999502
    s21_decimal decimal_check = {{0xFFFFE0E, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1469
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal_check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1470
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal_check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1471
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1472
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1473
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1474
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.2500000000000000000000000000
    s21_decimal decimal_check = {{0x44000000, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1475
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.2500000000000000000000000001
    s21_decimal decimal_check = {{0x44000001, 0x8F894098, 0x813F397, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1476
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.2500000000000000000000000001
    s21_decimal decimal_check = {{0x44000001, 0x8F894098, 0x813F397, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1477
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000002
    s21_decimal decimal_check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1478
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000002
    s21_decimal decimal_check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1479
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -4.0000000000000000000000000008
    s21_decimal decimal_check = {{0x40000008, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1480
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 4.0000000000000000000000000008
    s21_decimal decimal_check = {{0x40000008, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1481
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1482
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1483
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -39614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1484
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 39614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1485
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -3.9614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1486
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 3.9614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1487
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.3961408125713216879677197518
    s21_decimal decimal_check = {{0xCCCCCCCE, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1488
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.3961408125713216879677197518
    s21_decimal decimal_check = {{0xCCCCCCCE, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1489
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -396140812571321.68796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1490
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 396140812571321.68796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1491
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1492
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1493
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1494
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1495
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1496
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1497
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1498
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1499
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1500
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1501
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1502
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1503
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -200217608656455.05443137051889
    s21_decimal decimal_check = {{0xA7A7DCF1, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1504
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 200217608656455.05443137051889
    s21_decimal decimal_check = {{0xA7A7DCF1, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1505
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 28738270197879132813.371221072
    s21_decimal decimal_check = {{0xEA15A450, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1506
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -28738270197879132813.371221072
    s21_decimal decimal_check = {{0xEA15A450, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1507
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 3527.9102880348643879034078352
    s21_decimal decimal_check = {{0xD70C490, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1508
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -3527.9102880348643879034078352
    s21_decimal decimal_check = {{0xD70C490, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1509
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1510
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1511
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1512
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1513
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.0000000006
    s21_decimal decimal_check = {{0x8EA6B406, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1514
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.0000000006
    s21_decimal decimal_check = {{0x8EA6B406, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1515
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.0000000006
    s21_decimal decimal_check = {{0x6, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1516
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.0000000006
    s21_decimal decimal_check = {{0x6, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1517
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.0000000000000000001
    s21_decimal decimal_check = {{0xD2080001, 0x550AF453, 0x2E426101, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1518
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.0000000000000000001
    s21_decimal decimal_check = {{0xD2080001, 0x550AF453, 0x2E426101, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1519
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387.504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1520
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387.504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1521
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1522
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1523
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.000000000000000000003
    s21_decimal decimal_check = {{0x54E00003, 0xF8741FF5, 0x55555539, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1524
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.000000000000000000003
    s21_decimal decimal_check = {{0x54E00003, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1525
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999002
    s21_decimal decimal_check = {{0x1FFFFC1A, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1526
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999002
    s21_decimal decimal_check = {{0x1FFFFC1A, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1527
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal_check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1528
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal_check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1529
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1530
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1531
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1532
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1533
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000002
    s21_decimal decimal_check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1534
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000002
    s21_decimal decimal_check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1535
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000002
    s21_decimal decimal_check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1536
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000002
    s21_decimal decimal_check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1537
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8.000000000000000000000000001
    s21_decimal decimal_check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1538
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8.000000000000000000000000001
    s21_decimal decimal_check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1539
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000000
    s21_decimal decimal_check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1540
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000000
    s21_decimal decimal_check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1541
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1542
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1543
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1544
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1545
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.7922816251426433759354395035
    s21_decimal decimal_check = {{0x9999999B, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1546
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.7922816251426433759354395035
    s21_decimal decimal_check = {{0x9999999B, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1547
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 792281625142643.3759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1548
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -792281625142643.3759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1549
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1550
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1551
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1552
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1553
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1554
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1555
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1556
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1557
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1558
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1559
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1560
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1561
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 400435217312910.10886274103774
    s21_decimal decimal_check = {{0x4F4FB9DE, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1562
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -400435217312910.10886274103774
    s21_decimal decimal_check = {{0x4F4FB9DE, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1563
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -57476540395758265626.742442139
    s21_decimal decimal_check = {{0xD42B489B, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1564
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 57476540395758265626.742442139
    s21_decimal decimal_check = {{0xD42B489B, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1565
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -7055.8205760697287758068156697
    s21_decimal decimal_check = {{0x1AE18919, 0x9F118EEE, 0xE3FC613E, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1566
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 7055.8205760697287758068156697
    s21_decimal decimal_check = {{0x1AE18919, 0x9F118EEE, 0xE3FC613E, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1567
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1568
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1569
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1570
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1571
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.0000000006
    s21_decimal decimal_check = {{0x8EA6B406, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1572
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.0000000006
    s21_decimal decimal_check = {{0x8EA6B406, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1573
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.0000000006
    s21_decimal decimal_check = {{0x6, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1574
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.0000000006
    s21_decimal decimal_check = {{0x6, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1575
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.0000000000000000001
    s21_decimal decimal_check = {{0xD2080001, 0x550AF453, 0x2E426101, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1576
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.0000000000000000001
    s21_decimal decimal_check = {{0xD2080001, 0x550AF453, 0x2E426101, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1577
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1578
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983448
    s21_decimal decimal_check = {{0x55555558, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1579
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1580
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122008
    s21_decimal decimal_check = {{0x55555558, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1581
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.000000000000000000003
    s21_decimal decimal_check = {{0x54E00003, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1582
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.000000000000000000003
    s21_decimal decimal_check = {{0x54E00003, 0xF8741FF5, 0x55555539, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1583
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999002
    s21_decimal decimal_check = {{0x1FFFFC1A, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1584
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999002
    s21_decimal decimal_check = {{0x1FFFFC1A, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1585
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal_check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1586
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal_check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1587
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1588
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1589
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1590
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1591
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000002
    s21_decimal decimal_check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1592
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000002
    s21_decimal decimal_check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1593
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000002
    s21_decimal decimal_check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1594
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000002
    s21_decimal decimal_check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1595
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8.000000000000000000000000001
    s21_decimal decimal_check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1596
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8.000000000000000000000000001
    s21_decimal decimal_check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1597
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000000
    s21_decimal decimal_check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1598
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000000
    s21_decimal decimal_check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1599
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1600
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1601
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1602
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1603
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.7922816251426433759354395035
    s21_decimal decimal_check = {{0x9999999B, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1604
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.7922816251426433759354395035
    s21_decimal decimal_check = {{0x9999999B, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1605
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -792281625142643.3759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1606
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 792281625142643.3759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1607
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1608
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1609
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1610
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1611
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1612
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1613
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1614
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1615
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1616
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1617
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1618
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1619
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -400435217312910.10886274103774
    s21_decimal decimal_check = {{0x4F4FB9DE, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1620
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 400435217312910.10886274103774
    s21_decimal decimal_check = {{0x4F4FB9DE, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1621
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 57476540395758265626.742442139
    s21_decimal decimal_check = {{0xD42B489B, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1622
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -57476540395758265626.742442139
    s21_decimal decimal_check = {{0xD42B489B, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1623
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 7055.8205760697287758068156697
    s21_decimal decimal_check = {{0x1AE18919, 0x9F118EEE, 0xE3FC613E, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1624
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -7055.8205760697287758068156697
    s21_decimal decimal_check = {{0x1AE18919, 0x9F118EEE, 0xE3FC613E, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1625
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1626
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1627
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1628
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1629
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 49191317529892137640
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1630
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -49191317529892137640
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1631
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 49191317518438891520
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA8, 0x2, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1632
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -49191317518438891520
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA8, 0x2, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1633
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 11453246120
    s21_decimal decimal_check = {{0xAAAAAAA8, 0x2, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1634
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -11453246120
    s21_decimal decimal_check = {{0xAAAAAAA8, 0x2, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1635
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 211275100.03803823358278386756
    s21_decimal decimal_check = {{0x44444444, 0x44444444, 0x44444444, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1636
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -211275100.03803823358278386756
    s21_decimal decimal_check = {{0x44444444, 0x44444444, 0x44444444, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1637
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 211275099.98884691606434497604
    s21_decimal decimal_check = {{0x44444444, 0x0, 0x44444444, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1638
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -211275099.98884691606434497604
    s21_decimal decimal_check = {{0x44444444, 0x0, 0x44444444, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1639
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 211275096
    s21_decimal decimal_check = {{0xC97CD58, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1640
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -211275096
    s21_decimal decimal_check = {{0xC97CD58, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1641
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 15.999999999999999999999999200
    s21_decimal decimal_check = {{0x7FFFFCE0, 0xFD0803CE, 0x33B2E3C9, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1642
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -15.999999999999999999999999200
    s21_decimal decimal_check = {{0x7FFFFCE0, 0xFD0803CE, 0x33B2E3C9, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1643
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1644
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1645
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 4.0
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1646
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -4.0
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1647
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3.9999999999999999999999999992
    s21_decimal decimal_check = {{0x3FFFFFF8, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1648
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3.9999999999999999999999999992
    s21_decimal decimal_check = {{0x3FFFFFF8, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1649
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 4.0000000000000000000000000008
    s21_decimal decimal_check = {{0x40000008, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1650
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -4.0000000000000000000000000008
    s21_decimal decimal_check = {{0x40000008, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1651
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 8.000000000000000000000000001
    s21_decimal decimal_check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1652
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -8.000000000000000000000000001
    s21_decimal decimal_check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1653
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 64
    s21_decimal decimal_check = {{0x40, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1654
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -64
    s21_decimal decimal_check = {{0x40, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1655
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7.999999999999999999999999999
    s21_decimal decimal_check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1656
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7.999999999999999999999999999
    s21_decimal decimal_check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1657
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1658
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1659
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 63.382530011411470074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1660
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -63.382530011411470074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1661
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 6.3382530011411470074835160272
    s21_decimal decimal_check = {{0xCCCCCCD0, 0xCCCCCCCC, 0xCCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1662
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -6.3382530011411470074835160272
    s21_decimal decimal_check = {{0xCCCCCCD0, 0xCCCCCCCC, 0xCCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1663
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 6338253001141147.0074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1664
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -6338253001141147.0074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1665
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000200
    s21_decimal decimal_check = {{0xC8, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1666
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000200
    s21_decimal decimal_check = {{0xC8, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1667
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000040
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1668
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000040
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1669
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1670
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1671
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1672
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1673
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1674
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1675
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000080
    s21_decimal decimal_check = {{0x50, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1676
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000080
    s21_decimal decimal_check = {{0x50, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1677
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 3203481738503280.8709019283016
    s21_decimal decimal_check = {{0x72A62E48, 0x3392272F, 0x67829472, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1678
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -3203481738503280.8709019283016
    s21_decimal decimal_check = {{0x72A62E48, 0x3392272F, 0x67829472, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1679
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -459812323166066125013.93953706
    s21_decimal decimal_check = {{0x4355D3AA, 0x8FAFF53E, 0x9492C8AE, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1680
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 459812323166066125013.93953706
    s21_decimal decimal_check = {{0x4355D3AA, 0x8FAFF53E, 0x9492C8AE, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1681
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -56446.564608557830206454525352
    s21_decimal decimal_check = {{0x48B46DA8, 0xE5A7A58B, 0xB66380FE, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1682
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 56446.564608557830206454525352
    s21_decimal decimal_check = {{0x48B46DA8, 0xE5A7A58B, 0xB66380FE, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1683
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1684
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1685
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1686
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1687
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -49191317529892137640
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1688
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 49191317529892137640
    s21_decimal decimal_check = {{0xAAAAAAA8, 0xAAAAAAAA, 0x2, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1689
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -49191317518438891520
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA8, 0x2, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1690
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 49191317518438891520
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA8, 0x2, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1691
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -11453246120
    s21_decimal decimal_check = {{0xAAAAAAA8, 0x2, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1692
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 11453246120
    s21_decimal decimal_check = {{0xAAAAAAA8, 0x2, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1693
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -211275100.03803823358278386756
    s21_decimal decimal_check = {{0x44444444, 0x44444444, 0x44444444, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1694
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 211275100.03803823358278386756
    s21_decimal decimal_check = {{0x44444444, 0x44444444, 0x44444444, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1695
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -211275099.98884691606434497604
    s21_decimal decimal_check = {{0x44444444, 0x0, 0x44444444, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1696
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 211275099.98884691606434497604
    s21_decimal decimal_check = {{0x44444444, 0x0, 0x44444444, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1697
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -211275096
    s21_decimal decimal_check = {{0xC97CD58, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1698
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 211275096
    s21_decimal decimal_check = {{0xC97CD58, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1699
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -15.999999999999999999999999200
    s21_decimal decimal_check = {{0x7FFFFCE0, 0xFD0803CE, 0x33B2E3C9, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1700
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 15.999999999999999999999999200
    s21_decimal decimal_check = {{0x7FFFFCE0, 0xFD0803CE, 0x33B2E3C9, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1701
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1702
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1703
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -4.0
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1704
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 4.0
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1705
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3.9999999999999999999999999992
    s21_decimal decimal_check = {{0x3FFFFFF8, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1706
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3.9999999999999999999999999992
    s21_decimal decimal_check = {{0x3FFFFFF8, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1707
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -4.0000000000000000000000000008
    s21_decimal decimal_check = {{0x40000008, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1708
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 4.0000000000000000000000000008
    s21_decimal decimal_check = {{0x40000008, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1709
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -8.000000000000000000000000001
    s21_decimal decimal_check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1710
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 8.000000000000000000000000001
    s21_decimal decimal_check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1711
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -64
    s21_decimal decimal_check = {{0x40, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1712
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 64
    s21_decimal decimal_check = {{0x40, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1713
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7.999999999999999999999999999
    s21_decimal decimal_check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1714
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7.999999999999999999999999999
    s21_decimal decimal_check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1715
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1716
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1717
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -63.382530011411470074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1718
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 63.382530011411470074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1719
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -6.3382530011411470074835160272
    s21_decimal decimal_check = {{0xCCCCCCD0, 0xCCCCCCCC, 0xCCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1720
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 6.3382530011411470074835160272
    s21_decimal decimal_check = {{0xCCCCCCD0, 0xCCCCCCCC, 0xCCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1721
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -6338253001141147.0074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1722
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 6338253001141147.0074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1723
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000200
    s21_decimal decimal_check = {{0xC8, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1724
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000200
    s21_decimal decimal_check = {{0xC8, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1725
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000040
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1726
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000040
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1727
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1728
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1729
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1730
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1731
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1732
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1733
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000080
    s21_decimal decimal_check = {{0x50, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1734
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000080
    s21_decimal decimal_check = {{0x50, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1735
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -3203481738503280.8709019283016
    s21_decimal decimal_check = {{0x72A62E48, 0x3392272F, 0x67829472, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1736
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 3203481738503280.8709019283016
    s21_decimal decimal_check = {{0x72A62E48, 0x3392272F, 0x67829472, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1737
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 459812323166066125013.93953706
    s21_decimal decimal_check = {{0x4355D3AA, 0x8FAFF53E, 0x9492C8AE, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1738
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -459812323166066125013.93953706
    s21_decimal decimal_check = {{0x4355D3AA, 0x8FAFF53E, 0x9492C8AE, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1739
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 56446.564608557830206454525352
    s21_decimal decimal_check = {{0x48B46DA8, 0xE5A7A58B, 0xB66380FE, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1740
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -56446.564608557830206454525352
    s21_decimal decimal_check = {{0x48B46DA8, 0xE5A7A58B, 0xB66380FE, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1741
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1742
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1743
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1744
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1745
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517204.9999999994
    s21_decimal decimal_check = {{0x8EA6B3FA, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1746
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517204.9999999994
    s21_decimal decimal_check = {{0x8EA6B3FA, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1747
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861439.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x8EA6B3FF, 0xC6AEA154, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1748
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861439.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x8EA6B3FF, 0xC6AEA154, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1749
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655764.9999999999999999999
    s21_decimal decimal_check = {{0xD207FFFF, 0x550AF453, 0x2E426101, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1750
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655764.9999999999999999999
    s21_decimal decimal_check = {{0xD207FFFF, 0x550AF453, 0x2E426101, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1751
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387.504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1752
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387.504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1753
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1754
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1755
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409386.999999999999999999997
    s21_decimal decimal_check = {{0x54DFFFFD, 0xF8741FF5, 0x55555539, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1756
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409386.999999999999999999997
    s21_decimal decimal_check = {{0x54DFFFFD, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1757
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999998998
    s21_decimal decimal_check = {{0x1FFFFC16, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1758
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999998998
    s21_decimal decimal_check = {{0x1FFFFC16, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1759
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal_check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1760
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal_check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1761
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1762
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1763
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1764
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1765
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1766
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1767
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000000
    s21_decimal decimal_check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1768
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000000
    s21_decimal decimal_check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1769
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7.999999999999999999999999999
    s21_decimal decimal_check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1770
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7.999999999999999999999999999
    s21_decimal decimal_check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1771
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.9999999999999999999999999998
    s21_decimal decimal_check = {{0xFFFFFFE, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1772
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.9999999999999999999999999998
    s21_decimal decimal_check = {{0xFFFFFFE, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1773
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1774
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1775
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1776
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1777
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.7922816251426433759354395033
    s21_decimal decimal_check = {{0x99999999, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1778
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.7922816251426433759354395033
    s21_decimal decimal_check = {{0x99999999, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1779
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 792281625142643.37593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1780
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -792281625142643.37593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1781
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1782
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1783
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1784
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1785
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1786
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1787
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1788
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1789
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1790
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1791
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1792
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1793
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 400435217312910.10886274103766
    s21_decimal decimal_check = {{0x4F4FB9D6, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1794
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -400435217312910.10886274103766
    s21_decimal decimal_check = {{0x4F4FB9D6, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1795
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -57476540395758265626.742442127
    s21_decimal decimal_check = {{0xD42B488F, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1796
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 57476540395758265626.742442127
    s21_decimal decimal_check = {{0xD42B488F, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1797
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -7055.8205760697287758068156683
    s21_decimal decimal_check = {{0x1AE1890B, 0x9F118EEE, 0xE3FC613E, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1798
    // 0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 7055.8205760697287758068156683
    s21_decimal decimal_check = {{0x1AE1890B, 0x9F118EEE, 0xE3FC613E, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1799
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1800
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1801
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1802
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1803
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517204.9999999994
    s21_decimal decimal_check = {{0x8EA6B3FA, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1804
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517204.9999999994
    s21_decimal decimal_check = {{0x8EA6B3FA, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1805
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861439.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x8EA6B3FF, 0xC6AEA154, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1806
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861439.9999999994
    s21_decimal decimal_check = {{0xFFFFFFFA, 0x8EA6B3FF, 0xC6AEA154, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1807
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655764.9999999999999999999
    s21_decimal decimal_check = {{0xD207FFFF, 0x550AF453, 0x2E426101, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1808
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655764.9999999999999999999
    s21_decimal decimal_check = {{0xD207FFFF, 0x550AF453, 0x2E426101, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1809
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1810
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983442
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1811
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1812
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122002
    s21_decimal decimal_check = {{0x55555552, 0x0, 0x55555555, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1813
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409386.999999999999999999997
    s21_decimal decimal_check = {{0x54DFFFFD, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1814
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409386.999999999999999999997
    s21_decimal decimal_check = {{0x54DFFFFD, 0xF8741FF5, 0x55555539, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1815
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999998998
    s21_decimal decimal_check = {{0x1FFFFC16, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1816
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999998998
    s21_decimal decimal_check = {{0x1FFFFC16, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1817
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal_check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1818
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal_check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1819
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1820
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1821
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1822
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal_check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1823
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1824
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal decimal_check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1825
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000000
    s21_decimal decimal_check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1826
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000000
    s21_decimal decimal_check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1827
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7.999999999999999999999999999
    s21_decimal decimal_check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1828
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7.999999999999999999999999999
    s21_decimal decimal_check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1829
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.9999999999999999999999999998
    s21_decimal decimal_check = {{0xFFFFFFE, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1830
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.9999999999999999999999999998
    s21_decimal decimal_check = {{0xFFFFFFE, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1831
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1832
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1833
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1834
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1835
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.7922816251426433759354395033
    s21_decimal decimal_check = {{0x99999999, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1836
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.7922816251426433759354395033
    s21_decimal decimal_check = {{0x99999999, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1837
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -792281625142643.37593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1838
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 792281625142643.37593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1839
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1840
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1841
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1842
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1843
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1844
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1845
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1846
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1847
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1848
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1849
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1850
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1851
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -400435217312910.10886274103766
    s21_decimal decimal_check = {{0x4F4FB9D6, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1852
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 400435217312910.10886274103766
    s21_decimal decimal_check = {{0x4F4FB9D6, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1853
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 57476540395758265626.742442127
    s21_decimal decimal_check = {{0xD42B488F, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1854
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -57476540395758265626.742442127
    s21_decimal decimal_check = {{0xD42B488F, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1855
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 7055.8205760697287758068156683
    s21_decimal decimal_check = {{0x1AE1890B, 0x9F118EEE, 0xE3FC613E, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1856
    // -0.9999999999999999999999999999
    s21_decimal decimal1 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -7055.8205760697287758068156683
    s21_decimal decimal_check = {{0x1AE1890B, 0x9F118EEE, 0xE3FC613E, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1857
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1858
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1859
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1860
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1861
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1862
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1863
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1864
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1865
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1866
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1867
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1868
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1869
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1870
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1871
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1872
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1873
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1874
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1875
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1876
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1877
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 39614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1878
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -39614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1879
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 39614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1880
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -39614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1881
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 39614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1882
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -39614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1883
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1884
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1885
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1886
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1887
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1888
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1889
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1890
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1891
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1892
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1893
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 62771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1894
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -62771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1895
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1896
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1897
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 198070406285660.84398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1898
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -198070406285660.84398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1899
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 39614081257132.168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1900
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -39614081257132.168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1901
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1902
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1903
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1904
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1905
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1906
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1907
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79.228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1908
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79.228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1909
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1910
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1911
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1912
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1913
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1914
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1915
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1916
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1917
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1918
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1919
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1920
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1921
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1922
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1923
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1924
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1925
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1926
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1927
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1928
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1929
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1930
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1931
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1932
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1933
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1934
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1935
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -39614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1936
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 39614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1937
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -39614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1938
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 39614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1939
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -39614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1940
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 39614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1941
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1942
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1943
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1944
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1945
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1946
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1947
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1948
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1949
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1950
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1951
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -62771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1952
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 62771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1953
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1954
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1955
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -198070406285660.84398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1956
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 198070406285660.84398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1957
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -39614081257132.168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1958
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 39614081257132.168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1959
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1960
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1961
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1962
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1963
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1964
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1965
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79.228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1966
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79.228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1967
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1968
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1969
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1970
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1971
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1972
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1973
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1974
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1975
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1976
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul1977
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 48716721244363430604.148555673
    s21_decimal decimal_check = {{0xD4B7BF99, 0x79B8EBC2, 0x9D6986FE, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1978
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -48716721244363430604.148555673
    s21_decimal decimal_check = {{0xD4B7BF99, 0x79B8EBC2, 0x9D6986FE, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1979
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 48716721233020685042.758212308
    s21_decimal decimal_check = {{0xF8685AD4, 0xDC4F64C4, 0x9D6986FD, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1980
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -48716721233020685042.758212308
    s21_decimal decimal_check = {{0xF8685AD4, 0xDC4F64C4, 0x9D6986FD, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1981
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 11342745561.390343364970342328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x120000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1982
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -11342745561.390343364970342328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x80120000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1983
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 209236724.51288935879452631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1984
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -209236724.51288935879452631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1985
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 209236724.46417263756150562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1986
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -209236724.46417263756150562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1987
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 209236720.51380999118065508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1988
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -209236720.51380999118065508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1989
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 15.845632502852867518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1990
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -15.845632502852867518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1991
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1992
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1993
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 3.9614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1994
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -3.9614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1995
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3.9614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1996
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3.9614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1997
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3.9614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1998
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3.9614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul1999
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7.922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2000
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7.922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2001
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 63.382530011411470074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2002
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -63.382530011411470074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2003
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7.9228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2004
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7.9228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2005
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2006
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2007
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 62.771017353866807638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2008
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -62.771017353866807638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2009
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 6.2771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2010
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -6.2771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2011
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 6277101735386680.7638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2012
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -6277101735386680.7638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2013
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000198070406285661
    s21_decimal decimal_check = {{0xDC35095D, 0xB424, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2014
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000198070406285661
    s21_decimal decimal_check = {{0xDC35095D, 0xB424, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2015
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000039614081257132
    s21_decimal decimal_check = {{0x5F3DCEAC, 0x2407, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2016
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000039614081257132
    s21_decimal decimal_check = {{0x5F3DCEAC, 0x2407, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2017
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2018
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2019
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2020
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2021
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2022
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2023
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000079
    s21_decimal decimal_check = {{0x4F, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2024
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000079
    s21_decimal decimal_check = {{0x4F, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2025
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 3172574647370199.8576965422111
    s21_decimal decimal_check = {{0x97DE8C1F, 0x868DD8E0, 0x6682EC22, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2026
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -3172574647370199.8576965422111
    s21_decimal decimal_check = {{0x97DE8C1F, 0x868DD8E0, 0x6682EC22, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2027
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -455376068323281495570.77766605
    s21_decimal decimal_check = {{0x1B9271CD, 0xDEBB5DB9, 0x9323D354, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2028
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 455376068323281495570.77766605
    s21_decimal decimal_check = {{0x1B9271CD, 0xDEBB5DB9, 0x9323D354, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2029
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -55901.969927234268947708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2030
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 55901.969927234268947708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2031
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2032
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2033
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2034
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2035
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -48716721244363430604.148555673
    s21_decimal decimal_check = {{0xD4B7BF99, 0x79B8EBC2, 0x9D6986FE, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2036
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 48716721244363430604.148555673
    s21_decimal decimal_check = {{0xD4B7BF99, 0x79B8EBC2, 0x9D6986FE, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2037
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -48716721233020685042.758212308
    s21_decimal decimal_check = {{0xF8685AD4, 0xDC4F64C4, 0x9D6986FD, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2038
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 48716721233020685042.758212308
    s21_decimal decimal_check = {{0xF8685AD4, 0xDC4F64C4, 0x9D6986FD, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2039
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -11342745561.390343364970342328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x80120000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2040
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 11342745561.390343364970342328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x120000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2041
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -209236724.51288935879452631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2042
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 209236724.51288935879452631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2043
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -209236724.46417263756150562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2044
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 209236724.46417263756150562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2045
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -209236720.51380999118065508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x80140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2046
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 209236720.51380999118065508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x140000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2047
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -15.845632502852867518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2048
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 15.845632502852867518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2049
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2050
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2051
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -3.9614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2052
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 3.9614081257132168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2053
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3.9614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2054
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3.9614081257132168796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2055
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3.9614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2056
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3.9614081257132168796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2057
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7.922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2058
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7.922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2059
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -63.382530011411470074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2060
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 63.382530011411470074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2061
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7.9228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2062
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7.9228162514264337593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2063
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2064
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2065
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -62.771017353866807638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2066
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 62.771017353866807638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2067
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -6.2771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2068
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 6.2771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2069
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -6277101735386680.7638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2070
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 6277101735386680.7638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2071
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000198070406285661
    s21_decimal decimal_check = {{0xDC35095D, 0xB424, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2072
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000198070406285661
    s21_decimal decimal_check = {{0xDC35095D, 0xB424, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2073
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000039614081257132
    s21_decimal decimal_check = {{0x5F3DCEAC, 0x2407, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2074
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000039614081257132
    s21_decimal decimal_check = {{0x5F3DCEAC, 0x2407, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2075
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2076
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2077
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2078
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2079
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2080
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2081
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000079
    s21_decimal decimal_check = {{0x4F, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2082
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000079
    s21_decimal decimal_check = {{0x4F, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2083
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -3172574647370199.8576965422111
    s21_decimal decimal_check = {{0x97DE8C1F, 0x868DD8E0, 0x6682EC22, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2084
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 3172574647370199.8576965422111
    s21_decimal decimal_check = {{0x97DE8C1F, 0x868DD8E0, 0x6682EC22, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2085
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 455376068323281495570.77766605
    s21_decimal decimal_check = {{0x1B9271CD, 0xDEBB5DB9, 0x9323D354, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2086
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -455376068323281495570.77766605
    s21_decimal decimal_check = {{0x1B9271CD, 0xDEBB5DB9, 0x9323D354, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2087
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 55901.969927234268947708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2088
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -55901.969927234268947708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2089
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 20923672451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2090
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -20923672451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2091
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 20923672446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2092
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -20923672446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2093
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 4871672124436343060.4148555676
    s21_decimal decimal_check = {{0xD4B7BF9C, 0x79B8EBC2, 0x9D6986FE, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2094
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -4871672124436343060.4148555676
    s21_decimal decimal_check = {{0xD4B7BF9C, 0x79B8EBC2, 0x9D6986FE, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2095
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 4871672123302068504.2758212311
    s21_decimal decimal_check = {{0xF8685AD7, 0xDC4F64C4, 0x9D6986FD, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2096
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -4871672123302068504.2758212311
    s21_decimal decimal_check = {{0xF8685AD7, 0xDC4F64C4, 0x9D6986FD, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2097
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1134274556.1390343364970342329
    s21_decimal decimal_check = {{0xA940E7B9, 0xFB0123D2, 0x24A67FCC, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2098
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1134274556.1390343364970342329
    s21_decimal decimal_check = {{0xA940E7B9, 0xFB0123D2, 0x24A67FCC, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2099
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 20923672.451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2100
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -20923672.451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2101
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 20923672.446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2102
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -20923672.446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2103
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 20923672.051380999118065508860
    s21_decimal decimal_check = {{0x3BF421FC, 0xB95D0366, 0x439BA7E6, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2104
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -20923672.051380999118065508860
    s21_decimal decimal_check = {{0x3BF421FC, 0xB95D0366, 0x439BA7E6, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2105
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.5845632502852867518708789276
    s21_decimal decimal_check = {{0x3333301C, 0x33333333, 0x33333333, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2106
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.5845632502852867518708789276
    s21_decimal decimal_check = {{0x3333301C, 0x33333333, 0x33333333, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2107
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2108
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2109
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2110
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2111
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.3961408125713216879677197516
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2112
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.3961408125713216879677197516
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2113
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.3961408125713216879677197518
    s21_decimal decimal_check = {{0xCCCCCCCE, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2114
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.3961408125713216879677197518
    s21_decimal decimal_check = {{0xCCCCCCCE, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2115
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.7922816251426433759354395035
    s21_decimal decimal_check = {{0x9999999B, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2116
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.7922816251426433759354395035
    s21_decimal decimal_check = {{0x9999999B, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2117
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 6.3382530011411470074835160272
    s21_decimal decimal_check = {{0xCCCCCCD0, 0xCCCCCCCC, 0xCCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2118
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6.3382530011411470074835160272
    s21_decimal decimal_check = {{0xCCCCCCD0, 0xCCCCCCCC, 0xCCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2119
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.7922816251426433759354395033
    s21_decimal decimal_check = {{0x99999999, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2120
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.7922816251426433759354395033
    s21_decimal decimal_check = {{0x99999999, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2121
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 62771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2122
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -62771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2123
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6.2771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2124
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6.2771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2125
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.6277101735386680763835789424
    s21_decimal decimal_check = {{0x3424B070, 0xEBC29F86, 0x14484BFE, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2126
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.6277101735386680763835789424
    s21_decimal decimal_check = {{0x3424B070, 0xEBC29F86, 0x14484BFE, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2127
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 627710173538668.07638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2128
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -627710173538668.07638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2129
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000019807040628566
    s21_decimal decimal_check = {{0xAF9EE756, 0x1203, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2130
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000019807040628566
    s21_decimal decimal_check = {{0xAF9EE756, 0x1203, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2131
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000003961408125713
    s21_decimal decimal_check = {{0x5652FB11, 0x39A, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2132
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000003961408125713
    s21_decimal decimal_check = {{0x5652FB11, 0x39A, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2133
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2134
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2135
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2136
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2137
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2138
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2139
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2140
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2141
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 317257464737019.98576965422113
    s21_decimal decimal_check = {{0x97DE8C21, 0x868DD8E0, 0x6682EC22, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2142
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -317257464737019.98576965422113
    s21_decimal decimal_check = {{0x97DE8C21, 0x868DD8E0, 0x6682EC22, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2143
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -45537606832328149557.077766608
    s21_decimal decimal_check = {{0x1B9271D0, 0xDEBB5DB9, 0x9323D354, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2144
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 45537606832328149557.077766608
    s21_decimal decimal_check = {{0x1B9271D0, 0xDEBB5DB9, 0x9323D354, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2145
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -5590.1969927234268947708082480
    s21_decimal decimal_check = {{0x2DC77930, 0x10FB6E4E, 0xB4A10696, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2146
    // 0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 5590.1969927234268947708082480
    s21_decimal decimal_check = {{0x2DC77930, 0x10FB6E4E, 0xB4A10696, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2147
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -20923672451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2148
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 20923672451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2149
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -20923672446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2150
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 20923672446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2151
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -4871672124436343060.4148555676
    s21_decimal decimal_check = {{0xD4B7BF9C, 0x79B8EBC2, 0x9D6986FE, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2152
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 4871672124436343060.4148555676
    s21_decimal decimal_check = {{0xD4B7BF9C, 0x79B8EBC2, 0x9D6986FE, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2153
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -4871672123302068504.2758212311
    s21_decimal decimal_check = {{0xF8685AD7, 0xDC4F64C4, 0x9D6986FD, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2154
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 4871672123302068504.2758212311
    s21_decimal decimal_check = {{0xF8685AD7, 0xDC4F64C4, 0x9D6986FD, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2155
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1134274556.1390343364970342329
    s21_decimal decimal_check = {{0xA940E7B9, 0xFB0123D2, 0x24A67FCC, 0x80130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2156
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1134274556.1390343364970342329
    s21_decimal decimal_check = {{0xA940E7B9, 0xFB0123D2, 0x24A67FCC, 0x130000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2157
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -20923672.451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2158
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 20923672.451288935879452631411
    s21_decimal decimal_check = {{0xADCFA173, 0x67336914, 0x439BA7FC, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2159
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -20923672.446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2160
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 20923672.446417263756150562907
    s21_decimal decimal_check = {{0x8A37E05B, 0x2397C118, 0x439BA7FC, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2161
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -20923672.051380999118065508860
    s21_decimal decimal_check = {{0x3BF421FC, 0xB95D0366, 0x439BA7E6, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2162
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 20923672.051380999118065508860
    s21_decimal decimal_check = {{0x3BF421FC, 0xB95D0366, 0x439BA7E6, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2163
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.5845632502852867518708789276
    s21_decimal decimal_check = {{0x3333301C, 0x33333333, 0x33333333, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2164
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.5845632502852867518708789276
    s21_decimal decimal_check = {{0x3333301C, 0x33333333, 0x33333333, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2165
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2166
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2167
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2168
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2169
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.3961408125713216879677197516
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2170
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.3961408125713216879677197516
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2171
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.3961408125713216879677197518
    s21_decimal decimal_check = {{0xCCCCCCCE, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2172
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.3961408125713216879677197518
    s21_decimal decimal_check = {{0xCCCCCCCE, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2173
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.7922816251426433759354395035
    s21_decimal decimal_check = {{0x9999999B, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2174
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.7922816251426433759354395035
    s21_decimal decimal_check = {{0x9999999B, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2175
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -6.3382530011411470074835160272
    s21_decimal decimal_check = {{0xCCCCCCD0, 0xCCCCCCCC, 0xCCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2176
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6.3382530011411470074835160272
    s21_decimal decimal_check = {{0xCCCCCCD0, 0xCCCCCCCC, 0xCCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2177
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.7922816251426433759354395033
    s21_decimal decimal_check = {{0x99999999, 0x99999999, 0x19999999, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2178
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.7922816251426433759354395033
    s21_decimal decimal_check = {{0x99999999, 0x99999999, 0x19999999, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2179
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -62771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2180
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 62771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2181
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6.2771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2182
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6.2771017353866807638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2183
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.6277101735386680763835789424
    s21_decimal decimal_check = {{0x3424B070, 0xEBC29F86, 0x14484BFE, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2184
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.6277101735386680763835789424
    s21_decimal decimal_check = {{0x3424B070, 0xEBC29F86, 0x14484BFE, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2185
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -627710173538668.07638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2186
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 627710173538668.07638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2187
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000019807040628566
    s21_decimal decimal_check = {{0xAF9EE756, 0x1203, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2188
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000019807040628566
    s21_decimal decimal_check = {{0xAF9EE756, 0x1203, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2189
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000003961408125713
    s21_decimal decimal_check = {{0x5652FB11, 0x39A, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2190
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000003961408125713
    s21_decimal decimal_check = {{0x5652FB11, 0x39A, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2191
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2192
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2193
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2194
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2195
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2196
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2197
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2198
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2199
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -317257464737019.98576965422113
    s21_decimal decimal_check = {{0x97DE8C21, 0x868DD8E0, 0x6682EC22, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2200
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 317257464737019.98576965422113
    s21_decimal decimal_check = {{0x97DE8C21, 0x868DD8E0, 0x6682EC22, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2201
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 45537606832328149557.077766608
    s21_decimal decimal_check = {{0x1B9271D0, 0xDEBB5DB9, 0x9323D354, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2202
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -45537606832328149557.077766608
    s21_decimal decimal_check = {{0x1B9271D0, 0xDEBB5DB9, 0x9323D354, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2203
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 5590.1969927234268947708082480
    s21_decimal decimal_check = {{0x2DC77930, 0x10FB6E4E, 0xB4A10696, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2204
    // -0.7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -5590.1969927234268947708082480
    s21_decimal decimal_check = {{0x2DC77930, 0x10FB6E4E, 0xB4A10696, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2205
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2206
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2207
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2208
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2209
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2210
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2211
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2212
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2213
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1134274556139034336497034.2328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x40000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2214
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1134274556139034336497034.2328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x80040000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2215
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 20923672451288935879452.631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2216
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -20923672451288935879452.631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2217
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 20923672446417263756150.562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2218
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -20923672446417263756150.562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2219
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 20923672051380999118065.508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2220
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -20923672051380999118065.508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2221
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1584563250285286.7518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2222
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1584563250285286.7518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2223
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2224
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2225
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 396140812571321.68796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2226
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -396140812571321.68796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2227
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 396140812571321.68796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2228
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -396140812571321.68796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2229
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 396140812571321.68796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2230
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -396140812571321.68796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2231
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 792281625142643.3759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2232
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -792281625142643.3759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2233
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 6338253001141147.0074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2234
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6338253001141147.0074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2235
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 792281625142643.37593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2236
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -792281625142643.37593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2237
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2238
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2239
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6277101735386680.7638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2240
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6277101735386680.7638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2241
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 627710173538668.07638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2242
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -627710173538668.07638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2243
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2244
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2245
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 1.9807040628566084398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2246
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -1.9807040628566084398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2247
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2248
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2249
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2250
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2251
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2252
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2253
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000792281625142643
    s21_decimal decimal_check = {{0x70D42573, 0x2D093, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2254
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000792281625142643
    s21_decimal decimal_check = {{0x70D42573, 0x2D093, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2255
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000007922816251426434
    s21_decimal decimal_check = {{0x68497682, 0x1C25C2, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2256
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000007922816251426434
    s21_decimal decimal_check = {{0x68497682, 0x1C25C2, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2257
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2258
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2259
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2260
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2261
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -5590196992723426894.7708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2262
    // 792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 5590196992723426894.7708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2263
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2264
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2265
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2266
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2267
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2268
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2269
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2270
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2271
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1134274556139034336497034.2328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x80040000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2272
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1134274556139034336497034.2328
    s21_decimal decimal_check = {{0xA940E7B8, 0xFB0123D2, 0x24A67FCC, 0x40000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2273
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -20923672451288935879452.631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2274
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 20923672451288935879452.631410
    s21_decimal decimal_check = {{0xADCFA172, 0x67336914, 0x439BA7FC, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2275
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -20923672446417263756150.562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2276
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 20923672446417263756150.562906
    s21_decimal decimal_check = {{0x8A37E05A, 0x2397C118, 0x439BA7FC, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2277
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -20923672051380999118065.508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2278
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 20923672051380999118065.508859
    s21_decimal decimal_check = {{0x3BF421FB, 0xB95D0366, 0x439BA7E6, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2279
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1584563250285286.7518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2280
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1584563250285286.7518708789275
    s21_decimal decimal_check = {{0x3333301B, 0x33333333, 0x33333333, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2281
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2282
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2283
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -396140812571321.68796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2284
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 396140812571321.68796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2285
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -396140812571321.68796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2286
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 396140812571321.68796771975160
    s21_decimal decimal_check = {{0xFFFFFFF8, 0xFFFFFFFF, 0x7FFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2287
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -396140812571321.68796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2288
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 396140812571321.68796771975175
    s21_decimal decimal_check = {{0x7, 0x0, 0x80000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2289
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -792281625142643.3759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2290
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 792281625142643.3759354395034
    s21_decimal decimal_check = {{0x9999999A, 0x99999999, 0x19999999, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2291
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -6338253001141147.0074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2292
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6338253001141147.0074835160268
    s21_decimal decimal_check = {{0xCCCCCCCC, 0xCCCCCCCC, 0xCCCCCCCC, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2293
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -792281625142643.37593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2294
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 792281625142643.37593543950327
    s21_decimal decimal_check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2295
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2296
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2297
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6277101735386680.7638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2298
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6277101735386680.7638357894230
    s21_decimal decimal_check = {{0x96EE456, 0x359A3B3E, 0xCAD2F7F5, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2299
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -627710173538668.07638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2300
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 627710173538668.07638357894234
    s21_decimal decimal_check = {{0x96EE45A, 0x359A3B3E, 0xCAD2F7F5, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2301
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2302
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2303
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -1.9807040628566084398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2304
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 1.9807040628566084398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2305
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2306
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2307
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2308
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2309
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2310
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2311
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000792281625142643
    s21_decimal decimal_check = {{0x70D42573, 0x2D093, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2312
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000792281625142643
    s21_decimal decimal_check = {{0x70D42573, 0x2D093, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2313
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000007922816251426434
    s21_decimal decimal_check = {{0x68497682, 0x1C25C2, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2314
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000007922816251426434
    s21_decimal decimal_check = {{0x68497682, 0x1C25C2, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2315
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2316
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2317
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2318
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul2319
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 5590196992723426894.7708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2320
    // -792281625142643.37593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -5590196992723426894.7708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2321
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 66023468761886.947994619958612
    s21_decimal decimal_check = {{0x55555554, 0x55555555, 0xD5555555, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2322
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -66023468761886.947994619958612
    s21_decimal decimal_check = {{0x55555554, 0x55555555, 0xD5555555, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2323
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 66023468746514.661270107805012
    s21_decimal decimal_check = {{0xD5555554, 0x80000000, 0xD5555554, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2324
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -66023468746514.661270107805012
    s21_decimal decimal_check = {{0xD5555554, 0x80000000, 0xD5555554, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2325
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 15372.2867280912930125
    s21_decimal decimal_check = {{0x5555554D, 0x55555555, 0x8, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2326
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -15372.2867280912930125
    s21_decimal decimal_check = {{0x5555554D, 0x55555555, 0x8, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2327
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 15372.2867245121536000
    s21_decimal decimal_check = {{0x0, 0x5555554D, 0x8, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2328
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -15372.2867245121536000
    s21_decimal decimal_check = {{0x0, 0x5555554D, 0x8, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2329
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000035791394125
    s21_decimal decimal_check = {{0x5555554D, 0x8, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2330
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000035791394125
    s21_decimal decimal_check = {{0x5555554D, 0x8, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2331
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000660234687618869479946
    s21_decimal decimal_check = {{0xE9B5CA0A, 0xCA98CE50, 0x23, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2332
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000660234687618869479946
    s21_decimal decimal_check = {{0xE9B5CA0A, 0xCA98CE50, 0x23, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2333
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000660234687465146612701
    s21_decimal decimal_check = {{0x1F1CFBDD, 0xCA98CE2D, 0x23, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2334
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000660234687465146612701
    s21_decimal decimal_check = {{0x1F1CFBDD, 0xCA98CE2D, 0x23, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2335
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000660234675
    s21_decimal decimal_check = {{0x275A61B3, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2336
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000660234675
    s21_decimal decimal_check = {{0x275A61B3, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2337
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000050000000000000
    s21_decimal decimal_check = {{0x883D2000, 0x2D79, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2338
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000050000000000000
    s21_decimal decimal_check = {{0x883D2000, 0x2D79, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2339
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2340
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2341
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.00000000000000125
    s21_decimal decimal_check = {{0x7D, 0x0, 0x0, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2342
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.00000000000000125
    s21_decimal decimal_check = {{0x7D, 0x0, 0x0, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2343
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2344
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2345
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2346
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2347
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2348
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2349
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000200
    s21_decimal decimal_check = {{0xC8, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2350
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000200
    s21_decimal decimal_check = {{0xC8, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2351
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2352
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2353
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 198070406285660.84398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2354
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -198070406285660.84398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2355
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000198070406285661
    s21_decimal decimal_check = {{0xDC35095D, 0xB424, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2356
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000198070406285661
    s21_decimal decimal_check = {{0xDC35095D, 0xB424, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2357
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.0000000000000019807040628566
    s21_decimal decimal_check = {{0xAF9EE756, 0x1203, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2358
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.0000000000000019807040628566
    s21_decimal decimal_check = {{0xAF9EE756, 0x1203, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2359
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 1.9807040628566084398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2360
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -1.9807040628566084398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2361
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2362
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2363
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2364
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2365
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2366
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2367
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2368
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2369
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2370
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2371
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2372
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2373
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 1.0010880432822752721568525942
    s21_decimal decimal_check = {{0xD3D3EE76, 0xB01DAC3E, 0x2058CE63, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2374
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -1.0010880432822752721568525942
    s21_decimal decimal_check = {{0xD3D3EE76, 0xB01DAC3E, 0x2058CE63, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2375
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -143691.35098939566406685610533
    s21_decimal decimal_check = {{0x750AD225, 0x8CE6FCA3, 0x2E6DDEB6, 0x80170000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2376
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 143691.35098939566406685610533
    s21_decimal decimal_check = {{0x750AD225, 0x8CE6FCA3, 0x2E6DDEB6, 0x170000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2377
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.0000000000176395514401743219
    s21_decimal decimal_check = {{0x27E36173, 0x272AEC9, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2378
    // 0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x100000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.0000000000176395514401743219
    s21_decimal decimal_check = {{0x27E36173, 0x272AEC9, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2379
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -66023468761886.947994619958612
    s21_decimal decimal_check = {{0x55555554, 0x55555555, 0xD5555555, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2380
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 66023468761886.947994619958612
    s21_decimal decimal_check = {{0x55555554, 0x55555555, 0xD5555555, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2381
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -66023468746514.661270107805012
    s21_decimal decimal_check = {{0xD5555554, 0x80000000, 0xD5555554, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2382
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 66023468746514.661270107805012
    s21_decimal decimal_check = {{0xD5555554, 0x80000000, 0xD5555554, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2383
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -15372.2867280912930125
    s21_decimal decimal_check = {{0x5555554D, 0x55555555, 0x8, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2384
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 15372.2867280912930125
    s21_decimal decimal_check = {{0x5555554D, 0x55555555, 0x8, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2385
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -15372.2867245121536000
    s21_decimal decimal_check = {{0x0, 0x5555554D, 0x8, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2386
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 15372.2867245121536000
    s21_decimal decimal_check = {{0x0, 0x5555554D, 0x8, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2387
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000035791394125
    s21_decimal decimal_check = {{0x5555554D, 0x8, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2388
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000035791394125
    s21_decimal decimal_check = {{0x5555554D, 0x8, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2389
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000660234687618869479946
    s21_decimal decimal_check = {{0xE9B5CA0A, 0xCA98CE50, 0x23, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2390
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000660234687618869479946
    s21_decimal decimal_check = {{0xE9B5CA0A, 0xCA98CE50, 0x23, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2391
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000660234687465146612701
    s21_decimal decimal_check = {{0x1F1CFBDD, 0xCA98CE2D, 0x23, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2392
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000660234687465146612701
    s21_decimal decimal_check = {{0x1F1CFBDD, 0xCA98CE2D, 0x23, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2393
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000660234675
    s21_decimal decimal_check = {{0x275A61B3, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2394
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000660234675
    s21_decimal decimal_check = {{0x275A61B3, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2395
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000050000000000000
    s21_decimal decimal_check = {{0x883D2000, 0x2D79, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2396
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000050000000000000
    s21_decimal decimal_check = {{0x883D2000, 0x2D79, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2397
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2398
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2399
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.00000000000000125
    s21_decimal decimal_check = {{0x7D, 0x0, 0x0, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2400
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.00000000000000125
    s21_decimal decimal_check = {{0x7D, 0x0, 0x0, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2401
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2402
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2403
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2404
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000012500000000000
    s21_decimal decimal_check = {{0x620F4800, 0xB5E, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2405
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2406
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2407
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000200
    s21_decimal decimal_check = {{0xC8, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2408
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000200
    s21_decimal decimal_check = {{0xC8, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2409
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2410
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000025000000000000
    s21_decimal decimal_check = {{0xC41E9000, 0x16BC, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2411
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -198070406285660.84398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2412
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 198070406285660.84398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2413
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000198070406285661
    s21_decimal decimal_check = {{0xDC35095D, 0xB424, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2414
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000198070406285661
    s21_decimal decimal_check = {{0xDC35095D, 0xB424, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2415
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.0000000000000019807040628566
    s21_decimal decimal_check = {{0xAF9EE756, 0x1203, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2416
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.0000000000000019807040628566
    s21_decimal decimal_check = {{0xAF9EE756, 0x1203, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2417
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -1.9807040628566084398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2418
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 1.9807040628566084398385987584
    s21_decimal decimal_check = {{0x0, 0x0, 0x40000000, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2419
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2420
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2421
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2422
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2423
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2424
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2425
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2426
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2427
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2428
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2429
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2430
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2431
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -1.0010880432822752721568525942
    s21_decimal decimal_check = {{0xD3D3EE76, 0xB01DAC3E, 0x2058CE63, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2432
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 1.0010880432822752721568525942
    s21_decimal decimal_check = {{0xD3D3EE76, 0xB01DAC3E, 0x2058CE63, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2433
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 143691.35098939566406685610533
    s21_decimal decimal_check = {{0x750AD225, 0x8CE6FCA3, 0x2E6DDEB6, 0x170000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2434
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -143691.35098939566406685610533
    s21_decimal decimal_check = {{0x750AD225, 0x8CE6FCA3, 0x2E6DDEB6, 0x80170000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2435
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.0000000000176395514401743219
    s21_decimal decimal_check = {{0x27E36173, 0x272AEC9, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2436
    // -0.0000000000000025
    s21_decimal decimal1 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.0000000000176395514401743219
    s21_decimal decimal_check = {{0x27E36173, 0x272AEC9, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2437
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 13204693752377.389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2438
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -13204693752377.389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2439
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 13204693749302.932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2440
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -13204693749302.932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2441
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 3074.4573456182586025
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2442
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -3074.4573456182586025
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2443
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 3074.4573449024307200
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2444
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -3074.4573449024307200
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2445
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000007158278825
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2446
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000007158278825
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2447
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000132046937523773895989
    s21_decimal decimal_check = {{0x2EBDF535, 0x2884F610, 0x7, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2448
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000132046937523773895989
    s21_decimal decimal_check = {{0x2EBDF535, 0x2884F610, 0x7, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2449
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000132046937493029322540
    s21_decimal decimal_check = {{0x638FF2C, 0x2884F609, 0x7, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2450
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000132046937493029322540
    s21_decimal decimal_check = {{0x638FF2C, 0x2884F609, 0x7, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2451
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000132046935
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2452
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000132046935
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2453
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000010000000000000
    s21_decimal decimal_check = {{0x4E72A000, 0x918, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2454
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000010000000000000
    s21_decimal decimal_check = {{0x4E72A000, 0x918, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2455
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2456
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2457
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.00000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2458
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.00000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2459
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2460
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2461
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2462
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2463
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2464
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2465
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000040
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2466
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000040
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2467
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2468
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2469
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 39614081257132.168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2470
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -39614081257132.168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2471
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000039614081257132
    s21_decimal decimal_check = {{0x5F3DCEAC, 0x2407, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2472
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000039614081257132
    s21_decimal decimal_check = {{0x5F3DCEAC, 0x2407, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2473
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.0000000000000003961408125713
    s21_decimal decimal_check = {{0x5652FB11, 0x39A, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2474
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.0000000000000003961408125713
    s21_decimal decimal_check = {{0x5652FB11, 0x39A, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2475
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2476
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2477
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2478
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2479
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2480
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2481
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2482
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2483
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2484
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2485
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2486
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2487
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2488
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2489
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.2002176086564550544313705188
    s21_decimal decimal_check = {{0xF72A62E4, 0x23392272, 0x6782947, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2490
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.2002176086564550544313705188
    s21_decimal decimal_check = {{0xF72A62E4, 0x23392272, 0x6782947, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2491
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -28738.270197879132813371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2492
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 28738.270197879132813371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2493
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.0000000000035279102880348644
    s21_decimal decimal_check = {{0x3B2D79E4, 0x7D5628, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2494
    // 0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x100000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.0000000000035279102880348644
    s21_decimal decimal_check = {{0x3B2D79E4, 0x7D5628, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2495
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -13204693752377.389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2496
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 13204693752377.389598923991722
    s21_decimal decimal_check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x2AAAAAAA, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2497
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -13204693749302.932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2498
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 13204693749302.932254021561002
    s21_decimal decimal_check = {{0x2AAAAAAA, 0x80000000, 0x2AAAAAAA, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2499
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -3074.4573456182586025
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2500
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 3074.4573456182586025
    s21_decimal decimal_check = {{0xAAAAAAA9, 0xAAAAAAAA, 0x1, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2501
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -3074.4573449024307200
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2502
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 3074.4573449024307200
    s21_decimal decimal_check = {{0x0, 0xAAAAAAA9, 0x1, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2503
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000007158278825
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2504
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000007158278825
    s21_decimal decimal_check = {{0xAAAAAAA9, 0x1, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2505
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000132046937523773895989
    s21_decimal decimal_check = {{0x2EBDF535, 0x2884F610, 0x7, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2506
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000132046937523773895989
    s21_decimal decimal_check = {{0x2EBDF535, 0x2884F610, 0x7, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2507
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000132046937493029322540
    s21_decimal decimal_check = {{0x638FF2C, 0x2884F609, 0x7, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2508
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000132046937493029322540
    s21_decimal decimal_check = {{0x638FF2C, 0x2884F609, 0x7, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2509
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000132046935
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2510
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000132046935
    s21_decimal decimal_check = {{0x7DEE057, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2511
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000010000000000000
    s21_decimal decimal_check = {{0x4E72A000, 0x918, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2512
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000010000000000000
    s21_decimal decimal_check = {{0x4E72A000, 0x918, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2513
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2514
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2515
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.00000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2516
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.00000000000000025
    s21_decimal decimal_check = {{0x19, 0x0, 0x0, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2517
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2518
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2519
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2520
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000002500000000000
    s21_decimal decimal_check = {{0x139CA800, 0x246, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2521
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2522
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2523
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000040
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2524
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000040
    s21_decimal decimal_check = {{0x28, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2525
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2526
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000005000000000000
    s21_decimal decimal_check = {{0x27395000, 0x48C, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2527
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -39614081257132.168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2528
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 39614081257132.168796771975168
    s21_decimal decimal_check = {{0x0, 0x0, 0x80000000, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2529
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000039614081257132
    s21_decimal decimal_check = {{0x5F3DCEAC, 0x2407, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2530
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000039614081257132
    s21_decimal decimal_check = {{0x5F3DCEAC, 0x2407, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2531
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.0000000000000003961408125713
    s21_decimal decimal_check = {{0x5652FB11, 0x39A, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2532
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.0000000000000003961408125713
    s21_decimal decimal_check = {{0x5652FB11, 0x39A, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2533
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2534
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.3961408125713216879677197517
    s21_decimal decimal_check = {{0xCCCCCCCD, 0xCCCCCCCC, 0xCCCCCCC, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2535
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2536
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2537
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2538
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2539
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2540
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2541
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2542
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2543
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2544
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2545
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2546
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2547
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.2002176086564550544313705188
    s21_decimal decimal_check = {{0xF72A62E4, 0x23392272, 0x6782947, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2548
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.2002176086564550544313705188
    s21_decimal decimal_check = {{0xF72A62E4, 0x23392272, 0x6782947, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2549
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 28738.270197879132813371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2550
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -28738.270197879132813371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2551
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.0000000000035279102880348644
    s21_decimal decimal_check = {{0x3B2D79E4, 0x7D5628, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2552
    // -0.0000000000000005
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.0000000000035279102880348644
    s21_decimal decimal_check = {{0x3B2D79E4, 0x7D5628, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2553
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2554
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2555
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2556
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2557
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2558
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2559
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2560
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2561
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2562
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2563
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2564
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2565
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2566
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2567
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2568
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2569
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2570
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2571
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2572
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2573
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2574
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2575
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2576
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2577
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2578
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2579
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2580
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2581
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2582
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2583
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2584
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2585
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2586
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2587
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2588
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2589
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2590
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2591
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2592
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2593
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2594
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2595
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2596
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2597
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2598
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2599
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2600
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2601
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2602
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2603
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2604
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2605
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2606
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2607
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2608
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2609
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2610
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2611
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2612
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2613
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2614
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2615
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2616
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2617
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2618
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2619
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2620
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2621
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2622
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2623
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2624
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2625
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2626
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2627
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2628
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2629
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2630
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2631
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2632
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2633
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2634
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2635
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2636
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2637
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2638
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2639
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2640
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2641
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2642
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2643
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2644
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2645
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2646
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2647
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2648
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2649
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2650
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2651
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2652
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2653
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2654
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2655
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2656
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2657
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2658
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2659
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2660
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2661
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2662
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2663
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2664
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2665
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2666
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2667
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2668
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2669
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2670
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2671
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2672
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2673
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2674
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2675
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2676
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2677
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2678
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2679
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2680
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2681
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2682
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2683
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2684
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2685
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2686
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2687
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2688
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2689
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2690
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2691
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2692
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2693
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2694
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2695
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2696
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2697
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2698
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2699
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2700
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2701
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2702
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2703
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2704
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2705
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2706
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2707
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2708
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2709
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2710
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2711
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2712
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2713
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2714
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2715
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2716
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2717
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2718
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2719
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2720
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2721
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2722
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2723
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2724
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2725
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2726
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2727
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2728
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2729
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2730
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2731
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2732
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2733
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2734
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2735
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2736
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2737
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2738
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2739
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2740
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2741
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2742
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2743
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2744
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2745
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2746
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2747
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2748
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2749
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2750
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2751
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2752
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2753
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2754
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2755
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2756
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2757
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2758
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2759
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2760
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2761
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2762
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2763
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2764
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2765
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2766
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2767
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2768
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2769
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2770
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2771
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2772
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2773
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2774
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2775
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2776
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2777
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2778
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2779
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2780
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2781
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2782
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2783
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2784
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2785
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 2.6409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2786
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -2.6409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2787
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 2.6409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2788
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -2.6409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2789
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000006148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2790
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000006148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2791
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000006148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2792
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000006148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2793
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000001431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2794
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000001431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2795
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000000000026409388
    s21_decimal decimal_check = {{0x192F9AC, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2796
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000000000026409388
    s21_decimal decimal_check = {{0x192F9AC, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2797
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2798
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2799
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2800
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2801
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000002
    s21_decimal decimal_check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2802
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000002
    s21_decimal decimal_check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2803
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2804
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2805
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2806
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2807
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2808
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2809
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2810
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2811
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2812
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2813
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2814
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2815
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2816
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2817
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2818
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2819
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2820
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2821
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2822
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2823
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.0000000000000792281625142643
    s21_decimal decimal_check = {{0x70D42573, 0x2D093, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2824
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.0000000000000792281625142643
    s21_decimal decimal_check = {{0x70D42573, 0x2D093, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2825
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2826
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2827
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2828
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2829
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2830
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2831
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2832
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2833
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2834
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2835
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2836
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2837
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.0000000000000400435217312910
    s21_decimal decimal_check = {{0x96E22C8E, 0x16C31, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2838
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.0000000000000400435217312910
    s21_decimal decimal_check = {{0x96E22C8E, 0x16C31, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2839
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.0000000057476540395758265627
    s21_decimal decimal_check = {{0x578FA51B, 0x1DA5B0F7, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2840
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.0000000057476540395758265627
    s21_decimal decimal_check = {{0x578FA51B, 0x1DA5B0F7, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2841
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.0000000000000000000000007056
    s21_decimal decimal_check = {{0x1B90, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2842
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.0000000000000000000000007056
    s21_decimal decimal_check = {{0x1B90, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2843
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -2.6409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2844
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 2.6409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2845
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -2.6409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2846
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 2.6409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2847
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000006148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2848
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000006148914691236517205
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2849
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000006148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2850
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000006148914689804861440
    s21_decimal decimal_check = {{0x0, 0x55555555, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2851
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000001431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2852
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000001431655765
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2853
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000000000026409388
    s21_decimal decimal_check = {{0x192F9AC, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2854
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000000000026409388
    s21_decimal decimal_check = {{0x192F9AC, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2855
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2856
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2857
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2858
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000026409387
    s21_decimal decimal_check = {{0x192F9AB, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2859
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000002
    s21_decimal decimal_check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2860
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000002
    s21_decimal decimal_check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2861
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2862
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2863
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2864
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2865
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2866
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2867
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2868
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2869
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2870
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2871
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2872
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2873
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2874
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2875
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2876
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2877
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2878
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2879
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2880
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal_check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2881
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.0000000000000792281625142643
    s21_decimal decimal_check = {{0x70D42573, 0x2D093, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2882
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.0000000000000792281625142643
    s21_decimal decimal_check = {{0x70D42573, 0x2D093, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2883
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2884
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2885
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2886
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2887
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2888
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2889
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2890
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2891
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2892
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2893
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2894
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2895
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.0000000000000400435217312910
    s21_decimal decimal_check = {{0x96E22C8E, 0x16C31, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2896
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.0000000000000400435217312910
    s21_decimal decimal_check = {{0x96E22C8E, 0x16C31, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2897
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.0000000057476540395758265627
    s21_decimal decimal_check = {{0x578FA51B, 0x1DA5B0F7, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2898
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.0000000057476540395758265627
    s21_decimal decimal_check = {{0x578FA51B, 0x1DA5B0F7, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2899
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.0000000000000000000000007056
    s21_decimal decimal_check = {{0x1B90, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2900
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.0000000000000000000000007056
    s21_decimal decimal_check = {{0x1B90, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2901
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26.409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2902
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26.409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2903
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26.409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2904
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26.409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2905
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000061489146912365172050
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2906
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000061489146912365172050
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2907
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000061489146898048614400
    s21_decimal decimal_check = {{0x0, 0x55555552, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2908
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000061489146898048614400
    s21_decimal decimal_check = {{0x0, 0x55555552, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2909
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000014316557650
    s21_decimal decimal_check = {{0x55555552, 0x3, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2910
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000014316557650
    s21_decimal decimal_check = {{0x55555552, 0x3, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2911
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2912
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2913
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2914
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2915
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000264093870
    s21_decimal decimal_check = {{0xFBDC0AE, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2916
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000264093870
    s21_decimal decimal_check = {{0xFBDC0AE, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2917
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000020
    s21_decimal decimal_check = {{0x14, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2918
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000020
    s21_decimal decimal_check = {{0x14, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2919
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2920
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2921
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2922
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2923
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2924
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2925
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2926
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2927
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2928
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2929
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000080
    s21_decimal decimal_check = {{0x50, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2930
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000080
    s21_decimal decimal_check = {{0x50, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2931
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2932
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2933
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79.228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2934
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79.228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2935
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000079
    s21_decimal decimal_check = {{0x4F, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2936
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000079
    s21_decimal decimal_check = {{0x4F, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2937
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2938
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2939
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 0.0000000000007922816251426434
    s21_decimal decimal_check = {{0x68497682, 0x1C25C2, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2940
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -0.0000000000007922816251426434
    s21_decimal decimal_check = {{0x68497682, 0x1C25C2, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2941
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2942
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2943
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2944
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2945
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2946
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2947
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2948
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2949
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2950
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2951
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2952
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul2953
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.0000000000004004352173129101
    s21_decimal decimal_check = {{0xE4D5BD8D, 0xE39EF, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2954
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.0000000000004004352173129101
    s21_decimal decimal_check = {{0xE4D5BD8D, 0xE39EF, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2955
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.0000000574765403957582656267
    s21_decimal decimal_check = {{0x6B9C730B, 0x2878E9A9, 0x1F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2956
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.0000000574765403957582656267
    s21_decimal decimal_check = {{0x6B9C730B, 0x2878E9A9, 0x1F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2957
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.0000000000000000000000070558
    s21_decimal decimal_check = {{0x1139E, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2958
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.0000000000000000000000070558
    s21_decimal decimal_check = {{0x1139E, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2959
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26.409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2960
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26.409387504754779197847983445
    s21_decimal decimal_check = {{0x55555555, 0x55555555, 0x55555555, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2961
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26.409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2962
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26.409387498605864508043122005
    s21_decimal decimal_check = {{0x55555555, 0x0, 0x55555555, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2963
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000061489146912365172050
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2964
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000061489146912365172050
    s21_decimal decimal_check = {{0x55555552, 0x55555555, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2965
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000061489146898048614400
    s21_decimal decimal_check = {{0x0, 0x55555552, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2966
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000061489146898048614400
    s21_decimal decimal_check = {{0x0, 0x55555552, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2967
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000014316557650
    s21_decimal decimal_check = {{0x55555552, 0x3, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2968
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000014316557650
    s21_decimal decimal_check = {{0x55555552, 0x3, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2969
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2970
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2971
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2972
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000264093875
    s21_decimal decimal_check = {{0xFBDC0B3, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2973
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000264093870
    s21_decimal decimal_check = {{0xFBDC0AE, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2974
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000264093870
    s21_decimal decimal_check = {{0xFBDC0AE, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2975
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000020
    s21_decimal decimal_check = {{0x14, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2976
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000020
    s21_decimal decimal_check = {{0x14, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2977
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2978
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2979
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2980
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2981
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2982
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2983
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2984
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000005
    s21_decimal decimal_check = {{0x5, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2985
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2986
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2987
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000080
    s21_decimal decimal_check = {{0x50, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2988
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000080
    s21_decimal decimal_check = {{0x50, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2989
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2990
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal_check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2991
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79.228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2992
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79.228162514264337593543950335
    s21_decimal decimal_check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1B0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2993
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000079
    s21_decimal decimal_check = {{0x4F, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2994
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000079
    s21_decimal decimal_check = {{0x4F, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2995
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2996
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 0.0000000000000000000000000008
    s21_decimal decimal_check = {{0x8, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2997
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -0.0000000000007922816251426434
    s21_decimal decimal_check = {{0x68497682, 0x1C25C2, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2998
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 0.0000000000007922816251426434
    s21_decimal decimal_check = {{0x68497682, 0x1C25C2, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul2999
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul3000
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul3001
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul3002
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul3003
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3004
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3005
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3006
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3007
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul3008
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul3009
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul3010
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};
    int code_check = IS_TOO_SMALL;

    test_mul_fail2(decimal1, decimal2, decimal_check, code_check);

#test test_mul3011
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.0000000000004004352173129101
    s21_decimal decimal_check = {{0xE4D5BD8D, 0xE39EF, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3012
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.0000000000004004352173129101
    s21_decimal decimal_check = {{0xE4D5BD8D, 0xE39EF, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3013
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.0000000574765403957582656267
    s21_decimal decimal_check = {{0x6B9C730B, 0x2878E9A9, 0x1F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3014
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.0000000574765403957582656267
    s21_decimal decimal_check = {{0x6B9C730B, 0x2878E9A9, 0x1F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3015
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.0000000000000000000000070558
    s21_decimal decimal_check = {{0x1139E, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3016
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.0000000000000000000000070558
    s21_decimal decimal_check = {{0x1139E, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3017
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3018
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3019
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3020
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3021
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3022
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3023
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3024
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3025
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 573285387375055566280120.80033
    s21_decimal decimal_check = {{0xCDA51BA1, 0x3B2C6423, 0xB93D0E48, 0x50000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3026
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -573285387375055566280120.80033
    s21_decimal decimal_check = {{0xCDA51BA1, 0x3B2C6423, 0xB93D0E48, 0x80050000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3027
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 10575248824567332858988.474037
    s21_decimal decimal_check = {{0xDD4A2EB5, 0x822F484A, 0x222BA40B, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3028
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -10575248824567332858988.474037
    s21_decimal decimal_check = {{0xDD4A2EB5, 0x822F484A, 0x222BA40B, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3029
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 10575248822105090868937.919094
    s21_decimal decimal_check = {{0x7D468A76, 0x6003A43F, 0x222BA40B, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3030
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -10575248822105090868937.919094
    s21_decimal decimal_check = {{0x7D468A76, 0x6003A43F, 0x222BA40B, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3031
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 10575248622445743161168.257945
    s21_decimal decimal_check = {{0x2D766399, 0x8D2F2559, 0x222BA400, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3032
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -10575248622445743161168.257945
    s21_decimal decimal_check = {{0x2D766399, 0x8D2F2559, 0x222BA400, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3033
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 800870434625820.2177254820354
    s21_decimal decimal_check = {{0xDCA98A02, 0x8CE489CB, 0x19E0A51C, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3034
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -800870434625820.2177254820354
    s21_decimal decimal_check = {{0xDCA98A02, 0x8CE489CB, 0x19E0A51C, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3035
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 400435217312910.10886274103770
    s21_decimal decimal_check = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3036
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -400435217312910.10886274103770
    s21_decimal decimal_check = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3037
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 200217608656455.05443137051885
    s21_decimal decimal_check = {{0xA7A7DCED, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3038
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -200217608656455.05443137051885
    s21_decimal decimal_check = {{0xA7A7DCED, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3039
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 200217608656455.05443137051881
    s21_decimal decimal_check = {{0xA7A7DCE9, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3040
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -200217608656455.05443137051881
    s21_decimal decimal_check = {{0xA7A7DCE9, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3041
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 200217608656455.05443137051889
    s21_decimal decimal_check = {{0xA7A7DCF1, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3042
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -200217608656455.05443137051889
    s21_decimal decimal_check = {{0xA7A7DCF1, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3043
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 400435217312910.10886274103774
    s21_decimal decimal_check = {{0x4F4FB9DE, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3044
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -400435217312910.10886274103774
    s21_decimal decimal_check = {{0x4F4FB9DE, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3045
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 3203481738503280.8709019283016
    s21_decimal decimal_check = {{0x72A62E48, 0x3392272F, 0x67829472, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3046
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -3203481738503280.8709019283016
    s21_decimal decimal_check = {{0x72A62E48, 0x3392272F, 0x67829472, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3047
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 400435217312910.10886274103766
    s21_decimal decimal_check = {{0x4F4FB9D6, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3048
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -400435217312910.10886274103766
    s21_decimal decimal_check = {{0x4F4FB9D6, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3049
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3050
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3051
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 3172574647370199.8576965422111
    s21_decimal decimal_check = {{0x97DE8C1F, 0x868DD8E0, 0x6682EC22, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3052
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -3172574647370199.8576965422111
    s21_decimal decimal_check = {{0x97DE8C1F, 0x868DD8E0, 0x6682EC22, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3053
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 317257464737019.98576965422113
    s21_decimal decimal_check = {{0x97DE8C21, 0x868DD8E0, 0x6682EC22, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3054
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -317257464737019.98576965422113
    s21_decimal decimal_check = {{0x97DE8C21, 0x868DD8E0, 0x6682EC22, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3055
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3056
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3057
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 1.0010880432822752721568525942
    s21_decimal decimal_check = {{0xD3D3EE76, 0xB01DAC3E, 0x2058CE63, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3058
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -1.0010880432822752721568525942
    s21_decimal decimal_check = {{0xD3D3EE76, 0xB01DAC3E, 0x2058CE63, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3059
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.2002176086564550544313705188
    s21_decimal decimal_check = {{0xF72A62E4, 0x23392272, 0x6782947, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3060
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.2002176086564550544313705188
    s21_decimal decimal_check = {{0xF72A62E4, 0x23392272, 0x6782947, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3061
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3062
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3063
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3064
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3065
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000400435217312910
    s21_decimal decimal_check = {{0x96E22C8E, 0x16C31, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3066
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000400435217312910
    s21_decimal decimal_check = {{0x96E22C8E, 0x16C31, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3067
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000004004352173129101
    s21_decimal decimal_check = {{0xE4D5BD8D, 0xE39EF, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3068
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000004004352173129101
    s21_decimal decimal_check = {{0xE4D5BD8D, 0xE39EF, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3069
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3070
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3071
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3072
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3073
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -2825399045699384434.0452935949
    s21_decimal decimal_check = {{0x109AC90D, 0xBE2CD8E0, 0x5B4B2733, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3074
    // 400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 2825399045699384434.0452935949
    s21_decimal decimal_check = {{0x109AC90D, 0xBE2CD8E0, 0x5B4B2733, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3075
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3076
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3077
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3078
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3079
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3080
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3081
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3082
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3083
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -573285387375055566280120.80033
    s21_decimal decimal_check = {{0xCDA51BA1, 0x3B2C6423, 0xB93D0E48, 0x80050000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3084
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 573285387375055566280120.80033
    s21_decimal decimal_check = {{0xCDA51BA1, 0x3B2C6423, 0xB93D0E48, 0x50000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3085
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -10575248824567332858988.474037
    s21_decimal decimal_check = {{0xDD4A2EB5, 0x822F484A, 0x222BA40B, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3086
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 10575248824567332858988.474037
    s21_decimal decimal_check = {{0xDD4A2EB5, 0x822F484A, 0x222BA40B, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3087
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -10575248822105090868937.919094
    s21_decimal decimal_check = {{0x7D468A76, 0x6003A43F, 0x222BA40B, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3088
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 10575248822105090868937.919094
    s21_decimal decimal_check = {{0x7D468A76, 0x6003A43F, 0x222BA40B, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3089
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -10575248622445743161168.257945
    s21_decimal decimal_check = {{0x2D766399, 0x8D2F2559, 0x222BA400, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3090
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 10575248622445743161168.257945
    s21_decimal decimal_check = {{0x2D766399, 0x8D2F2559, 0x222BA400, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3091
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -800870434625820.2177254820354
    s21_decimal decimal_check = {{0xDCA98A02, 0x8CE489CB, 0x19E0A51C, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3092
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 800870434625820.2177254820354
    s21_decimal decimal_check = {{0xDCA98A02, 0x8CE489CB, 0x19E0A51C, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3093
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -400435217312910.10886274103770
    s21_decimal decimal_check = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3094
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 400435217312910.10886274103770
    s21_decimal decimal_check = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3095
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -200217608656455.05443137051885
    s21_decimal decimal_check = {{0xA7A7DCED, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3096
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 200217608656455.05443137051885
    s21_decimal decimal_check = {{0xA7A7DCED, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3097
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -200217608656455.05443137051881
    s21_decimal decimal_check = {{0xA7A7DCE9, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3098
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 200217608656455.05443137051881
    s21_decimal decimal_check = {{0xA7A7DCE9, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3099
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -200217608656455.05443137051889
    s21_decimal decimal_check = {{0xA7A7DCF1, 0x603B587D, 0x40B19CC7, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3100
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 200217608656455.05443137051889
    s21_decimal decimal_check = {{0xA7A7DCF1, 0x603B587D, 0x40B19CC7, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3101
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -400435217312910.10886274103774
    s21_decimal decimal_check = {{0x4F4FB9DE, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3102
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 400435217312910.10886274103774
    s21_decimal decimal_check = {{0x4F4FB9DE, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3103
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -3203481738503280.8709019283016
    s21_decimal decimal_check = {{0x72A62E48, 0x3392272F, 0x67829472, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3104
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 3203481738503280.8709019283016
    s21_decimal decimal_check = {{0x72A62E48, 0x3392272F, 0x67829472, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3105
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -400435217312910.10886274103766
    s21_decimal decimal_check = {{0x4F4FB9D6, 0xC076B0FB, 0x8163398E, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3106
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 400435217312910.10886274103766
    s21_decimal decimal_check = {{0x4F4FB9D6, 0xC076B0FB, 0x8163398E, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3107
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3108
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3109
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -3172574647370199.8576965422111
    s21_decimal decimal_check = {{0x97DE8C1F, 0x868DD8E0, 0x6682EC22, 0x800D0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3110
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 3172574647370199.8576965422111
    s21_decimal decimal_check = {{0x97DE8C1F, 0x868DD8E0, 0x6682EC22, 0xD0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3111
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -317257464737019.98576965422113
    s21_decimal decimal_check = {{0x97DE8C21, 0x868DD8E0, 0x6682EC22, 0x800E0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3112
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 317257464737019.98576965422113
    s21_decimal decimal_check = {{0x97DE8C21, 0x868DD8E0, 0x6682EC22, 0xE0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3113
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3114
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3115
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -1.0010880432822752721568525942
    s21_decimal decimal_check = {{0xD3D3EE76, 0xB01DAC3E, 0x2058CE63, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3116
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 1.0010880432822752721568525942
    s21_decimal decimal_check = {{0xD3D3EE76, 0xB01DAC3E, 0x2058CE63, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3117
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.2002176086564550544313705188
    s21_decimal decimal_check = {{0xF72A62E4, 0x23392272, 0x6782947, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3118
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.2002176086564550544313705188
    s21_decimal decimal_check = {{0xF72A62E4, 0x23392272, 0x6782947, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3119
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3120
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3121
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3122
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3123
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000400435217312910
    s21_decimal decimal_check = {{0x96E22C8E, 0x16C31, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3124
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000400435217312910
    s21_decimal decimal_check = {{0x96E22C8E, 0x16C31, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3125
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000004004352173129101
    s21_decimal decimal_check = {{0xE4D5BD8D, 0xE39EF, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3126
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000004004352173129101
    s21_decimal decimal_check = {{0xE4D5BD8D, 0xE39EF, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3127
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3128
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3129
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3130
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3131
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 2825399045699384434.0452935949
    s21_decimal decimal_check = {{0x109AC90D, 0xBE2CD8E0, 0x5B4B2733, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3132
    // -400435217312910.10886274103770
    s21_decimal decimal1 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -2825399045699384434.0452935949
    s21_decimal decimal_check = {{0x109AC90D, 0xBE2CD8E0, 0x5B4B2733, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3133
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3134
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3135
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3136
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3137
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3138
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3139
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3140
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3141
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3142
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3143
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1517920227744271651902592220.2
    s21_decimal decimal_check = {{0x930D09A, 0x4A3E7493, 0x310BF11C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3144
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1517920227744271651902592220.2
    s21_decimal decimal_check = {{0x930D09A, 0x4A3E7493, 0x310BF11C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3145
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1517920227390853308343951696.3
    s21_decimal decimal_check = {{0xEFFE4D23, 0x19328376, 0x310BF11C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3146
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1517920227390853308343951696.3
    s21_decimal decimal_check = {{0xEFFE4D23, 0x19328376, 0x310BF11C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3147
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1517920198732713195385438703.6
    s21_decimal decimal_check = {{0xB557935C, 0x9014D982, 0x310BF10C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3148
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1517920198732713195385438703.6
    s21_decimal decimal_check = {{0xB557935C, 0x9014D982, 0x310BF10C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3149
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -114953080791516531253.48487852
    s21_decimal decimal_check = {{0x90D572AC, 0xA3EBFD4F, 0x2524B22B, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3150
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 114953080791516531253.48487852
    s21_decimal decimal_check = {{0x90D572AC, 0xA3EBFD4F, 0x2524B22B, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3151
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -57476540395758265626.742442133
    s21_decimal decimal_check = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3152
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 57476540395758265626.742442133
    s21_decimal decimal_check = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3153
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -28738270197879132813.371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3154
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 28738270197879132813.371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3155
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -28738270197879132813.371221061
    s21_decimal decimal_check = {{0xEA15A445, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3156
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 28738270197879132813.371221061
    s21_decimal decimal_check = {{0xEA15A445, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3157
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -28738270197879132813.371221072
    s21_decimal decimal_check = {{0xEA15A450, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3158
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 28738270197879132813.371221072
    s21_decimal decimal_check = {{0xEA15A450, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3159
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -57476540395758265626.742442139
    s21_decimal decimal_check = {{0xD42B489B, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3160
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 57476540395758265626.742442139
    s21_decimal decimal_check = {{0xD42B489B, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3161
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -459812323166066125013.93953706
    s21_decimal decimal_check = {{0x4355D3AA, 0x8FAFF53E, 0x9492C8AE, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3162
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 459812323166066125013.93953706
    s21_decimal decimal_check = {{0x4355D3AA, 0x8FAFF53E, 0x9492C8AE, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3163
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -57476540395758265626.742442127
    s21_decimal decimal_check = {{0xD42B488F, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3164
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 57476540395758265626.742442127
    s21_decimal decimal_check = {{0xD42B488F, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3165
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3166
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3167
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -455376068323281495570.77766605
    s21_decimal decimal_check = {{0x1B9271CD, 0xDEBB5DB9, 0x9323D354, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3168
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 455376068323281495570.77766605
    s21_decimal decimal_check = {{0x1B9271CD, 0xDEBB5DB9, 0x9323D354, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3169
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -45537606832328149557.077766608
    s21_decimal decimal_check = {{0x1B9271D0, 0xDEBB5DB9, 0x9323D354, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3170
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 45537606832328149557.077766608
    s21_decimal decimal_check = {{0x1B9271D0, 0xDEBB5DB9, 0x9323D354, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3171
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3172
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3173
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -143691.35098939566406685610533
    s21_decimal decimal_check = {{0x750AD225, 0x8CE6FCA3, 0x2E6DDEB6, 0x80170000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3174
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 143691.35098939566406685610533
    s21_decimal decimal_check = {{0x750AD225, 0x8CE6FCA3, 0x2E6DDEB6, 0x170000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3175
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -28738.270197879132813371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3176
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 28738.270197879132813371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3177
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3178
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3179
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3180
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3181
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000057476540395758265627
    s21_decimal decimal_check = {{0x578FA51B, 0x1DA5B0F7, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3182
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000057476540395758265627
    s21_decimal decimal_check = {{0x578FA51B, 0x1DA5B0F7, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3183
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000574765403957582656267
    s21_decimal decimal_check = {{0x6B9C730B, 0x2878E9A9, 0x1F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3184
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000574765403957582656267
    s21_decimal decimal_check = {{0x6B9C730B, 0x2878E9A9, 0x1F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3185
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3186
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3187
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3188
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3189
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 405544156365694122530650.07150
    s21_decimal decimal_check = {{0xCE81D02E, 0xDA391347, 0x8309D38C, 0x50000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3190
    // -57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -405544156365694122530650.07150
    s21_decimal decimal_check = {{0xCE81D02E, 0xDA391347, 0x8309D38C, 0x80050000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3191
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3192
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3193
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3194
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3195
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3196
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3197
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3198
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3199
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3200
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3201
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1517920227744271651902592220.2
    s21_decimal decimal_check = {{0x930D09A, 0x4A3E7493, 0x310BF11C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3202
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1517920227744271651902592220.2
    s21_decimal decimal_check = {{0x930D09A, 0x4A3E7493, 0x310BF11C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3203
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1517920227390853308343951696.3
    s21_decimal decimal_check = {{0xEFFE4D23, 0x19328376, 0x310BF11C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3204
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1517920227390853308343951696.3
    s21_decimal decimal_check = {{0xEFFE4D23, 0x19328376, 0x310BF11C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3205
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1517920198732713195385438703.6
    s21_decimal decimal_check = {{0xB557935C, 0x9014D982, 0x310BF10C, 0x10000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3206
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1517920198732713195385438703.6
    s21_decimal decimal_check = {{0xB557935C, 0x9014D982, 0x310BF10C, 0x80010000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3207
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 114953080791516531253.48487852
    s21_decimal decimal_check = {{0x90D572AC, 0xA3EBFD4F, 0x2524B22B, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3208
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -114953080791516531253.48487852
    s21_decimal decimal_check = {{0x90D572AC, 0xA3EBFD4F, 0x2524B22B, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3209
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 57476540395758265626.742442133
    s21_decimal decimal_check = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3210
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -57476540395758265626.742442133
    s21_decimal decimal_check = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3211
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 28738270197879132813.371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3212
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -28738270197879132813.371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3213
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 28738270197879132813.371221061
    s21_decimal decimal_check = {{0xEA15A445, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3214
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -28738270197879132813.371221061
    s21_decimal decimal_check = {{0xEA15A445, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3215
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 28738270197879132813.371221072
    s21_decimal decimal_check = {{0xEA15A450, 0x19CDF946, 0x5CDBBD6D, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3216
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -28738270197879132813.371221072
    s21_decimal decimal_check = {{0xEA15A450, 0x19CDF946, 0x5CDBBD6D, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3217
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 57476540395758265626.742442139
    s21_decimal decimal_check = {{0xD42B489B, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3218
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -57476540395758265626.742442139
    s21_decimal decimal_check = {{0xD42B489B, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3219
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 459812323166066125013.93953706
    s21_decimal decimal_check = {{0x4355D3AA, 0x8FAFF53E, 0x9492C8AE, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3220
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -459812323166066125013.93953706
    s21_decimal decimal_check = {{0x4355D3AA, 0x8FAFF53E, 0x9492C8AE, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3221
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 57476540395758265626.742442127
    s21_decimal decimal_check = {{0xD42B488F, 0x339BF28D, 0xB9B77ADA, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3222
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -57476540395758265626.742442127
    s21_decimal decimal_check = {{0xD42B488F, 0x339BF28D, 0xB9B77ADA, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3223
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3224
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3225
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 455376068323281495570.77766605
    s21_decimal decimal_check = {{0x1B9271CD, 0xDEBB5DB9, 0x9323D354, 0x80000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3226
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -455376068323281495570.77766605
    s21_decimal decimal_check = {{0x1B9271CD, 0xDEBB5DB9, 0x9323D354, 0x80080000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3227
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 45537606832328149557.077766608
    s21_decimal decimal_check = {{0x1B9271D0, 0xDEBB5DB9, 0x9323D354, 0x90000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3228
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -45537606832328149557.077766608
    s21_decimal decimal_check = {{0x1B9271D0, 0xDEBB5DB9, 0x9323D354, 0x80090000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3229
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3230
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3231
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 143691.35098939566406685610533
    s21_decimal decimal_check = {{0x750AD225, 0x8CE6FCA3, 0x2E6DDEB6, 0x170000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3232
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -143691.35098939566406685610533
    s21_decimal decimal_check = {{0x750AD225, 0x8CE6FCA3, 0x2E6DDEB6, 0x80170000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3233
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 28738.270197879132813371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3234
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -28738.270197879132813371221066
    s21_decimal decimal_check = {{0xEA15A44A, 0x19CDF946, 0x5CDBBD6D, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3235
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3236
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3237
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3238
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3239
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000057476540395758265627
    s21_decimal decimal_check = {{0x578FA51B, 0x1DA5B0F7, 0x3, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3240
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000057476540395758265627
    s21_decimal decimal_check = {{0x578FA51B, 0x1DA5B0F7, 0x3, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3241
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000574765403957582656267
    s21_decimal decimal_check = {{0x6B9C730B, 0x2878E9A9, 0x1F, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3242
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000574765403957582656267
    s21_decimal decimal_check = {{0x6B9C730B, 0x2878E9A9, 0x1F, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3243
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3244
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3245
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3246
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3247
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -405544156365694122530650.07150
    s21_decimal decimal_check = {{0xCE81D02E, 0xDA391347, 0x8309D38C, 0x80050000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3248
    // 57476540395758265626.742442133
    s21_decimal decimal1 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 405544156365694122530650.07150
    s21_decimal decimal_check = {{0xCE81D02E, 0xDA391347, 0x8309D38C, 0x50000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3249
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3250
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3251
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3252
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3253
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -43385638798924061271577.476380
    s21_decimal decimal_check = {{0x588A3D1C, 0x5F33F93, 0x8C2FC260, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3254
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 43385638798924061271577.476380
    s21_decimal decimal_check = {{0x588A3D1C, 0x5F33F93, 0x8C2FC260, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3255
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -43385638788822555067041.628136
    s21_decimal decimal_check = {{0xDEC6BFE8, 0x79C37D33, 0x8C2FC25F, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3256
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 43385638788822555067041.628136
    s21_decimal decimal_check = {{0xDEC6BFE8, 0x79C37D33, 0x8C2FC25F, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3257
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -10101506204535.848243870220179
    s21_decimal decimal_check = {{0x8656BF93, 0x9DDEA388, 0x20A3C524, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3258
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 10101506204535.848243870220179
    s21_decimal decimal_check = {{0x8656BF93, 0x9DDEA388, 0x20A3C524, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3259
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -186339899757.44756315902694159
    s21_decimal decimal_check = {{0x6497D30F, 0xB053CF6F, 0x3C35ACDC, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3260
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 186339899757.44756315902694159
    s21_decimal decimal_check = {{0x6497D30F, 0xB053CF6F, 0x3C35ACDC, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3261
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -186339899714.06192437020438652
    s21_decimal decimal_check = {{0xF079B07C, 0x741E2292, 0x3C35ACDC, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3262
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 186339899714.06192437020438652
    s21_decimal decimal_check = {{0xF079B07C, 0x741E2292, 0x3C35ACDC, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3263
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -186339896195.98840622531843224
    s21_decimal decimal_check = {{0xCF019498, 0x61CF580D, 0x3C35ACC9, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3264
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 186339896195.98840622531843224
    s21_decimal decimal_check = {{0xCF019498, 0x61CF580D, 0x3C35ACC9, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3265
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -14111.641152139457551613630632
    s21_decimal decimal_check = {{0xD22D18A8, 0xB969E962, 0x2D98E03F, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3266
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 14111.641152139457551613630632
    s21_decimal decimal_check = {{0xD22D18A8, 0xB969E962, 0x2D98E03F, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3267
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7055.820576069728775806815669
    s21_decimal decimal_check = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3268
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7055.820576069728775806815669
    s21_decimal decimal_check = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3269
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -3527.9102880348643879034078345
    s21_decimal decimal_check = {{0xD70C489, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3270
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 3527.9102880348643879034078345
    s21_decimal decimal_check = {{0xD70C489, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3271
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3527.9102880348643879034078338
    s21_decimal decimal_check = {{0xD70C482, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3272
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3527.9102880348643879034078338
    s21_decimal decimal_check = {{0xD70C482, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3273
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3527.9102880348643879034078352
    s21_decimal decimal_check = {{0xD70C490, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3274
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3527.9102880348643879034078352
    s21_decimal decimal_check = {{0xD70C490, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3275
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7055.8205760697287758068156697
    s21_decimal decimal_check = {{0x1AE18919, 0x9F118EEE, 0xE3FC613E, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3276
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7055.8205760697287758068156697
    s21_decimal decimal_check = {{0x1AE18919, 0x9F118EEE, 0xE3FC613E, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3277
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -56446.564608557830206454525352
    s21_decimal decimal_check = {{0x48B46DA8, 0xE5A7A58B, 0xB66380FE, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3278
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 56446.564608557830206454525352
    s21_decimal decimal_check = {{0x48B46DA8, 0xE5A7A58B, 0xB66380FE, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3279
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7055.8205760697287758068156683
    s21_decimal decimal_check = {{0x1AE1890B, 0x9F118EEE, 0xE3FC613E, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3280
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7055.8205760697287758068156683
    s21_decimal decimal_check = {{0x1AE1890B, 0x9F118EEE, 0xE3FC613E, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3281
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3282
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3283
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -55901.969927234268947708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3284
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 55901.969927234268947708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3285
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // -5590.1969927234268947708082480
    s21_decimal decimal_check = {{0x2DC77930, 0x10FB6E4E, 0xB4A10696, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3286
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // 5590.1969927234268947708082480
    s21_decimal decimal_check = {{0x2DC77930, 0x10FB6E4E, 0xB4A10696, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3287
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // -5590196992723426894.7708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3288
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // 5590196992723426894.7708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3289
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // -0.0000000000176395514401743219
    s21_decimal decimal_check = {{0x27E36173, 0x272AEC9, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3290
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // 0.0000000000176395514401743219
    s21_decimal decimal_check = {{0x27E36173, 0x272AEC9, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3291
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // -0.0000000000035279102880348644
    s21_decimal decimal_check = {{0x3B2D79E4, 0x7D5628, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3292
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // 0.0000000000035279102880348644
    s21_decimal decimal_check = {{0x3B2D79E4, 0x7D5628, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3293
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3294
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3295
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3296
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3297
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000007056
    s21_decimal decimal_check = {{0x1B90, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3298
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000007056
    s21_decimal decimal_check = {{0x1B90, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3299
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000070558
    s21_decimal decimal_check = {{0x1139E, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3300
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000070558
    s21_decimal decimal_check = {{0x1139E, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3301
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // -2825399045699384434.0452935949
    s21_decimal decimal_check = {{0x109AC90D, 0xBE2CD8E0, 0x5B4B2733, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3302
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // 2825399045699384434.0452935949
    s21_decimal decimal_check = {{0x109AC90D, 0xBE2CD8E0, 0x5B4B2733, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3303
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // 405544156365694122530650.07150
    s21_decimal decimal_check = {{0xCE81D02E, 0xDA391347, 0x8309D38C, 0x50000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3304
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // -405544156365694122530650.07150
    s21_decimal decimal_check = {{0xCE81D02E, 0xDA391347, 0x8309D38C, 0x80050000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3305
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 49784604.001688959238158904099
    s21_decimal decimal_check = {{0x40136B23, 0xBF8285B9, 0xA0DCDBF6, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3306
    // -7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -49784604.001688959238158904099
    s21_decimal decimal_check = {{0x40136B23, 0xBF8285B9, 0xA0DCDBF6, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3307
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3308
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3309
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3310
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3311
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 43385638798924061271577.476380
    s21_decimal decimal_check = {{0x588A3D1C, 0x5F33F93, 0x8C2FC260, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3312
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -43385638798924061271577.476380
    s21_decimal decimal_check = {{0x588A3D1C, 0x5F33F93, 0x8C2FC260, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3313
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 43385638788822555067041.628136
    s21_decimal decimal_check = {{0xDEC6BFE8, 0x79C37D33, 0x8C2FC25F, 0x60000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3314
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -43385638788822555067041.628136
    s21_decimal decimal_check = {{0xDEC6BFE8, 0x79C37D33, 0x8C2FC25F, 0x80060000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3315
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 10101506204535.848243870220179
    s21_decimal decimal_check = {{0x8656BF93, 0x9DDEA388, 0x20A3C524, 0xF0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3316
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -10101506204535.848243870220179
    s21_decimal decimal_check = {{0x8656BF93, 0x9DDEA388, 0x20A3C524, 0x800F0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3317
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 186339899757.44756315902694159
    s21_decimal decimal_check = {{0x6497D30F, 0xB053CF6F, 0x3C35ACDC, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3318
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -186339899757.44756315902694159
    s21_decimal decimal_check = {{0x6497D30F, 0xB053CF6F, 0x3C35ACDC, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3319
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 186339899714.06192437020438652
    s21_decimal decimal_check = {{0xF079B07C, 0x741E2292, 0x3C35ACDC, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3320
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -186339899714.06192437020438652
    s21_decimal decimal_check = {{0xF079B07C, 0x741E2292, 0x3C35ACDC, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3321
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 186339896195.98840622531843224
    s21_decimal decimal_check = {{0xCF019498, 0x61CF580D, 0x3C35ACC9, 0x110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3322
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -186339896195.98840622531843224
    s21_decimal decimal_check = {{0xCF019498, 0x61CF580D, 0x3C35ACC9, 0x80110000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3323
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 14111.641152139457551613630632
    s21_decimal decimal_check = {{0xD22D18A8, 0xB969E962, 0x2D98E03F, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3324
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -14111.641152139457551613630632
    s21_decimal decimal_check = {{0xD22D18A8, 0xB969E962, 0x2D98E03F, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3325
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7055.820576069728775806815669
    s21_decimal decimal_check = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3326
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7055.820576069728775806815669
    s21_decimal decimal_check = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3327
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 3527.9102880348643879034078345
    s21_decimal decimal_check = {{0xD70C489, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3328
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -3527.9102880348643879034078345
    s21_decimal decimal_check = {{0xD70C489, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3329
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3527.9102880348643879034078338
    s21_decimal decimal_check = {{0xD70C482, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3330
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3527.9102880348643879034078338
    s21_decimal decimal_check = {{0xD70C482, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3331
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3527.9102880348643879034078352
    s21_decimal decimal_check = {{0xD70C490, 0x4F88C777, 0x71FE309F, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3332
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3527.9102880348643879034078352
    s21_decimal decimal_check = {{0xD70C490, 0x4F88C777, 0x71FE309F, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3333
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7055.8205760697287758068156697
    s21_decimal decimal_check = {{0x1AE18919, 0x9F118EEE, 0xE3FC613E, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3334
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7055.8205760697287758068156697
    s21_decimal decimal_check = {{0x1AE18919, 0x9F118EEE, 0xE3FC613E, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3335
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 56446.564608557830206454525352
    s21_decimal decimal_check = {{0x48B46DA8, 0xE5A7A58B, 0xB66380FE, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3336
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -56446.564608557830206454525352
    s21_decimal decimal_check = {{0x48B46DA8, 0xE5A7A58B, 0xB66380FE, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3337
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7055.8205760697287758068156683
    s21_decimal decimal_check = {{0x1AE1890B, 0x9F118EEE, 0xE3FC613E, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3338
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7055.8205760697287758068156683
    s21_decimal decimal_check = {{0x1AE1890B, 0x9F118EEE, 0xE3FC613E, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3339
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int code_check = IS_TOO_LARGE;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3340
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int code_check = IS_TOO_SMALL;

    test_mul_fail(decimal1, decimal2, code_check);

#test test_mul3341
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 55901.969927234268947708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3342
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -55901.969927234268947708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x80180000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3343
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x1C0000}};
    // 5590.1969927234268947708082480
    s21_decimal decimal_check = {{0x2DC77930, 0x10FB6E4E, 0xB4A10696, 0x190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3344
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x801C0000}};
    // -5590.1969927234268947708082480
    s21_decimal decimal_check = {{0x2DC77930, 0x10FB6E4E, 0xB4A10696, 0x80190000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3345
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xE0000}};
    // 5590196992723426894.7708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3346
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -792281625142643.37593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x800E0000}};
    // -5590196992723426894.7708082476
    s21_decimal decimal_check = {{0x2DC7792C, 0x10FB6E4E, 0xB4A10696, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3347
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x100000}};
    // 0.0000000000176395514401743219
    s21_decimal decimal_check = {{0x27E36173, 0x272AEC9, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3348
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.0000000000000025
    s21_decimal decimal2 = {{0x19, 0x0, 0x0, 0x80100000}};
    // -0.0000000000176395514401743219
    s21_decimal decimal_check = {{0x27E36173, 0x272AEC9, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3349
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x100000}};
    // 0.0000000000035279102880348644
    s21_decimal decimal_check = {{0x3B2D79E4, 0x7D5628, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3350
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.0000000000000005
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80100000}};
    // -0.0000000000035279102880348644
    s21_decimal decimal_check = {{0x3B2D79E4, 0x7D5628, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3351
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3352
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3353
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3354
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal_check = {{0x0, 0x0, 0x0, 0x0}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3355
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000007056
    s21_decimal decimal_check = {{0x1B90, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3356
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000007056
    s21_decimal decimal_check = {{0x1B90, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3357
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000070558
    s21_decimal decimal_check = {{0x1139E, 0x0, 0x0, 0x1C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3358
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000070558
    s21_decimal decimal_check = {{0x1139E, 0x0, 0x0, 0x801C0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3359
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0xE0000}};
    // 2825399045699384434.0452935949
    s21_decimal decimal_check = {{0x109AC90D, 0xBE2CD8E0, 0x5B4B2733, 0xA0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3360
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -400435217312910.10886274103770
    s21_decimal decimal2 = {{0x4F4FB9DA, 0xC076B0FB, 0x8163398E, 0x800E0000}};
    // -2825399045699384434.0452935949
    s21_decimal decimal_check = {{0x109AC90D, 0xBE2CD8E0, 0x5B4B2733, 0x800A0000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3361
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x80090000}};
    // -405544156365694122530650.07150
    s21_decimal decimal_check = {{0xCE81D02E, 0xDA391347, 0x8309D38C, 0x80050000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3362
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 57476540395758265626.742442133
    s21_decimal decimal2 = {{0xD42B4895, 0x339BF28D, 0xB9B77ADA, 0x90000}};
    // 405544156365694122530650.07150
    s21_decimal decimal_check = {{0xCE81D02E, 0xDA391347, 0x8309D38C, 0x50000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3363
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // -7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x80180000}};
    // -49784604.001688959238158904099
    s21_decimal decimal_check = {{0x40136B23, 0xBF8285B9, 0xA0DCDBF6, 0x80150000}};

    test_mul(decimal1, decimal2, decimal_check);

#test test_mul3364
    // 7055.820576069728775806815669
    s21_decimal decimal1 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 7055.820576069728775806815669
    s21_decimal decimal2 = {{0x69168DB5, 0xDCB4F4B1, 0x16CC701F, 0x180000}};
    // 49784604.001688959238158904099
    s21_decimal decimal_check = {{0x40136B23, 0xBF8285B9, 0xA0DCDBF6, 0x150000}};

    test_mul(decimal1, decimal2, decimal_check);

