// ##################################################################### //
// ----------------------------- s21_is_less   ------------------------- //
// ##################################################################### //

#test s21_is_less_test1
printf("Testing comparison...\n");
// 7922816251426433759354395034
s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
// -79228162514264337593543950335
s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test s21_is_less_test2
// 0.0000000000000000000000000001
s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
// -52818775009509558395695966890
s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test s21_is_less_test3
// 47209772988309285293.155713691
s21_decimal decimal1 = {{0x4A3C829B, 0xD2D8CC92, 0x988B0249, 0x90000}};
// 5.281877500950955839569596690
s21_decimal decimal2 = {{0x11111112, 0x11111111, 0x11111111, 0x1B0000}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test s21_is_less_test4
    // -47209772988309285293.155713691
    s21_decimal decimal1 = {{0x4A3C829B, 0xD2D8CC92, 0x988B0249, 0x80090000}};
    // 5.281877500950955839569596690
    s21_decimal decimal2 = {{0x11111112, 0x11111111, 0x11111111, 0x1B0000}};
    ck_assert_int_eq(s21_is_less(decimal1, decimal2), 1);

#test s21_is_less_test5
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -5281877500950955839569596689
    s21_decimal decimal2 = {{0x11111111, 0x11111111, 0x11111111, 0x80000000}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test s21_is_less_test6
    // -1431655765.00000
    s21_decimal decimal1 = {{0x5554D320, 0x8235, 0x0, 0x80050000}};
    // -5281877500950955839569596689.0
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80010000}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test s21_is_less_test7
    // -1431655765.000000000000000001
    s21_decimal decimal1 = {{0xC8340001, 0x8881186E, 0x4A03CE6, 0x80120000}};
    // 1.2297829382473034409
    s21_decimal decimal2 = {{0xAAAAAAA9, 0xAAAAAAAA, 0x0, 0x130000}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 1);

#test s21_is_less_test8
    // -1.2297829382473034410
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0x0, 0x80130000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 1);

#test s21_is_less_test9
    // -0.00000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x800E0000}};
    // -1.2297829382473034411
    s21_decimal decimal2 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x80130000}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test s21_is_less_test10
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // 1.23000
    s21_decimal decimal2 = {{0x1E078, 0x0, 0x0, 0x50000}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 1);

#test s21_is_less_test11
// 79228162514264337593543950335
s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
// 79228162514264337593543950335
s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test s21_is_less_test12
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test s21_is_less_test13
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_less(decimal1, decimal2), 1);

#test s21_is_less_test14
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);



// ##################################################################### //
// ----------------------------- s21_is_less_or_equal ------------------- //
// ##################################################################### //
#test s21_is_less_or_equal_test1
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 1);
	
#test s21_is_less_or_equal_test2
    // 5281877500950955839569596689.0
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 0);
	
#test s21_is_less_or_equal_test3
    // -1.2297829382473034409
    s21_decimal decimal1 = {{0xAAAAAAA9, 0xAAAAAAAA, 0x0, 0x80130000}};
    // 52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 1);
	
#test s21_is_less_or_equal_test4
    // 52818775009509558395695966890
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    // -52818775009509558395695966891
    s21_decimal decimal2 = {{0xAAAAAAAB, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 0);
	
#test s21_is_less_or_equal_test5
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 0);
	
#test s21_is_less_or_equal_test6
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 0);
	
#test s21_is_less_or_equal_test7
    // 1.2297829382473034409
    s21_decimal decimal1 = {{0xAAAAAAA9, 0xAAAAAAAA, 0x0, 0x130000}};
    // -1.230001
    s21_decimal decimal2 = {{0x12C4B1, 0x0, 0x0, 0x80060000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 0);
	
#test s21_is_less_or_equal_test8
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.00000
    s21_decimal decimal2 = {{0x5554D320, 0x8235, 0x0, 0x80050000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 0);
	
#test s21_is_less_or_equal_test9
    // -1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x80130000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 1);
	
#test s21_is_less_or_equal_test10
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -24054676222594164633554651068
    s21_decimal decimal2 = {{0xCE5807BC, 0xF2D773B6, 0x4DB98FD2, 0x80000000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 0);

#test s21_is_less_or_equal_test11
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 1);

#test s21_is_less_or_equal_test12
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 1);

#test s21_is_less_or_equal_test13
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 1);

#test s21_is_less_or_equal_test14
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 0);


// ##################################################################### //
// ----------------------------- s21_is_greater ------------------- //
// ##################################################################### //

#test s21_is_greater_test1
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 0);
	
#test s21_is_greater_test2
    // 5281877500950955839569596689.0
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 1);
	
#test s21_is_greater_test3
    // -1.2297829382473034409
    s21_decimal decimal1 = {{0xAAAAAAA9, 0xAAAAAAAA, 0x0, 0x80130000}};
    // 52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 0);
	
#test s21_is_greater_test4
    // 52818775009509558395695966890
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    // -52818775009509558395695966891
    s21_decimal decimal2 = {{0xAAAAAAAB, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 1);
	
#test s21_is_greater_test5
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 1);
	
	
#test s21_is_greater_test6
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 1);
	
	
#test s21_is_greater_test7
    // 1.2297829382473034409
    s21_decimal decimal1 = {{0xAAAAAAA9, 0xAAAAAAAA, 0x0, 0x130000}};
    // -1.230001
    s21_decimal decimal2 = {{0x12C4B1, 0x0, 0x0, 0x80060000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 1);
	
#test s21_is_greater_test8
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.00000
    s21_decimal decimal2 = {{0x5554D320, 0x8235, 0x0, 0x80050000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 1);
	
#test s21_is_greater_test9
    // -1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x80130000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 0);
	
#test s21_is_greater_test10
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -24054676222594164633554651068
    s21_decimal decimal2 = {{0xCE5807BC, 0xF2D773B6, 0x4DB98FD2, 0x80000000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 1);

#test s21_is_greater_test11
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 0);

#test s21_is_greater_test12
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 0);

#test s21_is_greater_test13
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 0);

#test s21_is_greater_test14
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 1);

// ##################################################################### //
// ----------------------------- s21_is_greater_or_equal ------------------- //
// ##################################################################### //

#test s21_is_greater_or_equal_test1
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);
	
#test s21_is_greater_or_equal_test2
    // 5281877500950955839569596689.0
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);
	
#test s21_is_greater_or_equal_test3
    // -1.2297829382473034409
    s21_decimal decimal1 = {{0xAAAAAAA9, 0xAAAAAAAA, 0x0, 0x80130000}};
    // 52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 0);
	
#test s21_is_greater_or_equal_test4
    // 52818775009509558395695966890
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    // -52818775009509558395695966891
    s21_decimal decimal2 = {{0xAAAAAAAB, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);
	
#test s21_is_greater_or_equal_test5
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);
	
	
#test s21_is_greater_or_equal_test6
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);
	
	
#test s21_is_greater_or_equal_test7
    // 1.2297829382473034409
    s21_decimal decimal1 = {{0xAAAAAAA9, 0xAAAAAAAA, 0x0, 0x130000}};
    // -1.230001
    s21_decimal decimal2 = {{0x12C4B1, 0x0, 0x0, 0x80060000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);
	
#test s21_is_greater_or_equal_test8
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.00000
    s21_decimal decimal2 = {{0x5554D320, 0x8235, 0x0, 0x80050000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);
	
#test s21_is_greater_or_equal_test9
    // -1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x80130000}};
    // 0.9999999999999999999999999999
    s21_decimal decimal2 = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 0);
	
#test s21_is_greater_or_equal_test10
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -24054676222594164633554651068
    s21_decimal decimal2 = {{0xCE5807BC, 0xF2D773B6, 0x4DB98FD2, 0x80000000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);

#test s21_is_greater_or_equal_test11
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);

#test s21_is_greater_or_equal_test12
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);

#test s21_is_greater_or_equal_test13
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 0);

#test is21_is_greater_or_equal_test14
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);

    
// ##################################################################### //
// ----------------------------- s21_is_equal ------------------- //
// ##################################################################### //

#test s21_is_equal_test1
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 1);
	
#test s21_is_equal_test2
    // 5281877500950955839569596689.0
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 0);
	
#test s21_is_equal_test3
    // -1.2297829382473034409
    s21_decimal decimal1 = {{0xAAAAAAA9, 0xAAAAAAAA, 0x0, 0x80130000}};
    // 52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 0);
	
#test s21_is_equal_test4
    // 52818775009509558395695966890
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    // -52818775009509558395695966891
    s21_decimal decimal2 = {{0xAAAAAAAB, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 0);
	
#test s21_is_equal_test5
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 0);
	
	
#test s21_is_equal_test6
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 0);
	
	
#test s21_is_equal_test7
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 1);
	
#test s21_is_equal_test8
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.00000
    s21_decimal decimal2 = {{0x5554D320, 0x8235, 0x0, 0x80050000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 0);
	
#test s21_is_equal_test9
    // 5.281877500950955839569596690
    s21_decimal decimal1 = {{0x11111112, 0x11111111, 0x11111111, 0x1B0000}};
    // 5.281877500950955839569596690
    s21_decimal decimal2 = {{0x11111112, 0x11111111, 0x11111111, 0x1B0000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 1);
	
#test s21_is_equal_test10
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x10000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 1);

#test s21_is_equal_test11
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 1);

#test s21_is_equal_test12
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 1);

#test s21_is_equal_test13
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 0);

#test is21_is_equal_test14
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 0);

// ##################################################################### //
// ----------------------------- s21_is_not_equal ------------------- //
// ##################################################################### //

#test s21_is_not_equal_test1
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 0);
	
#test s21_is_not_equal_test2
    // 5281877500950955839569596689.0
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 1);
	
#test s21_is_not_equal_test3
    // -1.2297829382473034409
    s21_decimal decimal1 = {{0xAAAAAAA9, 0xAAAAAAAA, 0x0, 0x80130000}};
    // 52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 1);
	
#test s21_is_not_equal_test4
    // 52818775009509558395695966890
    s21_decimal decimal1 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};
    // -52818775009509558395695966891
    s21_decimal decimal2 = {{0xAAAAAAAB, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 1);
	
#test s21_is_not_equal_test5
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 1);
	
	
#test s21_is_not_equal_test6
    // 1.2297829382473034411
    s21_decimal decimal1 = {{0xAAAAAAAB, 0xAAAAAAAA, 0x0, 0x130000}};
    // -52818775009509558395695966890
    s21_decimal decimal2 = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 1);
	
	
#test s21_is_not_equal_test7
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 0);
	
#test s21_is_not_equal_test8
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.00000
    s21_decimal decimal2 = {{0x5554D320, 0x8235, 0x0, 0x80050000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 1);
	
#test s21_is_not_equal_test9
    // 5.281877500950955839569596690
    s21_decimal decimal1 = {{0x11111112, 0x11111111, 0x11111111, 0x1B0000}};
    // 5.281877500950955839569596690
    s21_decimal decimal2 = {{0x11111112, 0x11111111, 0x11111111, 0x1B0000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 0);
	
#test s21_is_not_equal_test10
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x10000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 0);

#test s21_is_not_equal_test11
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 0);

#test s21_is_not_equal_test12
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 0);

#test s21_is_not_equal_test13
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 1);

#test is21_is_not_equal_test14
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    ck_assert_int_eq(s21_is_not_equal(decimal1, decimal2), 1);

#test zero_values_1
    s21_decimal decimal1 = {{132, 237, 323, 2371}};
    decimal1.is_negative = TRUE;
    s21_decimal decimal2 = {{0, 0, 0, 0}};
    decimal2.is_negative = TRUE;
    ck_assert_int_eq(s21_is_less(decimal1, decimal2), 1);

#test zero_values_2
    s21_decimal decimal1 = {{132, 237, 323, 2371}};
    s21_decimal decimal2 = {{0, 0, 0, 0}};
    decimal2.is_negative = TRUE;
    ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test zero_values_3
    s21_decimal decimal1 = {{132, 237, 323, 2371}};
    s21_decimal decimal2 = {{0, 0, 0, 0}};
    ck_assert_int_eq(s21_is_less(decimal1, decimal2), 0);

#test zero_values_4
    s21_decimal decimal1 = {{132, 237, 323, 2371}};
    s21_decimal decimal2 = {{0, 0, 0, 0}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 1);

#test zero_values_5
    s21_decimal decimal2 = {{132, 237, 323, 2371}};
    s21_decimal decimal1 = {{0, 0, 0, 0}};
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 0);

#test zero_values_6
    s21_decimal decimal1 = {{0, 0, 0, 0}};
    s21_decimal decimal2 = {{0, 0, 0, 0}};
    decimal2.is_negative = TRUE;
    ck_assert_int_eq(s21_is_greater(decimal1, decimal2), 0);

#test zero_values_7
    s21_decimal decimal1 = {{0, 0, 0, 0}};
    s21_decimal decimal2 = {{0, 0, 0, 0}};
    decimal2.is_negative = TRUE;
    ck_assert_int_eq(s21_is_equal(decimal1, decimal2), 1);

#test zero_values_8
    s21_decimal decimal1 = {{0, 0, 0, 0}};
    s21_decimal decimal2 = {{0, 0, 0, 0}};
    decimal2.is_negative = TRUE;
    ck_assert_int_eq(s21_is_greater_or_equal(decimal1, decimal2), 1);

#test zero_values_9
    s21_decimal decimal1 = {{0, 0, 0, 0}};
    s21_decimal decimal2 = {{0, 0, 0, 0}};
    decimal2.is_negative = TRUE;
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 1);

#test zero_values_10
    s21_decimal decimal1 = {{0, 0, 0, 0}};
    s21_decimal decimal2 = {{0, 0, 0, 0}};
    decimal1.is_negative = TRUE;
    ck_assert_int_eq(s21_is_less_or_equal(decimal1, decimal2), 1);


