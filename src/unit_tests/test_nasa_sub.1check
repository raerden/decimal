#test test_sub1
printf("Running NASA s21_sub check...\n");
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub4
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub5
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub6
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub7
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub8
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub9
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub10
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub11
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub12
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub13
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub14
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub15
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub16
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub17
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub18
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub19
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub20
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub21
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub22
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub23
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub24
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub25
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub26
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub27
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 52818775015658473085500828330
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub28
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub29
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 79228162508115422902307433130
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub30
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub31
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 79228162508115422903739088895
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub32
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub33
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 79228162514264337592112294570
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub34
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub35
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub36
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub37
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub38
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub39
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub40
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub41
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub42
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub43
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub44
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub45
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 79228162514264337593543950331
    s21_decimal check = {{0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub46
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub47
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub48
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub49
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub50
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub51
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub52
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub53
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub54
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub55
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 79228162514264337593543949689
    s21_decimal check = {{0xFFFFFD79, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub56
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub57
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub58
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 79228162514240090656400479551
    s21_decimal check = {{0x4AC153F, 0xFFA9DB8A, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub59
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 18994429982494779296567793531
    s21_decimal check = {{0xB3DC177B, 0x9B738FD3, 0x3D5FD300, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub60
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub61
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub62
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub63
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub64
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub65
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub66
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub67
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub68
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub69
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub70
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub71
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub72
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub73
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub74
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub75
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub76
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub77
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub78
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub79
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub80
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub81
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub82
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub83
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub84
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub85
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub86
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub87
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub88
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -52818775015658473085500828330
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub89
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub90
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -79228162508115422902307433130
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub91
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub92
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -79228162508115422903739088895
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub93
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub94
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -79228162514264337592112294570
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub95
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub96
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub97
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub98
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub99
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub100
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub101
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub102
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub103
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub104
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub105
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub106
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -79228162514264337593543950331
    s21_decimal check = {{0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub107
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub108
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub109
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub110
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub111
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub112
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub113
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub114
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub115
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub116
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -79228162514264337593543949689
    s21_decimal check = {{0xFFFFFD79, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub117
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -79228162514240090656400479551
    s21_decimal check = {{0x4AC153F, 0xFFA9DB8A, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub118
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub119
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub120
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -18994429982494779296567793531
    s21_decimal check = {{0xB3DC177B, 0x9B738FD3, 0x3D5FD300, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub121
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub122
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub123
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub124
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub125
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub126
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub127
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub128
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub129
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub130
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub131
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 71305346262837903834189555299
    s21_decimal check = {{0x66666663, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub132
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub133
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub134
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub135
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub136
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub137
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub138
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub139
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub140
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub141
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 79228162514264337593543950332
    s21_decimal check = {{0xFFFFFFFC, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub142
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub143
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub144
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub145
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 52818775009509558395695966889
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub146
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub147
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 52818775015658473085500828329
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub148
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub149
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 79228162508115422902307433129
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub150
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub151
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 79228162508115422903739088894
    s21_decimal check = {{0xFFFFFFFE, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub152
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub153
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 79228162514264337592112294569
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub154
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub155
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 79228162514264337593517540946
    s21_decimal check = {{0xFE6D0652, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub156
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub157
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub158
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub159
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub160
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub161
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub162
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub163
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub164
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub165
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 79228162514264337593543950330
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub166
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub167
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub168
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub169
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub170
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub171
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub172
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub173
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub174
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub175
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 79228162514264337593543949688
    s21_decimal check = {{0xFFFFFD78, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub176
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub177
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub178
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 79228162514240090656400479550
    s21_decimal check = {{0x4AC153E, 0xFFA9DB8A, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub179
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 18994429982494779296567793530
    s21_decimal check = {{0xB3DC177A, 0x9B738FD3, 0x3D5FD300, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub180
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub181
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub182
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub183
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub184
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub185
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub186
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub187
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub188
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub189
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub190
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub191
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub192
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -71305346262837903834189555299
    s21_decimal check = {{0x66666663, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub193
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub194
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub195
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub196
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub197
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub198
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub199
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub200
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub201
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub202
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -79228162514264337593543950332
    s21_decimal check = {{0xFFFFFFFC, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub203
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub204
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub205
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub206
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -52818775009509558395695966889
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub207
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub208
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -52818775015658473085500828329
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub209
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub210
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -79228162508115422902307433129
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub211
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub212
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -79228162508115422903739088894
    s21_decimal check = {{0xFFFFFFFE, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub213
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub214
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -79228162514264337592112294569
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub215
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub216
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -79228162514264337593517540946
    s21_decimal check = {{0xFE6D0652, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub217
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub218
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub219
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub220
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub221
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub222
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub223
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub224
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub225
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub226
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -79228162514264337593543950330
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub227
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub228
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub229
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub230
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub231
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub232
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub233
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub234
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub235
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub236
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -79228162514264337593543949688
    s21_decimal check = {{0xFFFFFD78, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub237
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -79228162514240090656400479550
    s21_decimal check = {{0x4AC153E, 0xFFA9DB8A, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub238
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub239
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub240
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -18994429982494779296567793530
    s21_decimal check = {{0xB3DC177A, 0x9B738FD3, 0x3D5FD300, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub241
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub242
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub243
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub244
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub245
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub246
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub247
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub248
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub249
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub250
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub251
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub252
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub253
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395032
    s21_decimal check = {{0x99999998, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub254
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub255
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub256
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub257
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub258
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub259
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub260
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub261
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395031.0
    s21_decimal check = {{0xFFFFFFE6, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub262
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub263
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub264
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub265
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub266
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub267
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub268
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub269
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816245277519068117877828
    s21_decimal check = {{0x44444444, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub270
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub271
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816245277519069549533593
    s21_decimal check = {{0x99999999, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub272
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816257575348449159256473
    s21_decimal check = {{0x99999999, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub273
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433757922739268
    s21_decimal check = {{0x44444444, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub274
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub275
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub276
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub277
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub278
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub279
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759327985646
    s21_decimal check = {{0x98069FEE, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub280
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub281
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395025.1
    s21_decimal check = {{0xFFFFFFAB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub282
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub283
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395025
    s21_decimal check = {{0x99999991, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub284
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub285
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395029.4
    s21_decimal check = {{0xFFFFFFD6, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub286
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub287
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub288
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub289
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub290
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub291
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub292
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub293
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub294
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub295
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 7922816251426433759354394386.7
    s21_decimal check = {{0xFFFFE6BB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub296
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 7922816251426433759354395679
    s21_decimal check = {{0x99999C1F, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub297
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 7922816251450680696497865817
    s21_decimal check = {{0x94ED8459, 0x99EFBE0F, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub298
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 7922816251402186822210924249.2
    s21_decimal check = {{0x2EB8D47C, 0xFCA29364, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub299
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -52310916280343124537621761771
    s21_decimal check = {{0xB28A4EEB, 0xCAF2D692, 0xA9069365, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub300
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 68156548783195992056330551837
    s21_decimal check = {{0xE5BD821D, 0xFE2609C5, 0xDC39C698, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub301
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub302
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub303
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub304
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub305
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub306
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub307
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub308
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub309
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub310
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub311
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub312
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub313
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub314
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395032
    s21_decimal check = {{0x99999998, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub315
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub316
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub317
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub318
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub319
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub320
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub321
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub322
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395031.0
    s21_decimal check = {{0xFFFFFFE6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub323
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub324
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub325
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub326
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub327
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub328
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub329
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub330
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816245277519068117877828
    s21_decimal check = {{0x44444444, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub331
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816257575348449159256473
    s21_decimal check = {{0x99999999, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub332
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816245277519069549533593
    s21_decimal check = {{0x99999999, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub333
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub334
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433757922739268
    s21_decimal check = {{0x44444444, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub335
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub336
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub337
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub338
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub339
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub340
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759327985646
    s21_decimal check = {{0x98069FEE, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub341
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub342
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395025.1
    s21_decimal check = {{0xFFFFFFAB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub343
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub344
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395025
    s21_decimal check = {{0x99999991, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub345
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub346
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395029.4
    s21_decimal check = {{0xFFFFFFD6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub347
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub348
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub349
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub350
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub351
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub352
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub353
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub354
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub355
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -7922816251426433759354395679
    s21_decimal check = {{0x99999C1F, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub356
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -7922816251426433759354394386.7
    s21_decimal check = {{0xFFFFE6BB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub357
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -7922816251402186822210924249.2
    s21_decimal check = {{0x2EB8D47C, 0xFCA29364, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub358
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -7922816251450680696497865817
    s21_decimal check = {{0x94ED8459, 0x99EFBE0F, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub359
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -68156548783195992056330551837
    s21_decimal check = {{0xE5BD821D, 0xFE2609C5, 0xDC39C698, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub360
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 52310916280343124537621761771
    s21_decimal check = {{0xB28A4EEB, 0xCAF2D692, 0xA9069365, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub361
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub362
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub363
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub364
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub365
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub366
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub367
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub368
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub369
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub370
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub371
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub372
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub373
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub374
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub375
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub376
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub377
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub378
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub379
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub380
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub381
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395031.5
    s21_decimal check = {{0xFFFFFFEB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub382
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub383
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub384
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub385
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub386
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub387
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub388
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub389
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816245277519068117877828.5
    s21_decimal check = {{0xAAAAAAAD, 0xAAAAAAAA, 0xFFFFFFFC, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub390
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub391
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816245277519069549533593.5
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAD, 0xFFFFFFFC, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub392
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub393
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433757922739268.5
    s21_decimal check = {{0xAAAAAAAD, 0xFFFFFFFC, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub394
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub395
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub396
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub397
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub398
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub399
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub400
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub401
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395025.6
    s21_decimal check = {{0xFFFFFFB0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub402
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub403
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395025.5
    s21_decimal check = {{0xFFFFFFAF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub404
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub405
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395029.9
    s21_decimal check = {{0xFFFFFFDB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub406
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub407
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub408
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub409
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub410
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub411
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub412
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub413
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub414
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub415
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 7922816251426433759354394387.2
    s21_decimal check = {{0xFFFFE6C0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub416
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 7922816251426433759354395680
    s21_decimal check = {{0x99999C20, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub417
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 7922816251450680696497865817
    s21_decimal check = {{0x94ED8459, 0x99EFBE0F, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub418
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 7922816251402186822210924249.7
    s21_decimal check = {{0x2EB8D481, 0xFCA29364, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub419
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -52310916280343124537621761770
    s21_decimal check = {{0xB28A4EEA, 0xCAF2D692, 0xA9069365, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub420
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 68156548783195992056330551838
    s21_decimal check = {{0xE5BD821E, 0xFE2609C5, 0xDC39C698, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub421
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub422
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub423
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub424
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub425
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub426
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub427
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub428
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub429
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub430
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub431
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub432
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub433
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub434
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub435
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub436
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub437
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub438
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub439
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub440
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub441
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub442
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395031.5
    s21_decimal check = {{0xFFFFFFEB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub443
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub444
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub445
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub446
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub447
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub448
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub449
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub450
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816245277519068117877828.5
    s21_decimal check = {{0xAAAAAAAD, 0xAAAAAAAA, 0xFFFFFFFC, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub451
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub452
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816245277519069549533593.5
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAD, 0xFFFFFFFC, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub453
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub454
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433757922739268.5
    s21_decimal check = {{0xAAAAAAAD, 0xFFFFFFFC, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub455
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub456
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub457
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub458
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub459
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub460
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub461
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub462
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395025.6
    s21_decimal check = {{0xFFFFFFB0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub463
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub464
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395025.5
    s21_decimal check = {{0xFFFFFFAF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub465
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub466
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395029.9
    s21_decimal check = {{0xFFFFFFDB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub467
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub468
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub469
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub470
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub471
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub472
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub473
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub474
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub475
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -7922816251426433759354395680
    s21_decimal check = {{0x99999C20, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub476
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -7922816251426433759354394387.2
    s21_decimal check = {{0xFFFFE6C0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub477
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -7922816251402186822210924249.7
    s21_decimal check = {{0x2EB8D481, 0xFCA29364, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub478
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -7922816251450680696497865817
    s21_decimal check = {{0x94ED8459, 0x99EFBE0F, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub479
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -68156548783195992056330551838
    s21_decimal check = {{0xE5BD821E, 0xFE2609C5, 0xDC39C698, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub480
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 52310916280343124537621761770
    s21_decimal check = {{0xB28A4EEA, 0xCAF2D692, 0xA9069365, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub481
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub482
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub483
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub484
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub485
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub486
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub487
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub488
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub489
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub490
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub491
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub492
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790069
    s21_decimal check = {{0x33333335, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub493
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub494
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub495
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub496
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub497
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub498
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub499
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub500
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub501
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub502
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub503
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub504
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub505
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -18486571253328345438493588411
    s21_decimal check = {{0xBBBBBBBB, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub506
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 34332203756181212957202378479
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub507
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -18486571247179430748688726971
    s21_decimal check = {{0xBBBBBBBB, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub508
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 34332203750032298267397517039
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub509
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816245277519068117877829
    s21_decimal check = {{0x44444445, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub510
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816257575348450590912239
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub511
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816245277519069549533594
    s21_decimal check = {{0x9999999A, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub512
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub513
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433757922739269
    s21_decimal check = {{0x44444445, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub514
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433760786050799
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub515
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub516
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub517
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub518
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub519
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759327985647
    s21_decimal check = {{0x98069FEF, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub520
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub521
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395026.1
    s21_decimal check = {{0xFFFFFFB5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub522
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub523
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395026
    s21_decimal check = {{0x99999992, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub524
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub525
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395030.4
    s21_decimal check = {{0xFFFFFFE0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub526
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395038
    s21_decimal check = {{0x9999999E, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub527
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub528
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub529
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub530
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub531
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub532
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub533
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub534
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub535
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 7922816251426433759354394387.7
    s21_decimal check = {{0xFFFFE6C5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub536
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 7922816251426433759354395680
    s21_decimal check = {{0x99999C20, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub537
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 7922816251450680696497865818
    s21_decimal check = {{0x94ED845A, 0x99EFBE0F, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub538
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 7922816251402186822210924250.2
    s21_decimal check = {{0x2EB8D486, 0xFCA29364, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub539
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -52310916280343124537621761770
    s21_decimal check = {{0xB28A4EEA, 0xCAF2D692, 0xA9069365, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub540
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 68156548783195992056330551838
    s21_decimal check = {{0xE5BD821E, 0xFE2609C5, 0xDC39C698, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub541
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub542
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub543
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub544
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub545
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub546
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub547
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub548
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub549
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub550
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub551
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790069
    s21_decimal check = {{0x33333335, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub552
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub553
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub554
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub555
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub556
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub557
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub558
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub559
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub560
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub561
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub562
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub563
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub564
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub565
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -34332203756181212957202378479
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub566
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 18486571253328345438493588411
    s21_decimal check = {{0xBBBBBBBB, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub567
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -34332203750032298267397517039
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub568
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 18486571247179430748688726971
    s21_decimal check = {{0xBBBBBBBB, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub569
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816257575348450590912239
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub570
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816245277519068117877829
    s21_decimal check = {{0x44444445, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub571
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub572
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816245277519069549533594
    s21_decimal check = {{0x9999999A, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub573
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433760786050799
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub574
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433757922739269
    s21_decimal check = {{0x44444445, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub575
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub576
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub577
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub578
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub579
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub580
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759327985647
    s21_decimal check = {{0x98069FEF, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub581
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub582
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395026.1
    s21_decimal check = {{0xFFFFFFB5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub583
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub584
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395026
    s21_decimal check = {{0x99999992, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub585
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395038
    s21_decimal check = {{0x9999999E, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub586
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395030.4
    s21_decimal check = {{0xFFFFFFE0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub587
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub588
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub589
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub590
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub591
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub592
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub593
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub594
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub595
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -7922816251426433759354395680
    s21_decimal check = {{0x99999C20, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub596
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -7922816251426433759354394387.7
    s21_decimal check = {{0xFFFFE6C5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub597
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -7922816251402186822210924250.2
    s21_decimal check = {{0x2EB8D486, 0xFCA29364, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub598
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -7922816251450680696497865818
    s21_decimal check = {{0x94ED845A, 0x99EFBE0F, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub599
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -68156548783195992056330551838
    s21_decimal check = {{0xE5BD821E, 0xFE2609C5, 0xDC39C698, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub600
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 52310916280343124537621761770
    s21_decimal check = {{0xB28A4EEA, 0xCAF2D692, 0xA9069365, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub601
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub602
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub603
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -71305346262837903834189555299
    s21_decimal check = {{0x66666663, 0x66666666, 0xE6666666, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub604
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub605
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub606
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub607
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub608
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub609
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub610
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790069
    s21_decimal check = {{0x33333335, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub611
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub612
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 15845632502852867518708790070
    s21_decimal check = {{0x33333336, 0x33333333, 0x33333333, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub613
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub614
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub615
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub616
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub617
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub618
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub619
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub620
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub621
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub622
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub623
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub624
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub625
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -18486571253328345438493588410
    s21_decimal check = {{0xBBBBBBBA, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub626
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 34332203756181212957202378480
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub627
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -18486571247179430748688726970
    s21_decimal check = {{0xBBBBBBBA, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub628
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 34332203750032298267397517040
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub629
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816245277519068117877830
    s21_decimal check = {{0x44444446, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub630
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816257575348450590912240
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub631
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816245277519069549533595
    s21_decimal check = {{0x9999999B, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub632
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816257575348449159256475
    s21_decimal check = {{0x9999999B, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub633
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433757922739270
    s21_decimal check = {{0x44444446, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub634
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433760786050800
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub635
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub636
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7922816251426433759380804423
    s21_decimal check = {{0x9B2C9347, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub637
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub638
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub639
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759327985648
    s21_decimal check = {{0x98069FF0, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub640
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub641
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395027.1
    s21_decimal check = {{0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub642
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub643
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395027
    s21_decimal check = {{0x99999993, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub644
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub645
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395031.4
    s21_decimal check = {{0xFFFFFFEA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub646
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395039
    s21_decimal check = {{0x9999999F, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub647
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub648
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub649
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub650
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub651
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub652
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub653
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub654
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub655
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 7922816251426433759354394388.7
    s21_decimal check = {{0xFFFFE6CF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub656
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 7922816251426433759354395681
    s21_decimal check = {{0x99999C21, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub657
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 7922816251450680696497865819
    s21_decimal check = {{0x94ED845B, 0x99EFBE0F, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub658
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 7922816251402186822210924251.2
    s21_decimal check = {{0x2EB8D490, 0xFCA29364, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub659
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -52310916280343124537621761769
    s21_decimal check = {{0xB28A4EE9, 0xCAF2D692, 0xA9069365, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub660
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 68156548783195992056330551839
    s21_decimal check = {{0xE5BD821F, 0xFE2609C5, 0xDC39C698, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub661
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub662
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub663
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub664
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 71305346262837903834189555299
    s21_decimal check = {{0x66666663, 0x66666666, 0xE6666666, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub665
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub666
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub667
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub668
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub669
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790069
    s21_decimal check = {{0x33333335, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub670
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub671
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -15845632502852867518708790070
    s21_decimal check = {{0x33333336, 0x33333333, 0x33333333, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub672
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub673
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub674
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub675
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub676
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub677
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub678
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub679
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub680
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub681
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub682
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub683
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub684
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub685
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -34332203756181212957202378480
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub686
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 18486571253328345438493588410
    s21_decimal check = {{0xBBBBBBBA, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub687
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -34332203750032298267397517040
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub688
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 18486571247179430748688726970
    s21_decimal check = {{0xBBBBBBBA, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub689
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816257575348450590912240
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub690
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816245277519068117877830
    s21_decimal check = {{0x44444446, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub691
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816257575348449159256475
    s21_decimal check = {{0x9999999B, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub692
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816245277519069549533595
    s21_decimal check = {{0x9999999B, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub693
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433760786050800
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub694
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433757922739270
    s21_decimal check = {{0x44444446, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub695
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7922816251426433759380804423
    s21_decimal check = {{0x9B2C9347, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub696
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub697
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub698
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub699
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub700
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759327985648
    s21_decimal check = {{0x98069FF0, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub701
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub702
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395027.1
    s21_decimal check = {{0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub703
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub704
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395027
    s21_decimal check = {{0x99999993, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub705
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395039
    s21_decimal check = {{0x9999999F, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub706
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395031.4
    s21_decimal check = {{0xFFFFFFEA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub707
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub708
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub709
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub710
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub711
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub712
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub713
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub714
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub715
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -7922816251426433759354395681
    s21_decimal check = {{0x99999C21, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub716
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -7922816251426433759354394388.7
    s21_decimal check = {{0xFFFFE6CF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub717
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -7922816251402186822210924251.2
    s21_decimal check = {{0x2EB8D490, 0xFCA29364, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub718
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -7922816251450680696497865819
    s21_decimal check = {{0x94ED845B, 0x99EFBE0F, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub719
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -68156548783195992056330551839
    s21_decimal check = {{0xE5BD821F, 0xFE2609C5, 0xDC39C698, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub720
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 52310916280343124537621761769
    s21_decimal check = {{0xB28A4EE9, 0xCAF2D692, 0xA9069365, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub721
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub722
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub723
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub724
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub725
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395032
    s21_decimal check = {{0x99999998, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub726
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub727
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub728
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub729
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub730
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub731
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub732
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub733
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub734
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub735
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub736
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub737
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub738
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.4999999999999999999999999999
    s21_decimal check = {{0x97FFFFFF, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub739
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub740
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub741
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.9999999999999999999999999000
    s21_decimal check = {{0xFFFFC18, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub742
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 2.9999999999999999999999999000
    s21_decimal check = {{0x2FFFFC18, 0xBA6F0723, 0x60EF6B1A, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub743
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub744
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 2.0000000000000000000000000001
    s21_decimal check = {{0x20000001, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub745
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub746
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub747
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub748
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub749
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517204
    s21_decimal check = {{0x55555554, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub750
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517206
    s21_decimal check = {{0x55555556, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub751
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861439
    s21_decimal check = {{0xFFFFFFFF, 0x55555554, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub752
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861441
    s21_decimal check = {{0x1, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub753
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655764
    s21_decimal check = {{0x55555554, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub754
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655766
    s21_decimal check = {{0x55555556, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub755
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409386.504754779197847983445
    s21_decimal check = {{0x76B55555, 0x1F8BA78F, 0x5555551F, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub756
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409388.504754779197847983445
    s21_decimal check = {{0x33F55555, 0x8B1F031B, 0x5555558B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub757
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub758
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub759
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409386
    s21_decimal check = {{0x192F9AA, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub760
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409388
    s21_decimal check = {{0x192F9AC, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub761
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6.9228162514264337593543950335
    s21_decimal check = {{0xEFFFFFFF, 0xC1DAFD9E, 0xDFB031A1, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub762
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub763
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7
    s21_decimal check = {{0x7, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub764
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 9
    s21_decimal check = {{0x9, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub765
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -2.6336660283201536
    s21_decimal check = {{0x90C01800, 0x5D910D, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub766
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 4.6336660283201536
    s21_decimal check = {{0x70421800, 0xA49EF2, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub767
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub768
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub769
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub770
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub771
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub772
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub773
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.9999999999999999999999999990
    s21_decimal check = {{0xFFFFFF6, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub774
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000010
    s21_decimal check = {{0x1000000A, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub775
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -645.33673839575124685661598885
    s21_decimal check = {{0xCEC6F4A5, 0xC45496CC, 0xD08500FC, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub776
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 647.33673839575124685661598885
    s21_decimal check = {{0x96C6F4A5, 0x7DE4B072, 0xD12A70A2, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub777
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470784.81744120110
    s21_decimal check = {{0x4992492E, 0xA2A675CB, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub778
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470782.81744120110
    s21_decimal check = {{0xB8A4792E, 0xA2A6759C, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub779
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub780
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub781
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub782
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub783
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub784
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub785
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub786
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395032
    s21_decimal check = {{0x99999998, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub787
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub788
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub789
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub790
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub791
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub792
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub793
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub794
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub795
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub796
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub797
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.4999999999999999999999999999
    s21_decimal check = {{0x97FFFFFF, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub798
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub799
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub800
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub801
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -2.9999999999999999999999999000
    s21_decimal check = {{0x2FFFFC18, 0xBA6F0723, 0x60EF6B1A, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub802
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.9999999999999999999999999000
    s21_decimal check = {{0xFFFFC18, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub803
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -2.0000000000000000000000000001
    s21_decimal check = {{0x20000001, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub804
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub805
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub806
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub807
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub808
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub809
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517206
    s21_decimal check = {{0x55555556, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub810
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517204
    s21_decimal check = {{0x55555554, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub811
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861441
    s21_decimal check = {{0x1, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub812
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861439
    s21_decimal check = {{0xFFFFFFFF, 0x55555554, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub813
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655766
    s21_decimal check = {{0x55555556, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub814
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655764
    s21_decimal check = {{0x55555554, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub815
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409388.504754779197847983445
    s21_decimal check = {{0x33F55555, 0x8B1F031B, 0x5555558B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub816
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409386.504754779197847983445
    s21_decimal check = {{0x76B55555, 0x1F8BA78F, 0x5555551F, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub817
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub818
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub819
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409388
    s21_decimal check = {{0x192F9AC, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub820
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409386
    s21_decimal check = {{0x192F9AA, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub821
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub822
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6.9228162514264337593543950335
    s21_decimal check = {{0xEFFFFFFF, 0xC1DAFD9E, 0xDFB031A1, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub823
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -9
    s21_decimal check = {{0x9, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub824
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7
    s21_decimal check = {{0x7, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub825
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -4.6336660283201536
    s21_decimal check = {{0x70421800, 0xA49EF2, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub826
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 2.6336660283201536
    s21_decimal check = {{0x90C01800, 0x5D910D, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub827
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub828
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub829
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub830
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub831
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub832
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub833
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000010
    s21_decimal check = {{0x1000000A, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub834
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.9999999999999999999999999990
    s21_decimal check = {{0xFFFFFF6, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub835
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -647.33673839575124685661598885
    s21_decimal check = {{0x96C6F4A5, 0x7DE4B072, 0xD12A70A2, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub836
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 645.33673839575124685661598885
    s21_decimal check = {{0xCEC6F4A5, 0xC45496CC, 0xD08500FC, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub837
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470782.81744120110
    s21_decimal check = {{0xB8A4792E, 0xA2A6759C, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub838
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470784.81744120110
    s21_decimal check = {{0x4992492E, 0xA2A675CB, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub839
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub840
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub841
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub842
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub843
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub844
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub845
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub846
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub847
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub848
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub849
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub850
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub851
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub852
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub853
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub854
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub855
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub856
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.0
    s21_decimal check = {{0xA, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub857
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub858
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub859
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub860
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub861
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.4999999999999999999999999000
    s21_decimal check = {{0x97FFFC18, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub862
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 2.4999999999999999999999999000
    s21_decimal check = {{0xA7FFFC18, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub863
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub864
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub865
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub866
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub867
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub868
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub869
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517204.5
    s21_decimal check = {{0x5555554D, 0x55555555, 0x3, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub870
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.5
    s21_decimal check = {{0x55555557, 0x55555555, 0x3, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub871
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861439.5
    s21_decimal check = {{0xFFFFFFFB, 0x55555551, 0x3, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub872
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.5
    s21_decimal check = {{0x5, 0x55555552, 0x3, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub873
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655764.5
    s21_decimal check = {{0x5555554D, 0x3, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub874
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.5
    s21_decimal check = {{0x55555557, 0x3, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub875
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub876
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub877
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub878
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub879
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409386.5
    s21_decimal check = {{0xFBDC0A9, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub880
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.5
    s21_decimal check = {{0xFBDC0B3, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub881
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.4228162514264337593543950335
    s21_decimal check = {{0x77FFFFFF, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub882
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub883
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7.5
    s21_decimal check = {{0x4B, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub884
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8.5
    s21_decimal check = {{0x55, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub885
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.1336660283201536
    s21_decimal check = {{0xC8A09800, 0x6F5486, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub886
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 4.1336660283201536
    s21_decimal check = {{0x38619800, 0x92DB79, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub887
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub888
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub889
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub890
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub891
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub892
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub893
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999990
    s21_decimal check = {{0x87FFFFF6, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub894
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000010
    s21_decimal check = {{0x8800000A, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub895
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub896
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub897
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470784.31744120110
    s21_decimal check = {{0xA556D52E, 0xA2A675BF, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub898
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.31744120110
    s21_decimal check = {{0x5CDFED2E, 0xA2A675A8, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub899
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub900
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub901
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub902
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub903
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub904
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub905
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub906
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub907
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub908
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub909
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub910
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub911
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub912
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub913
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub914
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub915
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.0
    s21_decimal check = {{0xA, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub916
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub917
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub918
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub919
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub920
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub921
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -2.4999999999999999999999999000
    s21_decimal check = {{0xA7FFFC18, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub922
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.4999999999999999999999999000
    s21_decimal check = {{0x97FFFC18, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub923
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub924
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub925
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub926
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub927
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub928
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub929
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.5
    s21_decimal check = {{0x55555557, 0x55555555, 0x3, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub930
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517204.5
    s21_decimal check = {{0x5555554D, 0x55555555, 0x3, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub931
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.5
    s21_decimal check = {{0x5, 0x55555552, 0x3, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub932
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861439.5
    s21_decimal check = {{0xFFFFFFFB, 0x55555551, 0x3, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub933
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.5
    s21_decimal check = {{0x55555557, 0x3, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub934
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655764.5
    s21_decimal check = {{0x5555554D, 0x3, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub935
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub936
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub937
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub938
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub939
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.5
    s21_decimal check = {{0xFBDC0B3, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub940
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409386.5
    s21_decimal check = {{0xFBDC0A9, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub941
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub942
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.4228162514264337593543950335
    s21_decimal check = {{0x77FFFFFF, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub943
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8.5
    s21_decimal check = {{0x55, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub944
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7.5
    s21_decimal check = {{0x4B, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub945
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -4.1336660283201536
    s21_decimal check = {{0x38619800, 0x92DB79, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub946
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.1336660283201536
    s21_decimal check = {{0xC8A09800, 0x6F5486, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub947
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub948
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub949
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub950
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub951
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub952
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub953
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000010
    s21_decimal check = {{0x8800000A, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub954
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999990
    s21_decimal check = {{0x87FFFFF6, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub955
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub956
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub957
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.31744120110
    s21_decimal check = {{0x5CDFED2E, 0xA2A675A8, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub958
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470784.31744120110
    s21_decimal check = {{0xA556D52E, 0xA2A675BF, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub959
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub960
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub961
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub962
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub963
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub964
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub965
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub966
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub967
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub968
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub969
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub970
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub971
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub972
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub973
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub974
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.4999999999999999999999999999
    s21_decimal check = {{0x97FFFFFF, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub975
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub976
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub977
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub978
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.9999999999999999999999999998
    s21_decimal check = {{0xFFFFFFE, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub979
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub980
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub981
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.4999999999999999999999999001
    s21_decimal check = {{0x97FFFC19, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub982
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 2.4999999999999999999999998999
    s21_decimal check = {{0xA7FFFC17, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub983
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub984
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.5000000000000000000000000000
    s21_decimal check = {{0x98000000, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub985
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub986
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub987
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub988
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub989
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub990
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub991
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub992
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub993
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub994
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub995
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub996
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub997
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub998
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub999
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1000
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1001
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.4228162514264337593543950336
    s21_decimal check = {{0x78000000, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1002
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 8.422816251426433759354395033
    s21_decimal check = {{0xD999999, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1003
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7.5000000000000000000000000001
    s21_decimal check = {{0xF8000001, 0xD21591D7, 0xF2568BC2, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1004
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1005
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.1336660283201536000000000001
    s21_decimal check = {{0x1800001, 0xDFD679EC, 0x654113ED, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1006
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 4.1336660283201535999999999999
    s21_decimal check = {{0x117FFFFF, 0x1DFB7C4D, 0x8590E24C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1007
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1008
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1009
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1010
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1011
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999998
    s21_decimal check = {{0x87FFFFFE, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1012
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1013
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999989
    s21_decimal check = {{0x87FFFFF5, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1014
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000009
    s21_decimal check = {{0x88000009, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1015
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1016
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1017
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470784.317441201100
    s21_decimal check = {{0x756453CC, 0x5A80997C, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1018
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.317441201100
    s21_decimal check = {{0xA0BF43CC, 0x5A809893, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1019
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1020
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1021
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1022
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1023
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1024
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1025
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1026
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1027
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1028
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1029
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1030
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1031
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1032
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1033
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.4999999999999999999999999999
    s21_decimal check = {{0x97FFFFFF, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1034
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1035
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1036
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1037
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.9999999999999999999999999998
    s21_decimal check = {{0xFFFFFFE, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1038
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1039
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1040
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1041
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -2.4999999999999999999999998999
    s21_decimal check = {{0xA7FFFC17, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1042
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.4999999999999999999999999001
    s21_decimal check = {{0x97FFFC19, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1043
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.5000000000000000000000000000
    s21_decimal check = {{0x98000000, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1044
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1045
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1046
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1047
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1048
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1049
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1050
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1051
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1052
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1053
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1054
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1055
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1056
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1057
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1058
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1059
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1060
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1061
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -8.422816251426433759354395033
    s21_decimal check = {{0xD999999, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1062
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.4228162514264337593543950336
    s21_decimal check = {{0x78000000, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1063
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1064
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7.5000000000000000000000000001
    s21_decimal check = {{0xF8000001, 0xD21591D7, 0xF2568BC2, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1065
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -4.1336660283201535999999999999
    s21_decimal check = {{0x117FFFFF, 0x1DFB7C4D, 0x8590E24C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1066
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.1336660283201536000000000001
    s21_decimal check = {{0x1800001, 0xDFD679EC, 0x654113ED, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1067
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1068
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1069
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1070
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1071
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1072
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999998
    s21_decimal check = {{0x87FFFFFE, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1073
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000009
    s21_decimal check = {{0x88000009, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1074
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999989
    s21_decimal check = {{0x87FFFFF5, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1075
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1076
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1077
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.317441201100
    s21_decimal check = {{0xA0BF43CC, 0x5A809893, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1078
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470784.317441201100
    s21_decimal check = {{0x756453CC, 0x5A80997C, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1079
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1080
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1081
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1082
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1083
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1084
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1085
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1086
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1087
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1088
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1089
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1090
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1091
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1092
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1093
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1094
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1095
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1096
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1097
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1098
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1099
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1100
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1101
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.4999999999999999999999998999
    s21_decimal check = {{0x97FFFC17, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1102
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 2.4999999999999999999999999001
    s21_decimal check = {{0xA7FFFC19, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1103
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1104
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.5000000000000000000000000002
    s21_decimal check = {{0x98000002, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1105
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1106
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1107
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1108
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1109
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1110
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1111
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1112
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1113
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1114
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1115
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1116
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1117
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1118
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1119
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1120
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1121
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.4228162514264337593543950334
    s21_decimal check = {{0x77FFFFFE, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1122
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1123
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7.4999999999999999999999999999
    s21_decimal check = {{0xF7FFFFFF, 0xD21591D7, 0xF2568BC2, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1124
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1125
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.1336660283201535999999999999
    s21_decimal check = {{0x17FFFFF, 0xDFD679EC, 0x654113ED, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1126
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 4.1336660283201536000000000001
    s21_decimal check = {{0x11800001, 0x1DFB7C4D, 0x8590E24C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1127
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1128
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1129
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1130
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1131
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1132
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1133
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999991
    s21_decimal check = {{0x87FFFFF7, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1134
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000011
    s21_decimal check = {{0x8800000B, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1135
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1136
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1137
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470784.317441201100
    s21_decimal check = {{0x756453CC, 0x5A80997C, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1138
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.317441201100
    s21_decimal check = {{0xA0BF43CC, 0x5A809893, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1139
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1140
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1141
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1142
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1143
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1144
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1145
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1146
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1147
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1148
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1149
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1150
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1151
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1152
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1153
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1154
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1155
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1156
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1157
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1158
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1159
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1160
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1161
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -2.4999999999999999999999999001
    s21_decimal check = {{0xA7FFFC19, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1162
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.4999999999999999999999998999
    s21_decimal check = {{0x97FFFC17, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1163
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.5000000000000000000000000002
    s21_decimal check = {{0x98000002, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1164
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1165
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1166
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1167
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1168
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1169
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1170
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1171
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1172
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1173
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1174
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1175
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1176
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1177
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1178
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1179
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1180
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1181
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1182
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.4228162514264337593543950334
    s21_decimal check = {{0x77FFFFFE, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1183
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1184
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7.4999999999999999999999999999
    s21_decimal check = {{0xF7FFFFFF, 0xD21591D7, 0xF2568BC2, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1185
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -4.1336660283201536000000000001
    s21_decimal check = {{0x11800001, 0x1DFB7C4D, 0x8590E24C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1186
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.1336660283201535999999999999
    s21_decimal check = {{0x17FFFFF, 0xDFD679EC, 0x654113ED, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1187
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1188
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1189
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1190
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1191
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1192
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1193
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000011
    s21_decimal check = {{0x8800000B, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1194
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999991
    s21_decimal check = {{0x87FFFFF7, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1195
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1196
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1197
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.317441201100
    s21_decimal check = {{0xA0BF43CC, 0x5A809893, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1198
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470784.317441201100
    s21_decimal check = {{0x756453CC, 0x5A80997C, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1199
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1200
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1201
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1202
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1203
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950332
    s21_decimal check = {{0xFFFFFFFC, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1204
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1205
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395031.0
    s21_decimal check = {{0xFFFFFFE6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1206
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1207
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395031.5
    s21_decimal check = {{0xFFFFFFEB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1208
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1209
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1210
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1211
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1212
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1213
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.9999999999999999999999999000
    s21_decimal check = {{0xFFFFC18, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1214
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 2.9999999999999999999999999000
    s21_decimal check = {{0x2FFFFC18, 0xBA6F0723, 0x60EF6B1A, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1215
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.4999999999999999999999999000
    s21_decimal check = {{0x97FFFC18, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1216
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 2.4999999999999999999999999000
    s21_decimal check = {{0xA7FFFC18, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1217
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.4999999999999999999999999001
    s21_decimal check = {{0x97FFFC19, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1218
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 2.4999999999999999999999998999
    s21_decimal check = {{0xA7FFFC17, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1219
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.4999999999999999999999998999
    s21_decimal check = {{0x97FFFC17, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1220
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 2.4999999999999999999999999001
    s21_decimal check = {{0xA7FFFC19, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1221
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1222
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 3.9999999999999999999999998000
    s21_decimal check = {{0x3FFFF830, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1223
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.9999999999999999999999998999
    s21_decimal check = {{0xFFFFC17, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1224
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 2.9999999999999999999999999001
    s21_decimal check = {{0x2FFFFC19, 0xBA6F0723, 0x60EF6B1A, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1225
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983443
    s21_decimal check = {{0x55555553, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1226
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983447
    s21_decimal check = {{0x55555557, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1227
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122003
    s21_decimal check = {{0x55555553, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1228
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122007
    s21_decimal check = {{0x55555557, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1229
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517203.0000000000
    s21_decimal check = {{0xE68EEC00, 0x5555554F, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1230
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517207.0000000000
    s21_decimal check = {{0x36BE7C00, 0x55555559, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1231
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861438.0000000000
    s21_decimal check = {{0x57E83800, 0x8EA6B3FB, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1232
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861442.0000000000
    s21_decimal check = {{0xA817C800, 0x8EA6B404, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1233
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655763.0000000000000000000
    s21_decimal check = {{0xBE380000, 0x3F7CAE4A, 0x2E426100, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1234
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655767.0000000000000000000
    s21_decimal check = {{0xE5D80000, 0x6A993A5C, 0x2E426102, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1235
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409385.504754779197847983445
    s21_decimal check = {{0x98155555, 0xE9C1F9C9, 0x555554E8, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1236
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409389.504754779197847983445
    s21_decimal check = {{0x12955555, 0xC0E8B0E1, 0x555555C1, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1237
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409385.498605864508043122005
    s21_decimal check = {{0x98155555, 0x946CA474, 0x555554E8, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1238
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409389.498605864508043122005
    s21_decimal check = {{0x12955555, 0x6B935B8C, 0x555555C1, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1239
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409385.000000000000000000000
    s21_decimal check = {{0x97A00000, 0x8CE0C469, 0x555554CD, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1240
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409389.000000000000000000000
    s21_decimal check = {{0x12200000, 0x64077B81, 0x555555A6, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1241
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -5.9228162514264337593543951335
    s21_decimal check = {{0xE00003E7, 0x83B5FB3D, 0xBF606343, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1242
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 9.922816251426433759354394934
    s21_decimal check = {{0x69999936, 0xD93A9A13, 0x200FF612, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1243
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -6.0000000000000000000000001000
    s21_decimal check = {{0x600003E8, 0x74DE0E46, 0xC1DED635, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1244
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 9.999999999999999999999999900
    s21_decimal check = {{0xFFFFF9C, 0x3E250261, 0x204FCE5E, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1245
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1.6336660283201536000000001000
    s21_decimal check = {{0x698003E8, 0x829EF65A, 0x34C95E60, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1246
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 5.6336660283201535999999999000
    s21_decimal check = {{0xA97FFC18, 0x7B32FFDE, 0xB60897D9, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1247
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1248
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1249
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1250
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1251
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999998999
    s21_decimal check = {{0x1FFFFC17, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1252
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999001
    s21_decimal check = {{0x1FFFFC19, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1253
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999998990
    s21_decimal check = {{0x1FFFFC0E, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1254
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999010
    s21_decimal check = {{0x1FFFFC22, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1255
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -644.33673839575124685661598895
    s21_decimal check = {{0xEAC6F4AF, 0xE78C89F9, 0xD0324929, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1256
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 648.33673839575124685661598875
    s21_decimal check = {{0x7AC6F49B, 0x5AACBD45, 0xD17D2875, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1257
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470785.817441201100
    s21_decimal check = {{0xB45BEBCC, 0x5A809AD9, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1258
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470781.817441201100
    s21_decimal check = {{0x61C7ABCC, 0x5A809736, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1259
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156802
    s21_decimal check = {{0x4C23E882, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1260
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156806
    s21_decimal check = {{0x4C23E886, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1261
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1262
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1263
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1264
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950332
    s21_decimal check = {{0xFFFFFFFC, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1265
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1266
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395031.0
    s21_decimal check = {{0xFFFFFFE6, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1267
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1268
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395031.5
    s21_decimal check = {{0xFFFFFFEB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1269
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1270
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1271
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1272
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1273
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -2.9999999999999999999999999000
    s21_decimal check = {{0x2FFFFC18, 0xBA6F0723, 0x60EF6B1A, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1274
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.9999999999999999999999999000
    s21_decimal check = {{0xFFFFC18, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1275
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -2.4999999999999999999999999000
    s21_decimal check = {{0xA7FFFC18, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1276
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.4999999999999999999999999000
    s21_decimal check = {{0x97FFFC18, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1277
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -2.4999999999999999999999998999
    s21_decimal check = {{0xA7FFFC17, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1278
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.4999999999999999999999999001
    s21_decimal check = {{0x97FFFC19, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1279
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -2.4999999999999999999999999001
    s21_decimal check = {{0xA7FFFC19, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1280
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.4999999999999999999999998999
    s21_decimal check = {{0x97FFFC17, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1281
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -3.9999999999999999999999998000
    s21_decimal check = {{0x3FFFF830, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1282
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1283
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -2.9999999999999999999999999001
    s21_decimal check = {{0x2FFFFC19, 0xBA6F0723, 0x60EF6B1A, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1284
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.9999999999999999999999998999
    s21_decimal check = {{0xFFFFC17, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1285
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983447
    s21_decimal check = {{0x55555557, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1286
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983443
    s21_decimal check = {{0x55555553, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1287
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122007
    s21_decimal check = {{0x55555557, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1288
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122003
    s21_decimal check = {{0x55555553, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1289
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517207.0000000000
    s21_decimal check = {{0x36BE7C00, 0x55555559, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1290
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517203.0000000000
    s21_decimal check = {{0xE68EEC00, 0x5555554F, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1291
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861442.0000000000
    s21_decimal check = {{0xA817C800, 0x8EA6B404, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1292
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861438.0000000000
    s21_decimal check = {{0x57E83800, 0x8EA6B3FB, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1293
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655767.0000000000000000000
    s21_decimal check = {{0xE5D80000, 0x6A993A5C, 0x2E426102, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1294
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655763.0000000000000000000
    s21_decimal check = {{0xBE380000, 0x3F7CAE4A, 0x2E426100, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1295
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409389.504754779197847983445
    s21_decimal check = {{0x12955555, 0xC0E8B0E1, 0x555555C1, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1296
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409385.504754779197847983445
    s21_decimal check = {{0x98155555, 0xE9C1F9C9, 0x555554E8, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1297
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409389.498605864508043122005
    s21_decimal check = {{0x12955555, 0x6B935B8C, 0x555555C1, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1298
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409385.498605864508043122005
    s21_decimal check = {{0x98155555, 0x946CA474, 0x555554E8, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1299
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409389.000000000000000000000
    s21_decimal check = {{0x12200000, 0x64077B81, 0x555555A6, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1300
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409385.000000000000000000000
    s21_decimal check = {{0x97A00000, 0x8CE0C469, 0x555554CD, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1301
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -9.922816251426433759354394934
    s21_decimal check = {{0x69999936, 0xD93A9A13, 0x200FF612, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1302
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 5.9228162514264337593543951335
    s21_decimal check = {{0xE00003E7, 0x83B5FB3D, 0xBF606343, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1303
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -9.999999999999999999999999900
    s21_decimal check = {{0xFFFFF9C, 0x3E250261, 0x204FCE5E, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1304
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6.0000000000000000000000001000
    s21_decimal check = {{0x600003E8, 0x74DE0E46, 0xC1DED635, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1305
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -5.6336660283201535999999999000
    s21_decimal check = {{0xA97FFC18, 0x7B32FFDE, 0xB60897D9, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1306
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1.6336660283201536000000001000
    s21_decimal check = {{0x698003E8, 0x829EF65A, 0x34C95E60, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1307
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1308
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1309
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1310
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1311
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999001
    s21_decimal check = {{0x1FFFFC19, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1312
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999998999
    s21_decimal check = {{0x1FFFFC17, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1313
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999010
    s21_decimal check = {{0x1FFFFC22, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1314
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999998990
    s21_decimal check = {{0x1FFFFC0E, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1315
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -648.33673839575124685661598875
    s21_decimal check = {{0x7AC6F49B, 0x5AACBD45, 0xD17D2875, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1316
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 644.33673839575124685661598895
    s21_decimal check = {{0xEAC6F4AF, 0xE78C89F9, 0xD0324929, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1317
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470781.817441201100
    s21_decimal check = {{0x61C7ABCC, 0x5A809736, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1318
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470785.817441201100
    s21_decimal check = {{0xB45BEBCC, 0x5A809AD9, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1319
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156806
    s21_decimal check = {{0x4C23E886, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1320
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156802
    s21_decimal check = {{0x4C23E882, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1321
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1322
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1323
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1324
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1325
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1326
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1327
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1328
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1329
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1330
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1331
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1332
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1333
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1334
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 2.0000000000000000000000000001
    s21_decimal check = {{0x20000001, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1335
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1336
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1337
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1338
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.5000000000000000000000000000
    s21_decimal check = {{0x98000000, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1339
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1340
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.5000000000000000000000000002
    s21_decimal check = {{0x98000002, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1341
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.9999999999999999999999998999
    s21_decimal check = {{0xFFFFC17, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1342
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 2.9999999999999999999999999001
    s21_decimal check = {{0x2FFFFC19, 0xBA6F0723, 0x60EF6B1A, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1343
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1344
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 2.0000000000000000000000000002
    s21_decimal check = {{0x20000002, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1345
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1346
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1347
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1348
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1349
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517204.0000000000
    s21_decimal check = {{0x3A9AD000, 0x55555552, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1350
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517206.0000000000
    s21_decimal check = {{0xE2B29800, 0x55555556, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1351
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861439.0000000000
    s21_decimal check = {{0xABF41C00, 0x8EA6B3FD, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1352
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861441.0000000000
    s21_decimal check = {{0x540BE400, 0x8EA6B402, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1353
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655764.0000000000000000000
    s21_decimal check = {{0x48200000, 0xCA43D14F, 0x2E426100, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1354
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655766.0000000000000000000
    s21_decimal check = {{0x5BF00000, 0xDFD21758, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1355
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409386.504754779197847983445
    s21_decimal check = {{0x76B55555, 0x1F8BA78F, 0x5555551F, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1356
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409388.504754779197847983445
    s21_decimal check = {{0x33F55555, 0x8B1F031B, 0x5555558B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1357
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1358
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1359
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409386.000000000000000000000
    s21_decimal check = {{0x76400000, 0xC2AA722F, 0x55555503, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1360
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409388.000000000000000000000
    s21_decimal check = {{0x33800000, 0x2E3DCDBB, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1361
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6.9228162514264337593543950334
    s21_decimal check = {{0xEFFFFFFE, 0xC1DAFD9E, 0xDFB031A1, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1362
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1363
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -6.9999999999999999999999999999
    s21_decimal check = {{0x6FFFFFFF, 0xB30310A7, 0xE22EA493, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1364
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 9.000000000000000000000000000
    s21_decimal check = {{0x28000000, 0x9E548224, 0x1D14A021, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1365
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -2.6336660283201535999999999999
    s21_decimal check = {{0x797FFFFF, 0xC0C3F8BB, 0x55192CBE, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1366
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 4.6336660283201536000000000001
    s21_decimal check = {{0x99800001, 0x3D0DFD7D, 0x95B8C97B, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1367
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1368
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1369
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1370
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1371
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1372
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1373
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.9999999999999999999999999991
    s21_decimal check = {{0xFFFFFF7, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1374
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000011
    s21_decimal check = {{0x1000000B, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1375
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -645.33673839575124685661598885
    s21_decimal check = {{0xCEC6F4A5, 0xC45496CC, 0xD08500FC, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1376
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 647.33673839575124685661598885
    s21_decimal check = {{0x96C6F4A5, 0x7DE4B072, 0xD12A70A2, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1377
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470784.817441201100
    s21_decimal check = {{0xDFB6DBCC, 0x5A8099F0, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1378
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470782.817441201100
    s21_decimal check = {{0x366CBBCC, 0x5A80981F, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1379
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1380
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1381
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1382
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1383
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1384
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1385
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1386
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1387
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1388
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1389
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1390
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1391
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1392
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1393
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -2.0000000000000000000000000001
    s21_decimal check = {{0x20000001, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1394
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1395
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1396
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1397
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.5000000000000000000000000000
    s21_decimal check = {{0x98000000, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1398
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1399
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.5000000000000000000000000002
    s21_decimal check = {{0x98000002, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1400
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1401
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -2.9999999999999999999999999001
    s21_decimal check = {{0x2FFFFC19, 0xBA6F0723, 0x60EF6B1A, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1402
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.9999999999999999999999998999
    s21_decimal check = {{0xFFFFC17, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1403
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -2.0000000000000000000000000002
    s21_decimal check = {{0x20000002, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1404
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1405
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1406
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1407
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1408
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1409
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517206.0000000000
    s21_decimal check = {{0xE2B29800, 0x55555556, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1410
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517204.0000000000
    s21_decimal check = {{0x3A9AD000, 0x55555552, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1411
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861441.0000000000
    s21_decimal check = {{0x540BE400, 0x8EA6B402, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1412
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861439.0000000000
    s21_decimal check = {{0xABF41C00, 0x8EA6B3FD, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1413
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655766.0000000000000000000
    s21_decimal check = {{0x5BF00000, 0xDFD21758, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1414
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655764.0000000000000000000
    s21_decimal check = {{0x48200000, 0xCA43D14F, 0x2E426100, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1415
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409388.504754779197847983445
    s21_decimal check = {{0x33F55555, 0x8B1F031B, 0x5555558B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1416
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409386.504754779197847983445
    s21_decimal check = {{0x76B55555, 0x1F8BA78F, 0x5555551F, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1417
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1418
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1419
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409388.000000000000000000000
    s21_decimal check = {{0x33800000, 0x2E3DCDBB, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1420
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409386.000000000000000000000
    s21_decimal check = {{0x76400000, 0xC2AA722F, 0x55555503, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1421
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1422
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6.9228162514264337593543950334
    s21_decimal check = {{0xEFFFFFFE, 0xC1DAFD9E, 0xDFB031A1, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1423
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -9.000000000000000000000000000
    s21_decimal check = {{0x28000000, 0x9E548224, 0x1D14A021, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1424
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6.9999999999999999999999999999
    s21_decimal check = {{0x6FFFFFFF, 0xB30310A7, 0xE22EA493, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1425
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -4.6336660283201536000000000001
    s21_decimal check = {{0x99800001, 0x3D0DFD7D, 0x95B8C97B, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1426
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 2.6336660283201535999999999999
    s21_decimal check = {{0x797FFFFF, 0xC0C3F8BB, 0x55192CBE, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1427
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1428
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1429
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1430
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1431
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1432
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1433
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000011
    s21_decimal check = {{0x1000000B, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1434
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.9999999999999999999999999991
    s21_decimal check = {{0xFFFFFF7, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1435
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -647.33673839575124685661598885
    s21_decimal check = {{0x96C6F4A5, 0x7DE4B072, 0xD12A70A2, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1436
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 645.33673839575124685661598885
    s21_decimal check = {{0xCEC6F4A5, 0xC45496CC, 0xD08500FC, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1437
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470782.817441201100
    s21_decimal check = {{0x366CBBCC, 0x5A80981F, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1438
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470784.817441201100
    s21_decimal check = {{0xDFB6DBCC, 0x5A8099F0, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1439
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1440
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1441
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1442
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1443
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -52818775009509558395695966889
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1444
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1445
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1446
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1447
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1448
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1449
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 18486571253328345438493588411
    s21_decimal check = {{0xBBBBBBBB, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1450
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 34332203756181212957202378479
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1451
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 18486571253328345438493588410
    s21_decimal check = {{0xBBBBBBBA, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1452
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 34332203756181212957202378480
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1453
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1454
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1455
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1456
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1457
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1458
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1459
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1460
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1461
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387504754779197847983443
    s21_decimal check = {{0x55555553, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1462
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387504754779197847983447
    s21_decimal check = {{0x55555557, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1463
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1464
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1465
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1466
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1467
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1468
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 52818775003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1469
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1470
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387510903693889084500650
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1471
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1472
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387510903693887652844885
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1473
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387504754779196416327680
    s21_decimal check = {{0x0, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1474
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1475
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387504754779197821574057
    s21_decimal check = {{0x53C25BA9, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1476
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387504754779197874392833
    s21_decimal check = {{0x56E84F01, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1477
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1478
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1479
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1480
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1481
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1482
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1483
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1484
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1485
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387504754779197847983441
    s21_decimal check = {{0x55555551, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1486
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387504754779197847983449
    s21_decimal check = {{0x55555559, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1487
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1488
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1489
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1490
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1491
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1492
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1493
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1494
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1495
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26409387504754779197847982799
    s21_decimal check = {{0x555552CF, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1496
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26409387504754779197847984091
    s21_decimal check = {{0x555557DB, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1497
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 26409387504779026134991454229
    s21_decimal check = {{0x50A94015, 0x55AB79CB, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1498
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 26409387504730532260704512661
    s21_decimal check = {{0x5A016A95, 0x54FF30DF, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1499
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -33824345027014779099128173359
    s21_decimal check = {{0xF6CE932F, 0xF371AD6, 0x6D4AD7AA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1500
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1501
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1502
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1503
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1504
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 52818775009509558395695966889
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1505
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1506
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1507
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1508
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1509
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -34332203756181212957202378479
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1510
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -18486571253328345438493588411
    s21_decimal check = {{0xBBBBBBBB, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1511
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -34332203756181212957202378480
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1512
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -18486571253328345438493588410
    s21_decimal check = {{0xBBBBBBBA, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1513
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1514
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1515
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1516
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1517
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1518
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1519
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1520
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1521
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387504754779197847983447
    s21_decimal check = {{0x55555557, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1522
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387504754779197847983443
    s21_decimal check = {{0x55555553, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1523
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1524
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1525
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1526
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1527
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -52818775003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1528
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1529
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387510903693889084500650
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1530
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1531
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387510903693887652844885
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1532
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1533
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1534
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387504754779196416327680
    s21_decimal check = {{0x0, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1535
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387504754779197874392833
    s21_decimal check = {{0x56E84F01, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1536
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387504754779197821574057
    s21_decimal check = {{0x53C25BA9, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1537
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1538
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1539
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1540
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1541
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1542
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1543
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1544
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1545
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387504754779197847983449
    s21_decimal check = {{0x55555559, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1546
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387504754779197847983441
    s21_decimal check = {{0x55555551, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1547
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1548
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1549
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1550
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1551
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1552
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1553
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1554
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1555
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26409387504754779197847984091
    s21_decimal check = {{0x555557DB, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1556
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26409387504754779197847982799
    s21_decimal check = {{0x555552CF, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1557
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -26409387504730532260704512661
    s21_decimal check = {{0x5A016A95, 0x54FF30DF, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1558
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -26409387504779026134991454229
    s21_decimal check = {{0x50A94015, 0x55AB79CB, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1559
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1560
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 33824345027014779099128173359
    s21_decimal check = {{0xF6CE932F, 0xF371AD6, 0x6D4AD7AA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1561
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -52818775015658473085500828330
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1562
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1563
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -52818775015658473085500828329
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1564
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1565
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1566
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1567
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1568
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1569
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 18486571247179430748688726971
    s21_decimal check = {{0xBBBBBBBB, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1570
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 34332203750032298267397517039
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1571
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 18486571247179430748688726970
    s21_decimal check = {{0xBBBBBBBA, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1572
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 34332203750032298267397517040
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1573
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1574
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1575
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1576
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1577
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1578
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1579
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1580
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1581
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387498605864508043122003
    s21_decimal check = {{0x55555553, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1582
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387498605864508043122007
    s21_decimal check = {{0x55555557, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1583
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1584
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1585
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1586
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 52818775003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1587
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1588
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 52818774997211729016086244010
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1589
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387492456949816806604800
    s21_decimal check = {{0x0, 0xAAAAAAAB, 0x55555554, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1590
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1591
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387492456949818238260565
    s21_decimal check = {{0x55555555, 0xAAAAAAAB, 0x55555554, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1592
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1593
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1594
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387498605864509474777770
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1595
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387498605864508016712617
    s21_decimal check = {{0x53C25BA9, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1596
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387498605864508069531393
    s21_decimal check = {{0x56E84F01, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1597
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1598
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1599
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1600
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1601
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1602
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1603
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1604
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1605
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387498605864508043122001
    s21_decimal check = {{0x55555551, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1606
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387498605864508043122009
    s21_decimal check = {{0x55555559, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1607
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1608
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1609
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1610
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1611
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1612
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1613
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1614
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1615
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26409387498605864508043121359
    s21_decimal check = {{0x555552CF, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1616
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26409387498605864508043122651
    s21_decimal check = {{0x555557DB, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1617
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 26409387498630111445186592789
    s21_decimal check = {{0x50A94015, 0x562476, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1618
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 26409387498581617570899651221
    s21_decimal check = {{0x5A016A95, 0xFFA9DB8A, 0x55555554, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1619
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -33824345033163693788933034799
    s21_decimal check = {{0xF6CE932F, 0x648C702B, 0x6D4AD7AA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1620
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1621
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1622
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 52818775015658473085500828330
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1623
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1624
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 52818775015658473085500828329
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xAAAAAAAA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1625
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1626
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1627
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1628
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1629
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -34332203750032298267397517039
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1630
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -18486571247179430748688726971
    s21_decimal check = {{0xBBBBBBBB, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1631
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -34332203750032298267397517040
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1632
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -18486571247179430748688726970
    s21_decimal check = {{0xBBBBBBBA, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1633
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1634
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1635
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1636
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1637
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1638
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1639
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1640
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1641
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387498605864508043122007
    s21_decimal check = {{0x55555557, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1642
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387498605864508043122003
    s21_decimal check = {{0x55555553, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1643
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1644
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1645
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -52818775003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1646
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1647
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -52818774997211729016086244010
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0xAAAAAAAA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1648
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1649
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1650
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387492456949816806604800
    s21_decimal check = {{0x0, 0xAAAAAAAB, 0x55555554, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1651
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1652
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387492456949818238260565
    s21_decimal check = {{0x55555555, 0xAAAAAAAB, 0x55555554, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1653
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387498605864509474777770
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1654
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1655
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387498605864508069531393
    s21_decimal check = {{0x56E84F01, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1656
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387498605864508016712617
    s21_decimal check = {{0x53C25BA9, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1657
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1658
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1659
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1660
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1661
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1662
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1663
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1664
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1665
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387498605864508043122009
    s21_decimal check = {{0x55555559, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1666
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387498605864508043122001
    s21_decimal check = {{0x55555551, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1667
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1668
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1669
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1670
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1671
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1672
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1673
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1674
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1675
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26409387498605864508043122651
    s21_decimal check = {{0x555557DB, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1676
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26409387498605864508043121359
    s21_decimal check = {{0x555552CF, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1677
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -26409387498581617570899651221
    s21_decimal check = {{0x5A016A95, 0xFFA9DB8A, 0x55555554, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1678
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -26409387498630111445186592789
    s21_decimal check = {{0x50A94015, 0x562476, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1679
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1680
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 33824345033163693788933034799
    s21_decimal check = {{0xF6CE932F, 0x648C702B, 0x6D4AD7AA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1681
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162508115422902307433130
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1682
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1683
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162508115422902307433129
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1684
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1685
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816245277519068117877828
    s21_decimal check = {{0x44444444, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1686
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1687
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816245277519068117877828.5
    s21_decimal check = {{0xAAAAAAAD, 0xAAAAAAAA, 0xFFFFFFFC, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1688
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1689
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816245277519068117877829
    s21_decimal check = {{0x44444445, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1690
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816257575348450590912239
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1691
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816245277519068117877830
    s21_decimal check = {{0x44444446, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1692
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816257575348450590912240
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1693
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914691236517204
    s21_decimal check = {{0x55555554, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1694
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914691236517206
    s21_decimal check = {{0x55555556, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1695
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914691236517204.5
    s21_decimal check = {{0x5555554D, 0x55555555, 0x3, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1696
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914691236517205.5
    s21_decimal check = {{0x55555557, 0x55555555, 0x3, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1697
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1698
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1699
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1700
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1701
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914691236517203.0000000000
    s21_decimal check = {{0xE68EEC00, 0x5555554F, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1702
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914691236517207.0000000000
    s21_decimal check = {{0x36BE7C00, 0x55555559, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1703
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914691236517204.0000000000
    s21_decimal check = {{0x3A9AD000, 0x55555552, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1704
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914691236517206.0000000000
    s21_decimal check = {{0xE2B29800, 0x55555556, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1705
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1706
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387510903693889084500650
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1707
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387492456949816806604800
    s21_decimal check = {{0x0, 0xAAAAAAAB, 0x55555554, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1708
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1709
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1710
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 12297829382473034410
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1711
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1712
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 12297829381041378645
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1713
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1714
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914692668172970
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1715
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 6148914691210107817.4952452208
    s21_decimal check = {{0xA515F070, 0x51AB1559, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1716
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 6148914691262926592.5047547792
    s21_decimal check = {{0x78377790, 0x58FF954F, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1717
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914691210107817.5013941355
    s21_decimal check = {{0xA8C0306B, 0x51AB1559, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1718
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914691262926592.4986058645
    s21_decimal check = {{0x748D3795, 0x58FF954F, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1719
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914691210107818
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1720
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914691262926592
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1721
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914691236517197.0771837486
    s21_decimal check = {{0x1C48E22E, 0x55555542, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1722
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914691236517212.9228162514
    s21_decimal check = {{0x10485D2, 0x55555567, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1723
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914691236517197
    s21_decimal check = {{0x5555554D, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1724
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914691236517213
    s21_decimal check = {{0x5555555D, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1725
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 6148914691236517201.3663339717
    s21_decimal check = {{0x18D144C5, 0x5555554C, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1726
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 6148914691236517208.6336660283
    s21_decimal check = {{0x47C233B, 0x5555555D, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1727
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1728
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1729
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1730
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1731
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1732
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1733
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1734
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1735
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 6148914691236516558.6632616042
    s21_decimal check = {{0xAFEF286A, 0x55554F73, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1736
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 6148914691236517851.3367383958
    s21_decimal check = {{0x6D5E3F96, 0x55555B35, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1737
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 6173161628379987988.8174412011
    s21_decimal check = {{0xF52970EB, 0x4BFF944C, 0xC7773238, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1738
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 6124667754093046421.1825587989
    s21_decimal check = {{0x2823F715, 0x5EAB165C, 0xC5E61072, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1739
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732525620643605739639599
    s21_decimal check = {{0xF6CE932F, 0xF371AD6, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1740
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732537918472988212674009
    s21_decimal check = {{0xA1793DD9, 0xB9E1C581, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1741
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1742
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162508115422902307433130
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1743
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1744
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162508115422902307433129
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1745
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1746
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816245277519068117877828
    s21_decimal check = {{0x44444444, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1747
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1748
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816245277519068117877828.5
    s21_decimal check = {{0xAAAAAAAD, 0xAAAAAAAA, 0xFFFFFFFC, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1749
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816257575348450590912239
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1750
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816245277519068117877829
    s21_decimal check = {{0x44444445, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1751
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816257575348450590912240
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1752
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816245277519068117877830
    s21_decimal check = {{0x44444446, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1753
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914691236517206
    s21_decimal check = {{0x55555556, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1754
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914691236517204
    s21_decimal check = {{0x55555554, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1755
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914691236517205.5
    s21_decimal check = {{0x55555557, 0x55555555, 0x3, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1756
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914691236517204.5
    s21_decimal check = {{0x5555554D, 0x55555555, 0x3, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1757
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1758
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1759
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1760
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1761
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914691236517207.0000000000
    s21_decimal check = {{0x36BE7C00, 0x55555559, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1762
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914691236517203.0000000000
    s21_decimal check = {{0xE68EEC00, 0x5555554F, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1763
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914691236517206.0000000000
    s21_decimal check = {{0xE2B29800, 0x55555556, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1764
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914691236517204.0000000000
    s21_decimal check = {{0x3A9AD000, 0x55555552, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1765
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387510903693889084500650
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1766
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1767
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1768
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387492456949816806604800
    s21_decimal check = {{0x0, 0xAAAAAAAB, 0x55555554, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1769
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -12297829382473034410
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1770
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1771
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -12297829381041378645
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1772
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1773
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914692668172970
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1774
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1775
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -6148914691262926592.5047547792
    s21_decimal check = {{0x78377790, 0x58FF954F, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1776
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -6148914691210107817.4952452208
    s21_decimal check = {{0xA515F070, 0x51AB1559, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1777
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914691262926592.4986058645
    s21_decimal check = {{0x748D3795, 0x58FF954F, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1778
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914691210107817.5013941355
    s21_decimal check = {{0xA8C0306B, 0x51AB1559, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1779
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914691262926592
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1780
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914691210107818
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1781
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914691236517212.9228162514
    s21_decimal check = {{0x10485D2, 0x55555567, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1782
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914691236517197.0771837486
    s21_decimal check = {{0x1C48E22E, 0x55555542, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1783
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914691236517213
    s21_decimal check = {{0x5555555D, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1784
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914691236517197
    s21_decimal check = {{0x5555554D, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1785
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -6148914691236517208.6336660283
    s21_decimal check = {{0x47C233B, 0x5555555D, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1786
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -6148914691236517201.3663339717
    s21_decimal check = {{0x18D144C5, 0x5555554C, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1787
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1788
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1789
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1790
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1791
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1792
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1793
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1794
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1795
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -6148914691236517851.3367383958
    s21_decimal check = {{0x6D5E3F96, 0x55555B35, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1796
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -6148914691236516558.6632616042
    s21_decimal check = {{0xAFEF286A, 0x55554F73, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1797
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -6124667754093046421.1825587989
    s21_decimal check = {{0x2823F715, 0x5EAB165C, 0xC5E61072, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1798
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -6173161628379987988.8174412011
    s21_decimal check = {{0xF52970EB, 0x4BFF944C, 0xC7773238, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1799
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732537918472988212674009
    s21_decimal check = {{0xA1793DD9, 0xB9E1C581, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1800
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732525620643605739639599
    s21_decimal check = {{0xF6CE932F, 0xF371AD6, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1801
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162508115422903739088895
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1802
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1803
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162508115422903739088894
    s21_decimal check = {{0xFFFFFFFE, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1804
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1805
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816245277519069549533593
    s21_decimal check = {{0x99999999, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1806
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816257575348449159256473
    s21_decimal check = {{0x99999999, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1807
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816245277519069549533593.5
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAD, 0xFFFFFFFC, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1808
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1809
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816245277519069549533594
    s21_decimal check = {{0x9999999A, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1810
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1811
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816245277519069549533595
    s21_decimal check = {{0x9999999B, 0x44444444, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1812
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816257575348449159256475
    s21_decimal check = {{0x9999999B, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1813
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914689804861439
    s21_decimal check = {{0xFFFFFFFF, 0x55555554, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1814
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914689804861441
    s21_decimal check = {{0x1, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1815
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914689804861439.5
    s21_decimal check = {{0xFFFFFFFB, 0x55555551, 0x3, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1816
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914689804861440.5
    s21_decimal check = {{0x5, 0x55555552, 0x3, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1817
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1818
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1819
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1820
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1821
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914689804861438.0000000000
    s21_decimal check = {{0x57E83800, 0x8EA6B3FB, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1822
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914689804861442.0000000000
    s21_decimal check = {{0xA817C800, 0x8EA6B404, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1823
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914689804861439.0000000000
    s21_decimal check = {{0xABF41C00, 0x8EA6B3FD, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1824
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914689804861441.0000000000
    s21_decimal check = {{0x540BE400, 0x8EA6B402, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1825
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1826
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387510903693887652844885
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1827
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387492456949818238260565
    s21_decimal check = {{0x55555555, 0xAAAAAAAB, 0x55555554, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1828
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1829
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1830
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 12297829381041378645
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1831
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1832
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 12297829379609722880
    s21_decimal check = {{0x0, 0xAAAAAAAA, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1833
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914688373205675
    s21_decimal check = {{0xAAAAAAAB, 0x55555554, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1834
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1835
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 6148914689778452052.4952452208
    s21_decimal check = {{0x166F3C70, 0x8AFC7405, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1836
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 6148914689831270827.5047547792
    s21_decimal check = {{0xE990C390, 0x9250F3FA, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1837
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914689778452052.5013941355
    s21_decimal check = {{0x1A197C6B, 0x8AFC7405, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1838
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914689831270827.4986058645
    s21_decimal check = {{0xE5E68395, 0x9250F3FA, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1839
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914689778452053
    s21_decimal check = {{0xFE6D0655, 0x55555554, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1840
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914689831270827
    s21_decimal check = {{0x192F9AB, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1841
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914689804861432.0771837486
    s21_decimal check = {{0x8DA22E2E, 0x8EA6B3ED, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1842
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914689804861447.9228162514
    s21_decimal check = {{0x725DD1D2, 0x8EA6B412, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1843
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914689804861432
    s21_decimal check = {{0xFFFFFFF8, 0x55555554, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1844
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914689804861448
    s21_decimal check = {{0x8, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1845
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 6148914689804861436.3663339717
    s21_decimal check = {{0x8A2A90C5, 0x8EA6B3F7, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1846
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 6148914689804861443.6336660283
    s21_decimal check = {{0x75D56F3B, 0x8EA6B408, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1847
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1848
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1849
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1850
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1851
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1852
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1853
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1854
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1855
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 6148914689804860793.6632616042
    s21_decimal check = {{0x2148746A, 0x8EA6AE1F, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1856
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 6148914689804862086.3367383958
    s21_decimal check = {{0xDEB78B96, 0x8EA6B9E0, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1857
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 6173161626948332223.8174412011
    s21_decimal check = {{0x6682BCEB, 0x8550F2F8, 0xC7773237, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1858
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 6124667752661390656.1825587989
    s21_decimal check = {{0x997D4315, 0x97FC7507, 0xC5E61071, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1859
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732525620643607171295364
    s21_decimal check = {{0x4C23E884, 0xF371AD7, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1860
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732537918472986781018244
    s21_decimal check = {{0x4C23E884, 0xB9E1C581, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1861
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1862
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162508115422903739088895
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1863
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1864
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162508115422903739088894
    s21_decimal check = {{0xFFFFFFFE, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1865
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816257575348449159256473
    s21_decimal check = {{0x99999999, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1866
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816245277519069549533593
    s21_decimal check = {{0x99999999, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1867
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1868
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816245277519069549533593.5
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAD, 0xFFFFFFFC, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1869
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1870
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816245277519069549533594
    s21_decimal check = {{0x9999999A, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1871
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816257575348449159256475
    s21_decimal check = {{0x9999999B, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1872
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816245277519069549533595
    s21_decimal check = {{0x9999999B, 0x44444444, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1873
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914689804861441
    s21_decimal check = {{0x1, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1874
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914689804861439
    s21_decimal check = {{0xFFFFFFFF, 0x55555554, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1875
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914689804861440.5
    s21_decimal check = {{0x5, 0x55555552, 0x3, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1876
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914689804861439.5
    s21_decimal check = {{0xFFFFFFFB, 0x55555551, 0x3, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1877
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1878
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1879
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1880
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1881
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914689804861442.0000000000
    s21_decimal check = {{0xA817C800, 0x8EA6B404, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1882
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914689804861438.0000000000
    s21_decimal check = {{0x57E83800, 0x8EA6B3FB, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1883
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914689804861441.0000000000
    s21_decimal check = {{0x540BE400, 0x8EA6B402, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1884
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914689804861439.0000000000
    s21_decimal check = {{0xABF41C00, 0x8EA6B3FD, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1885
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387510903693887652844885
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1886
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1887
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1888
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387492456949818238260565
    s21_decimal check = {{0x55555555, 0xAAAAAAAB, 0x55555554, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1889
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -12297829381041378645
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1890
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1891
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -12297829379609722880
    s21_decimal check = {{0x0, 0xAAAAAAAA, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1892
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1893
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1894
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914688373205675
    s21_decimal check = {{0xAAAAAAAB, 0x55555554, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1895
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -6148914689831270827.5047547792
    s21_decimal check = {{0xE990C390, 0x9250F3FA, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1896
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -6148914689778452052.4952452208
    s21_decimal check = {{0x166F3C70, 0x8AFC7405, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1897
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914689831270827.4986058645
    s21_decimal check = {{0xE5E68395, 0x9250F3FA, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1898
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914689778452052.5013941355
    s21_decimal check = {{0x1A197C6B, 0x8AFC7405, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1899
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914689831270827
    s21_decimal check = {{0x192F9AB, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1900
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914689778452053
    s21_decimal check = {{0xFE6D0655, 0x55555554, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1901
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914689804861447.9228162514
    s21_decimal check = {{0x725DD1D2, 0x8EA6B412, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1902
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914689804861432.0771837486
    s21_decimal check = {{0x8DA22E2E, 0x8EA6B3ED, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1903
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914689804861448
    s21_decimal check = {{0x8, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1904
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914689804861432
    s21_decimal check = {{0xFFFFFFF8, 0x55555554, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1905
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -6148914689804861443.6336660283
    s21_decimal check = {{0x75D56F3B, 0x8EA6B408, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1906
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -6148914689804861436.3663339717
    s21_decimal check = {{0x8A2A90C5, 0x8EA6B3F7, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1907
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1908
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1909
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1910
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1911
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1912
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1913
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1914
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1915
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -6148914689804862086.3367383958
    s21_decimal check = {{0xDEB78B96, 0x8EA6B9E0, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1916
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -6148914689804860793.6632616042
    s21_decimal check = {{0x2148746A, 0x8EA6AE1F, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1917
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -6124667752661390656.1825587989
    s21_decimal check = {{0x997D4315, 0x97FC7507, 0xC5E61071, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1918
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -6173161626948332223.8174412011
    s21_decimal check = {{0x6682BCEB, 0x8550F2F8, 0xC7773237, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1919
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732537918472986781018244
    s21_decimal check = {{0x4C23E884, 0xB9E1C581, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1920
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732525620643607171295364
    s21_decimal check = {{0x4C23E884, 0xF371AD7, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1921
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337592112294570
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1922
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1923
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337592112294569
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1924
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1925
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433757922739268
    s21_decimal check = {{0x44444444, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1926
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1927
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433757922739268.5
    s21_decimal check = {{0xAAAAAAAD, 0xFFFFFFFC, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1928
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1929
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433757922739269
    s21_decimal check = {{0x44444445, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1930
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433760786050799
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1931
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433757922739270
    s21_decimal check = {{0x44444446, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1932
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433760786050800
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1933
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1431655764
    s21_decimal check = {{0x55555554, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1934
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1431655766
    s21_decimal check = {{0x55555556, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1935
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1431655764.5
    s21_decimal check = {{0x5555554D, 0x3, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1936
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1431655765.5
    s21_decimal check = {{0x55555557, 0x3, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1937
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1938
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1939
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1940
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1941
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1431655763.0000000000000000000
    s21_decimal check = {{0xBE380000, 0x3F7CAE4A, 0x2E426100, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1942
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1431655767.0000000000000000000
    s21_decimal check = {{0xE5D80000, 0x6A993A5C, 0x2E426102, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1943
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1431655764.0000000000000000000
    s21_decimal check = {{0x48200000, 0xCA43D14F, 0x2E426100, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1944
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1431655766.0000000000000000000
    s21_decimal check = {{0x5BF00000, 0xDFD21758, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1945
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779196416327680
    s21_decimal check = {{0x0, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1946
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1947
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1948
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864509474777770
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1949
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1950
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914692668172970
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1951
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914688373205675
    s21_decimal check = {{0xAAAAAAAB, 0x55555554, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1952
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1953
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1954
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 2863311530
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1955
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1405246377.4952452208021520166
    s21_decimal check = {{0xC460BF26, 0xADCA19DF, 0x2D67ECF3, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1956
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1458065152.5047547791978479834
    s21_decimal check = {{0xDFAF40DA, 0xFC4BCEC7, 0x2F1CD50E, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1957
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1405246377.5013941354919568780
    s21_decimal check = {{0x6AC7258C, 0xAEA48DED, 0x2D67ECF3, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1958
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1458065152.4986058645080431220
    s21_decimal check = {{0x3948DA74, 0xFB715ABA, 0x2F1CD50E, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1959
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1405246378
    s21_decimal check = {{0x53C25BAA, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1960
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1458065152
    s21_decimal check = {{0x56E84F00, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1961
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1431655757.0771837485735662406
    s21_decimal check = {{0x1C62D346, 0x987FA4A, 0x2E4260FD, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1962
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1431655772.9228162514264337594
    s21_decimal check = {{0x87AD2CBA, 0xA08DEE5D, 0x2E426105, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1963
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 1431655757
    s21_decimal check = {{0x5555554D, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1964
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1431655773
    s21_decimal check = {{0x5555555D, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1965
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1431655761.3663339716798464
    s21_decimal check = {{0x2F93E800, 0x24B365AF, 0xBD7A6, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1966
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1431655768.6336660283201536
    s21_decimal check = {{0x30961800, 0x25B595AF, 0xBD7A6, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1967
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1968
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1969
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1970
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1971
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1972
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1973
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1974
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1975
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 1431655118.6632616042487531434
    s21_decimal check = {{0x90B6C7AA, 0xF3CD3D01, 0x2E425FA2, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1976
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 1431656411.3367383957512468566
    s21_decimal check = {{0x13593856, 0xB648ABA6, 0x2E42625F, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1977
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246938575126548.81744120110
    s21_decimal check = {{0x939E692E, 0x6578C301, 0x7D5A8E5, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1978
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246935711815018.81744120110
    s21_decimal check = {{0x6E98592E, 0xDFD42866, 0x7D5A8D5, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1979
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558295544501039
    s21_decimal check = {{0xF6CE932F, 0x648C702B, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1980
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558298407812569
    s21_decimal check = {{0xA1793DD9, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1981
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1982
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337592112294570
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1983
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub1984
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337592112294569
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1985
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1986
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433757922739268
    s21_decimal check = {{0x44444444, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1987
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1988
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433757922739268.5
    s21_decimal check = {{0xAAAAAAAD, 0xFFFFFFFC, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1989
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433760786050799
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1990
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433757922739269
    s21_decimal check = {{0x44444445, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1991
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433760786050800
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1992
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433757922739270
    s21_decimal check = {{0x44444446, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub1993
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1431655766
    s21_decimal check = {{0x55555556, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1994
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1431655764
    s21_decimal check = {{0x55555554, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1995
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1431655765.5
    s21_decimal check = {{0x55555557, 0x3, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1996
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1431655764.5
    s21_decimal check = {{0x5555554D, 0x3, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1997
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1998
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub1999
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2000
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2001
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1431655767.0000000000000000000
    s21_decimal check = {{0xE5D80000, 0x6A993A5C, 0x2E426102, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2002
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1431655763.0000000000000000000
    s21_decimal check = {{0xBE380000, 0x3F7CAE4A, 0x2E426100, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2003
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1431655766.0000000000000000000
    s21_decimal check = {{0x5BF00000, 0xDFD21758, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2004
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1431655764.0000000000000000000
    s21_decimal check = {{0x48200000, 0xCA43D14F, 0x2E426100, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2005
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2006
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779196416327680
    s21_decimal check = {{0x0, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2007
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864509474777770
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2008
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2009
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914692668172970
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2010
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2011
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2012
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914688373205675
    s21_decimal check = {{0xAAAAAAAB, 0x55555554, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2013
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -2863311530
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2014
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2015
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1458065152.5047547791978479834
    s21_decimal check = {{0xDFAF40DA, 0xFC4BCEC7, 0x2F1CD50E, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2016
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1405246377.4952452208021520166
    s21_decimal check = {{0xC460BF26, 0xADCA19DF, 0x2D67ECF3, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2017
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1458065152.4986058645080431220
    s21_decimal check = {{0x3948DA74, 0xFB715ABA, 0x2F1CD50E, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2018
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1405246377.5013941354919568780
    s21_decimal check = {{0x6AC7258C, 0xAEA48DED, 0x2D67ECF3, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2019
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1458065152
    s21_decimal check = {{0x56E84F00, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2020
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1405246378
    s21_decimal check = {{0x53C25BAA, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2021
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1431655772.9228162514264337594
    s21_decimal check = {{0x87AD2CBA, 0xA08DEE5D, 0x2E426105, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2022
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1431655757.0771837485735662406
    s21_decimal check = {{0x1C62D346, 0x987FA4A, 0x2E4260FD, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2023
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -1431655773
    s21_decimal check = {{0x5555555D, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2024
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1431655757
    s21_decimal check = {{0x5555554D, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2025
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1431655768.6336660283201536
    s21_decimal check = {{0x30961800, 0x25B595AF, 0xBD7A6, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2026
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1431655761.3663339716798464
    s21_decimal check = {{0x2F93E800, 0x24B365AF, 0xBD7A6, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2027
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2028
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2029
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2030
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2031
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2032
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2033
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2034
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2035
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -1431656411.3367383957512468566
    s21_decimal check = {{0x13593856, 0xB648ABA6, 0x2E42625F, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2036
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -1431655118.6632616042487531434
    s21_decimal check = {{0x90B6C7AA, 0xF3CD3D01, 0x2E425FA2, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2037
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246935711815018.81744120110
    s21_decimal check = {{0x6E98592E, 0xDFD42866, 0x7D5A8D5, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2038
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246938575126548.81744120110
    s21_decimal check = {{0x939E692E, 0x6578C301, 0x7D5A8E5, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2039
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558298407812569
    s21_decimal check = {{0xA1793DD9, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2040
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558295544501039
    s21_decimal check = {{0xF6CE932F, 0x648C702B, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2041
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2042
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2043
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593517540946
    s21_decimal check = {{0xFE6D0652, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2044
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2045
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2046
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2047
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2048
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2049
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2050
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2051
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2052
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759380804423
    s21_decimal check = {{0x9B2C9347, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2053
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409386.504754779197847983445
    s21_decimal check = {{0x76B55555, 0x1F8BA78F, 0x5555551F, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2054
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409388.504754779197847983445
    s21_decimal check = {{0x33F55555, 0x8B1F031B, 0x5555558B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2055
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2056
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2057
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2058
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2059
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2060
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2061
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409385.504754779197847983445
    s21_decimal check = {{0x98155555, 0xE9C1F9C9, 0x555554E8, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2062
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409389.504754779197847983445
    s21_decimal check = {{0x12955555, 0xC0E8B0E1, 0x555555C1, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2063
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409386.504754779197847983445
    s21_decimal check = {{0x76B55555, 0x1F8BA78F, 0x5555551F, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2064
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409388.504754779197847983445
    s21_decimal check = {{0x33F55555, 0x8B1F031B, 0x5555558B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2065
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197821574057
    s21_decimal check = {{0x53C25BA9, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2066
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197874392833
    s21_decimal check = {{0x56E84F01, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2067
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508016712617
    s21_decimal check = {{0x53C25BA9, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2068
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508069531393
    s21_decimal check = {{0x56E84F01, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2069
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691210107817.4952452208
    s21_decimal check = {{0xA515F070, 0x51AB1559, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2070
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691262926592.5047547792
    s21_decimal check = {{0x78377790, 0x58FF954F, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2071
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689778452052.4952452208
    s21_decimal check = {{0x166F3C70, 0x8AFC7405, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2072
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689831270827.5047547792
    s21_decimal check = {{0xE990C390, 0x9250F3FA, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2073
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1405246377.4952452208021520166
    s21_decimal check = {{0xC460BF26, 0xADCA19DF, 0x2D67ECF3, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2074
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1458065152.5047547791978479834
    s21_decimal check = {{0xDFAF40DA, 0xFC4BCEC7, 0x2F1CD50E, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2075
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2076
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 52818775.009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2077
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.006148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2078
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 52818775.003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2079
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.504754779197847983445
    s21_decimal check = {{0x755555, 0x5CE13560, 0x1B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2080
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 52818774.504754779197847983445
    s21_decimal check = {{0xAA355555, 0x4DC9754A, 0xAAAAAA8F, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2081
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409379.581938527771414224091
    s21_decimal check = {{0x60CFDCDB, 0xD62BA98A, 0x555553A7, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2082
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409395.427571030624281742799
    s21_decimal check = {{0x49DACDCF, 0xD47F0120, 0x55555702, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2083
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409379.504754779197847983445
    s21_decimal check = {{0x60555555, 0xA707E726, 0x555553A3, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2084
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409395.504754779197847983445
    s21_decimal check = {{0x4A555555, 0x3A2C384, 0x55555707, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2085
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409383.871088750877694383445
    s21_decimal check = {{0x5A165555, 0x5A165490, 0x55555490, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2086
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409391.138420807518001583445
    s21_decimal check = {{0x50945555, 0x5094561A, 0x5555561A, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2087
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2088
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2089
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2090
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2091
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2092
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2093
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2094
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2095
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26408741.168016383446601126829
    s21_decimal check = {{0xD19B53AD, 0x5939B933, 0x5554CC77, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2096
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26410033.841493174949094840061
    s21_decimal check = {{0xD90F56FD, 0x5170F176, 0x5555DE33, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2097
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937169880171.322195980298
    s21_decimal check = {{0x479E300A, 0xC901970B, 0x4E5898A9, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2098
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937117061396.312686421902
    s21_decimal check = {{0xCE85678E, 0xEBFF9B04, 0x4E5898A6, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2099
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296949747416
    s21_decimal check = {{0x4A90EED8, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2100
    // 26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558297002566192
    s21_decimal check = {{0x4DB6E230, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2101
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2102
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2103
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2104
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593517540946
    s21_decimal check = {{0xFE6D0652, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2105
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2106
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2107
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2108
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2109
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2110
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2111
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759380804423
    s21_decimal check = {{0x9B2C9347, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2112
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2113
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409388.504754779197847983445
    s21_decimal check = {{0x33F55555, 0x8B1F031B, 0x5555558B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2114
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409386.504754779197847983445
    s21_decimal check = {{0x76B55555, 0x1F8BA78F, 0x5555551F, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2115
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2116
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2117
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2118
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2119
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409388.004754779197847983445
    s21_decimal check = {{0x44A55555, 0x703A2C38, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2120
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.004754779197847983445
    s21_decimal check = {{0x66055555, 0x3A707E72, 0x5555553A, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2121
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409389.504754779197847983445
    s21_decimal check = {{0x12955555, 0xC0E8B0E1, 0x555555C1, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2122
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409385.504754779197847983445
    s21_decimal check = {{0x98155555, 0xE9C1F9C9, 0x555554E8, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2123
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409388.504754779197847983445
    s21_decimal check = {{0x33F55555, 0x8B1F031B, 0x5555558B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2124
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409386.504754779197847983445
    s21_decimal check = {{0x76B55555, 0x1F8BA78F, 0x5555551F, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2125
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197874392833
    s21_decimal check = {{0x56E84F01, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2126
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197821574057
    s21_decimal check = {{0x53C25BA9, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2127
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508069531393
    s21_decimal check = {{0x56E84F01, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2128
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508016712617
    s21_decimal check = {{0x53C25BA9, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2129
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691262926592.5047547792
    s21_decimal check = {{0x78377790, 0x58FF954F, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2130
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691210107817.4952452208
    s21_decimal check = {{0xA515F070, 0x51AB1559, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2131
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689831270827.5047547792
    s21_decimal check = {{0xE990C390, 0x9250F3FA, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2132
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689778452052.4952452208
    s21_decimal check = {{0x166F3C70, 0x8AFC7405, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2133
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1458065152.5047547791978479834
    s21_decimal check = {{0xDFAF40DA, 0xFC4BCEC7, 0x2F1CD50E, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2134
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1405246377.4952452208021520166
    s21_decimal check = {{0xC460BF26, 0xADCA19DF, 0x2D67ECF3, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2135
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -52818775.009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2136
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2137
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -52818775.003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2138
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.006148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2139
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -52818774.504754779197847983445
    s21_decimal check = {{0xAA355555, 0x4DC9754A, 0xAAAAAA8F, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2140
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.504754779197847983445
    s21_decimal check = {{0x755555, 0x5CE13560, 0x1B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2141
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409395.427571030624281742799
    s21_decimal check = {{0x49DACDCF, 0xD47F0120, 0x55555702, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2142
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409379.581938527771414224091
    s21_decimal check = {{0x60CFDCDB, 0xD62BA98A, 0x555553A7, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2143
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409395.504754779197847983445
    s21_decimal check = {{0x4A555555, 0x3A2C384, 0x55555707, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2144
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409379.504754779197847983445
    s21_decimal check = {{0x60555555, 0xA707E726, 0x555553A3, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2145
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409391.138420807518001583445
    s21_decimal check = {{0x50945555, 0x5094561A, 0x5555561A, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2146
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409383.871088750877694383445
    s21_decimal check = {{0x5A165555, 0x5A165490, 0x55555490, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2147
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2148
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2149
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2150
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2151
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2152
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2153
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2154
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2155
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26410033.841493174949094840061
    s21_decimal check = {{0xD90F56FD, 0x5170F176, 0x5555DE33, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2156
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26408741.168016383446601126829
    s21_decimal check = {{0xD19B53AD, 0x5939B933, 0x5554CC77, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2157
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937117061396.312686421902
    s21_decimal check = {{0xCE85678E, 0xEBFF9B04, 0x4E5898A6, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2158
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937169880171.322195980298
    s21_decimal check = {{0x479E300A, 0xC901970B, 0x4E5898A9, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2159
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558297002566192
    s21_decimal check = {{0x4DB6E230, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2160
    // -26409387.504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296949747416
    s21_decimal check = {{0x4A90EED8, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2161
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2162
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2163
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2164
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2165
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2166
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2167
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2168
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2169
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2170
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2171
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2172
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2173
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2174
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2175
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2176
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2177
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2178
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2179
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2180
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2181
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409385.498605864508043122005
    s21_decimal check = {{0x98155555, 0x946CA474, 0x555554E8, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2182
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409389.498605864508043122005
    s21_decimal check = {{0x12955555, 0x6B935B8C, 0x555555C1, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2183
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2184
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2185
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2186
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2187
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2188
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2189
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691210107817.5013941355
    s21_decimal check = {{0xA8C0306B, 0x51AB1559, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2190
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691262926592.4986058645
    s21_decimal check = {{0x748D3795, 0x58FF954F, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2191
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689778452052.5013941355
    s21_decimal check = {{0x1A197C6B, 0x8AFC7405, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2192
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689831270827.4986058645
    s21_decimal check = {{0xE5E68395, 0x9250F3FA, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2193
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1405246377.5013941354919568780
    s21_decimal check = {{0x6AC7258C, 0xAEA48DED, 0x2D67ECF3, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2194
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1458065152.4986058645080431220
    s21_decimal check = {{0x3948DA74, 0xFB715ABA, 0x2F1CD50E, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2195
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.006148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2196
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 52818775.003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2197
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2198
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 52818774.997211729016086244010
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0xAAAAAAAA, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2199
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.498605864508043122005
    s21_decimal check = {{0x755555, 0x78BE00B, 0x1B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2200
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 52818774.498605864508043122005
    s21_decimal check = {{0xAA355555, 0xF8741FF5, 0xAAAAAA8E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2201
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409379.575789613081609362651
    s21_decimal check = {{0x60CFDCDB, 0x80D65435, 0x555553A7, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2202
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409395.421422115934476881359
    s21_decimal check = {{0x49DACDCF, 0x7F29ABCB, 0x55555702, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2203
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409379.498605864508043122005
    s21_decimal check = {{0x60555555, 0x51B291D1, 0x555553A3, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2204
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409395.498605864508043122005
    s21_decimal check = {{0x4A555555, 0xAE4D6E2F, 0x55555706, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2205
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409383.864939836187889522005
    s21_decimal check = {{0x5A165555, 0x4C0FF3B, 0x55555490, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2206
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409391.132271892828196722005
    s21_decimal check = {{0x50945555, 0xFB3F00C5, 0x55555619, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2207
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2208
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2209
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2210
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2211
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2212
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2213
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2214
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2215
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26408741.161867468756796265389
    s21_decimal check = {{0xD19B53AD, 0x3E463DE, 0x5554CC77, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2216
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26410033.835344260259289978621
    s21_decimal check = {{0xD90F56FD, 0xFC1B9C21, 0x5555DE32, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2217
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937169880171.316047065608
    s21_decimal check = {{0xD91D3208, 0xC9019709, 0x4E5898A9, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2218
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937117061396.318835336592
    s21_decimal check = {{0x3D066590, 0xEBFF9B06, 0x4E5898A6, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2219
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296949747417
    s21_decimal check = {{0x4A90EED9, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2220
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558297002566191
    s21_decimal check = {{0x4DB6E22F, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2221
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2222
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2223
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2224
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2225
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2226
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2227
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2228
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2229
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2230
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2231
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2232
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2233
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2234
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2235
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2236
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2237
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2238
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2239
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2240
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2241
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409389.498605864508043122005
    s21_decimal check = {{0x12955555, 0x6B935B8C, 0x555555C1, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2242
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409385.498605864508043122005
    s21_decimal check = {{0x98155555, 0x946CA474, 0x555554E8, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2243
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2244
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2245
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2246
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2247
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2248
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2249
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691262926592.4986058645
    s21_decimal check = {{0x748D3795, 0x58FF954F, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2250
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691210107817.5013941355
    s21_decimal check = {{0xA8C0306B, 0x51AB1559, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2251
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689831270827.4986058645
    s21_decimal check = {{0xE5E68395, 0x9250F3FA, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2252
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689778452052.5013941355
    s21_decimal check = {{0x1A197C6B, 0x8AFC7405, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2253
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1458065152.4986058645080431220
    s21_decimal check = {{0x3948DA74, 0xFB715ABA, 0x2F1CD50E, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2254
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1405246377.5013941354919568780
    s21_decimal check = {{0x6AC7258C, 0xAEA48DED, 0x2D67ECF3, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2255
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -52818775.003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2256
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.006148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2257
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -52818774.997211729016086244010
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0xAAAAAAAA, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2258
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2259
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -52818774.498605864508043122005
    s21_decimal check = {{0xAA355555, 0xF8741FF5, 0xAAAAAA8E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2260
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.498605864508043122005
    s21_decimal check = {{0x755555, 0x78BE00B, 0x1B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2261
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409395.421422115934476881359
    s21_decimal check = {{0x49DACDCF, 0x7F29ABCB, 0x55555702, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2262
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409379.575789613081609362651
    s21_decimal check = {{0x60CFDCDB, 0x80D65435, 0x555553A7, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2263
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409395.498605864508043122005
    s21_decimal check = {{0x4A555555, 0xAE4D6E2F, 0x55555706, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2264
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409379.498605864508043122005
    s21_decimal check = {{0x60555555, 0x51B291D1, 0x555553A3, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2265
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409391.132271892828196722005
    s21_decimal check = {{0x50945555, 0xFB3F00C5, 0x55555619, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2266
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409383.864939836187889522005
    s21_decimal check = {{0x5A165555, 0x4C0FF3B, 0x55555490, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2267
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2268
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2269
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2270
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2271
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2272
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2273
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2274
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2275
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26410033.835344260259289978621
    s21_decimal check = {{0xD90F56FD, 0xFC1B9C21, 0x5555DE32, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2276
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26408741.161867468756796265389
    s21_decimal check = {{0xD19B53AD, 0x3E463DE, 0x5554CC77, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2277
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937117061396.318835336592
    s21_decimal check = {{0x3D066590, 0xEBFF9B06, 0x4E5898A6, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2278
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937169880171.316047065608
    s21_decimal check = {{0xD91D3208, 0xC9019709, 0x4E5898A9, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2279
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558297002566191
    s21_decimal check = {{0x4DB6E22F, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2280
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296949747417
    s21_decimal check = {{0x4A90EED9, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2281
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2282
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2283
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2284
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2285
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759327985646
    s21_decimal check = {{0x98069FEE, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2286
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2287
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2288
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2289
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759327985647
    s21_decimal check = {{0x98069FEF, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2290
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2291
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759327985648
    s21_decimal check = {{0x98069FF0, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2292
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2293
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409386
    s21_decimal check = {{0x192F9AA, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2294
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409388
    s21_decimal check = {{0x192F9AC, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2295
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409386.5
    s21_decimal check = {{0xFBDC0A9, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2296
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387.5
    s21_decimal check = {{0xFBDC0B3, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2297
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2298
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2299
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2300
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2301
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409385.000000000000000000000
    s21_decimal check = {{0x97A00000, 0x8CE0C469, 0x555554CD, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2302
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409389.000000000000000000000
    s21_decimal check = {{0x12200000, 0x64077B81, 0x555555A6, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2303
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409386.000000000000000000000
    s21_decimal check = {{0x76400000, 0xC2AA722F, 0x55555503, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2304
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409388.000000000000000000000
    s21_decimal check = {{0x33800000, 0x2E3DCDBB, 0x55555570, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2305
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2306
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2307
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2308
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2309
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691210107818
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2310
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691262926592
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2311
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689778452053
    s21_decimal check = {{0xFE6D0655, 0x55555554, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2312
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689831270827
    s21_decimal check = {{0x192F9AB, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2313
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1405246378
    s21_decimal check = {{0x53C25BAA, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2314
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1458065152
    s21_decimal check = {{0x56E84F00, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2315
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -0.504754779197847983445
    s21_decimal check = {{0x755555, 0x5CE13560, 0x1B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2316
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 52818774.504754779197847983445
    s21_decimal check = {{0xAA355555, 0x4DC9754A, 0xAAAAAA8F, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2317
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.498605864508043122005
    s21_decimal check = {{0x755555, 0x78BE00B, 0x1B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2318
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 52818774.498605864508043122005
    s21_decimal check = {{0xAA355555, 0xF8741FF5, 0xAAAAAA8E, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2319
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2320
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 52818774
    s21_decimal check = {{0x325F356, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2321
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409379.077183748573566240646
    s21_decimal check = {{0x605A8786, 0x794A742A, 0x5555538C, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2322
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409394.922816251426433759354
    s21_decimal check = {{0x4965787A, 0x779DCBC0, 0x555556E7, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2323
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409379
    s21_decimal check = {{0x192F9A3, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2324
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409395
    s21_decimal check = {{0x192F9B3, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2325
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409383.3663339716798464
    s21_decimal check = {{0x5E69E800, 0x8E2F57B5, 0x37EC, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2326
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409390.6336660283201536
    s21_decimal check = {{0x5F6C1800, 0x8F3187B5, 0x37EC, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2327
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2328
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2329
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2330
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2331
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2332
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2333
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2334
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2335
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26408740.663261604248753143384
    s21_decimal check = {{0xD125FE58, 0xFC5883D3, 0x5554CC5B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2336
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26410033.336738395751246856616
    s21_decimal check = {{0xD89A01A8, 0xF48FBC16, 0x5555DE17, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2337
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937169880170.81744120110
    s21_decimal check = {{0x6030592E, 0xC74CF575, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2338
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937117061396.81744120110
    s21_decimal check = {{0xA206692E, 0x7DFFF5F2, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2339
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296949747417
    s21_decimal check = {{0x4A90EED9, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2340
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558297002566191
    s21_decimal check = {{0x4DB6E22F, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2341
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2342
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2343
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2344
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2345
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2346
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759327985646
    s21_decimal check = {{0x98069FEE, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2347
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2348
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2349
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2350
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759327985647
    s21_decimal check = {{0x98069FEF, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2351
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2352
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759327985648
    s21_decimal check = {{0x98069FF0, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2353
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409388
    s21_decimal check = {{0x192F9AC, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2354
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409386
    s21_decimal check = {{0x192F9AA, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2355
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387.5
    s21_decimal check = {{0xFBDC0B3, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2356
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409386.5
    s21_decimal check = {{0xFBDC0A9, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2357
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2358
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2359
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2360
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2361
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409389.000000000000000000000
    s21_decimal check = {{0x12200000, 0x64077B81, 0x555555A6, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2362
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409385.000000000000000000000
    s21_decimal check = {{0x97A00000, 0x8CE0C469, 0x555554CD, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2363
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409388.000000000000000000000
    s21_decimal check = {{0x33800000, 0x2E3DCDBB, 0x55555570, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2364
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409386.000000000000000000000
    s21_decimal check = {{0x76400000, 0xC2AA722F, 0x55555503, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2365
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2366
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2367
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2368
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2369
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691262926592
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2370
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691210107818
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2371
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689831270827
    s21_decimal check = {{0x192F9AB, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2372
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689778452053
    s21_decimal check = {{0xFE6D0655, 0x55555554, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2373
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1458065152
    s21_decimal check = {{0x56E84F00, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2374
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1405246378
    s21_decimal check = {{0x53C25BAA, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2375
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -52818774.504754779197847983445
    s21_decimal check = {{0xAA355555, 0x4DC9754A, 0xAAAAAA8F, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2376
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 0.504754779197847983445
    s21_decimal check = {{0x755555, 0x5CE13560, 0x1B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2377
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -52818774.498605864508043122005
    s21_decimal check = {{0xAA355555, 0xF8741FF5, 0xAAAAAA8E, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2378
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.498605864508043122005
    s21_decimal check = {{0x755555, 0x78BE00B, 0x1B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2379
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -52818774
    s21_decimal check = {{0x325F356, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2380
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2381
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409394.922816251426433759354
    s21_decimal check = {{0x4965787A, 0x779DCBC0, 0x555556E7, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2382
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409379.077183748573566240646
    s21_decimal check = {{0x605A8786, 0x794A742A, 0x5555538C, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2383
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409395
    s21_decimal check = {{0x192F9B3, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2384
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409379
    s21_decimal check = {{0x192F9A3, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2385
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409390.6336660283201536
    s21_decimal check = {{0x5F6C1800, 0x8F3187B5, 0x37EC, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2386
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409383.3663339716798464
    s21_decimal check = {{0x5E69E800, 0x8E2F57B5, 0x37EC, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2387
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2388
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2389
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2390
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2391
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2392
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2393
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2394
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2395
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26410033.336738395751246856616
    s21_decimal check = {{0xD89A01A8, 0xF48FBC16, 0x5555DE17, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2396
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26408740.663261604248753143384
    s21_decimal check = {{0xD125FE58, 0xFC5883D3, 0x5554CC5B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2397
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937117061396.81744120110
    s21_decimal check = {{0xA206692E, 0x7DFFF5F2, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2398
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937169880170.81744120110
    s21_decimal check = {{0x6030592E, 0xC74CF575, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2399
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558297002566191
    s21_decimal check = {{0x4DB6E22F, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2400
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296949747417
    s21_decimal check = {{0x4A90EED9, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2401
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2402
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2403
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2404
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2405
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395025.1
    s21_decimal check = {{0xFFFFFFAB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2406
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2407
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395025.6
    s21_decimal check = {{0xFFFFFFB0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2408
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2409
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395026.1
    s21_decimal check = {{0xFFFFFFB5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2410
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2411
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395027.1
    s21_decimal check = {{0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2412
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2413
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 6.9228162514264337593543950335
    s21_decimal check = {{0xEFFFFFFF, 0xC1DAFD9E, 0xDFB031A1, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2414
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2415
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7.4228162514264337593543950335
    s21_decimal check = {{0x77FFFFFF, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2416
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2417
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.4228162514264337593543950336
    s21_decimal check = {{0x78000000, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2418
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8.422816251426433759354395033
    s21_decimal check = {{0xD999999, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2419
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.4228162514264337593543950334
    s21_decimal check = {{0x77FFFFFE, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2420
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2421
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 5.9228162514264337593543951335
    s21_decimal check = {{0xE00003E7, 0x83B5FB3D, 0xBF606343, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2422
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 9.922816251426433759354394934
    s21_decimal check = {{0x69999936, 0xD93A9A13, 0x200FF612, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2423
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6.9228162514264337593543950334
    s21_decimal check = {{0xEFFFFFFE, 0xC1DAFD9E, 0xDFB031A1, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2424
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2425
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2426
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2427
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2428
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2429
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517197.0771837486
    s21_decimal check = {{0x1C48E22E, 0x55555542, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2430
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517212.9228162514
    s21_decimal check = {{0x10485D2, 0x55555567, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2431
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861432.0771837486
    s21_decimal check = {{0x8DA22E2E, 0x8EA6B3ED, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2432
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861447.9228162514
    s21_decimal check = {{0x725DD1D2, 0x8EA6B412, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2433
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655757.0771837485735662406
    s21_decimal check = {{0x1C62D346, 0x987FA4A, 0x2E4260FD, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2434
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655772.9228162514264337594
    s21_decimal check = {{0x87AD2CBA, 0xA08DEE5D, 0x2E426105, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2435
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409379.581938527771414224091
    s21_decimal check = {{0x60CFDCDB, 0xD62BA98A, 0x555553A7, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2436
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409395.427571030624281742799
    s21_decimal check = {{0x49DACDCF, 0xD47F0120, 0x55555702, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2437
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409379.575789613081609362651
    s21_decimal check = {{0x60CFDCDB, 0x80D65435, 0x555553A7, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2438
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409395.421422115934476881359
    s21_decimal check = {{0x49DACDCF, 0x7F29ABCB, 0x55555702, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2439
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409379.077183748573566240646
    s21_decimal check = {{0x605A8786, 0x794A742A, 0x5555538C, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2440
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409394.922816251426433759354
    s21_decimal check = {{0x4965787A, 0x779DCBC0, 0x555556E7, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2441
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2442
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 15.845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2443
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0771837485735662406456049665
    s21_decimal check = {{0x80000001, 0xF1281308, 0x27E72F1, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2444
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 15.922816251426433759354395034
    s21_decimal check = {{0xD999999A, 0x981D9B80, 0x33730B7E, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2445
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 4.2891502231062801593543950335
    s21_decimal check = {{0x767FFFFF, 0x11704E3, 0x8A9704E3, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2446
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 11.556482279746587359354395034
    s21_decimal check = {{0xA759999A, 0xB3174C4F, 0x25574C4F, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2447
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2448
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2449
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2450
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2451
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2452
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2453
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950325
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2454
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2455
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -638.41392214432481309726159382
    s21_decimal check = {{0x89D13216, 0xAB5A1443, 0xCE485CA6, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2456
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 654.25955464717768061597038388
    s21_decimal check = {{0xDBBCB734, 0x96DF32FB, 0xD36714F8, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2457
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470791.740257452526
    s21_decimal check = {{0xB7B7C1EE, 0x5A80A03C, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2458
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470775.894624949674
    s21_decimal check = {{0x5E6BD5AA, 0x5A8091D3, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2459
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156796
    s21_decimal check = {{0x4C23E87C, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2460
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156812
    s21_decimal check = {{0x4C23E88C, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2461
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2462
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2463
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2464
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2465
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2466
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395025.1
    s21_decimal check = {{0xFFFFFFAB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2467
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2468
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395025.6
    s21_decimal check = {{0xFFFFFFB0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2469
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2470
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395026.1
    s21_decimal check = {{0xFFFFFFB5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2471
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2472
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395027.1
    s21_decimal check = {{0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2473
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2474
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6.9228162514264337593543950335
    s21_decimal check = {{0xEFFFFFFF, 0xC1DAFD9E, 0xDFB031A1, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2475
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2476
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7.4228162514264337593543950335
    s21_decimal check = {{0x77FFFFFF, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2477
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8.422816251426433759354395033
    s21_decimal check = {{0xD999999, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2478
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.4228162514264337593543950336
    s21_decimal check = {{0x78000000, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2479
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2480
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.4228162514264337593543950334
    s21_decimal check = {{0x77FFFFFE, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2481
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -9.922816251426433759354394934
    s21_decimal check = {{0x69999936, 0xD93A9A13, 0x200FF612, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2482
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -5.9228162514264337593543951335
    s21_decimal check = {{0xE00003E7, 0x83B5FB3D, 0xBF606343, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2483
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2484
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6.9228162514264337593543950334
    s21_decimal check = {{0xEFFFFFFE, 0xC1DAFD9E, 0xDFB031A1, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2485
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2486
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2487
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2488
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2489
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517212.9228162514
    s21_decimal check = {{0x10485D2, 0x55555567, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2490
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517197.0771837486
    s21_decimal check = {{0x1C48E22E, 0x55555542, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2491
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861447.9228162514
    s21_decimal check = {{0x725DD1D2, 0x8EA6B412, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2492
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861432.0771837486
    s21_decimal check = {{0x8DA22E2E, 0x8EA6B3ED, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2493
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655772.9228162514264337594
    s21_decimal check = {{0x87AD2CBA, 0xA08DEE5D, 0x2E426105, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2494
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655757.0771837485735662406
    s21_decimal check = {{0x1C62D346, 0x987FA4A, 0x2E4260FD, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2495
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409395.427571030624281742799
    s21_decimal check = {{0x49DACDCF, 0xD47F0120, 0x55555702, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2496
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409379.581938527771414224091
    s21_decimal check = {{0x60CFDCDB, 0xD62BA98A, 0x555553A7, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2497
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409395.421422115934476881359
    s21_decimal check = {{0x49DACDCF, 0x7F29ABCB, 0x55555702, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2498
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409379.575789613081609362651
    s21_decimal check = {{0x60CFDCDB, 0x80D65435, 0x555553A7, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2499
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409394.922816251426433759354
    s21_decimal check = {{0x4965787A, 0x779DCBC0, 0x555556E7, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2500
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409379.077183748573566240646
    s21_decimal check = {{0x605A8786, 0x794A742A, 0x5555538C, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2501
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -15.845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2502
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2503
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -15.922816251426433759354395034
    s21_decimal check = {{0xD999999A, 0x981D9B80, 0x33730B7E, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2504
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0771837485735662406456049665
    s21_decimal check = {{0x80000001, 0xF1281308, 0x27E72F1, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2505
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -11.556482279746587359354395034
    s21_decimal check = {{0xA759999A, 0xB3174C4F, 0x25574C4F, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2506
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -4.2891502231062801593543950335
    s21_decimal check = {{0x767FFFFF, 0x11704E3, 0x8A9704E3, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2507
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2508
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2509
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2510
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2511
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2512
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2513
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2514
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950325
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2515
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -654.25955464717768061597038388
    s21_decimal check = {{0xDBBCB734, 0x96DF32FB, 0xD36714F8, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2516
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 638.41392214432481309726159382
    s21_decimal check = {{0x89D13216, 0xAB5A1443, 0xCE485CA6, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2517
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470775.894624949674
    s21_decimal check = {{0x5E6BD5AA, 0x5A8091D3, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2518
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470791.740257452526
    s21_decimal check = {{0xB7B7C1EE, 0x5A80A03C, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2519
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156812
    s21_decimal check = {{0x4C23E88C, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2520
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156796
    s21_decimal check = {{0x4C23E87C, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2521
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2522
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2523
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2524
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2525
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395025
    s21_decimal check = {{0x99999991, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2526
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2527
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395025.5
    s21_decimal check = {{0xFFFFFFAF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2528
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2529
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395026
    s21_decimal check = {{0x99999992, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2530
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2531
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395027
    s21_decimal check = {{0x99999993, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2532
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2533
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7
    s21_decimal check = {{0x7, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2534
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 9
    s21_decimal check = {{0x9, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2535
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7.5
    s21_decimal check = {{0x4B, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2536
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 8.5
    s21_decimal check = {{0x55, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2537
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.5000000000000000000000000001
    s21_decimal check = {{0xF8000001, 0xD21591D7, 0xF2568BC2, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2538
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2539
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.4999999999999999999999999999
    s21_decimal check = {{0xF7FFFFFF, 0xD21591D7, 0xF2568BC2, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2540
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2541
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6.0000000000000000000000001000
    s21_decimal check = {{0x600003E8, 0x74DE0E46, 0xC1DED635, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2542
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 9.999999999999999999999999900
    s21_decimal check = {{0xFFFFF9C, 0x3E250261, 0x204FCE5E, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2543
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6.9999999999999999999999999999
    s21_decimal check = {{0x6FFFFFFF, 0xB30310A7, 0xE22EA493, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2544
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 9.000000000000000000000000000
    s21_decimal check = {{0x28000000, 0x9E548224, 0x1D14A021, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2545
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2546
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2547
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2548
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2549
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517197
    s21_decimal check = {{0x5555554D, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2550
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517213
    s21_decimal check = {{0x5555555D, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2551
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861432
    s21_decimal check = {{0xFFFFFFF8, 0x55555554, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2552
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861448
    s21_decimal check = {{0x8, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2553
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655757
    s21_decimal check = {{0x5555554D, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2554
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655773
    s21_decimal check = {{0x5555555D, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2555
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409379.504754779197847983445
    s21_decimal check = {{0x60555555, 0xA707E726, 0x555553A3, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2556
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409395.504754779197847983445
    s21_decimal check = {{0x4A555555, 0x3A2C384, 0x55555707, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2557
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409379.498605864508043122005
    s21_decimal check = {{0x60555555, 0x51B291D1, 0x555553A3, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2558
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409395.498605864508043122005
    s21_decimal check = {{0x4A555555, 0xAE4D6E2F, 0x55555706, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2559
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409379
    s21_decimal check = {{0x192F9A3, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2560
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409395
    s21_decimal check = {{0x192F9B3, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2561
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0771837485735662406456049665
    s21_decimal check = {{0x80000001, 0xF1281308, 0x27E72F1, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2562
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 15.922816251426433759354395034
    s21_decimal check = {{0xD999999A, 0x981D9B80, 0x33730B7E, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2563
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2564
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 16
    s21_decimal check = {{0x10, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2565
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 4.3663339716798464
    s21_decimal check = {{0x7D86E800, 0x9B1F93, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2566
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 11.6336660283201536
    s21_decimal check = {{0x7E891800, 0x19D4F93, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2567
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2568
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2569
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2570
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2571
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2572
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2573
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7.999999999999999999999999999
    s21_decimal check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2574
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 8.000000000000000000000000001
    s21_decimal check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2575
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -638.33673839575124685661598885
    s21_decimal check = {{0x92C6F4A5, 0xBADC3D08, 0xCE41FA38, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2576
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 654.33673839575124685661598885
    s21_decimal check = {{0xD2C6F4A5, 0x875D0A36, 0xD36D7766, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2577
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470791.81744120110
    s21_decimal check = {{0x44D2A12E, 0xA2A6766E, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2578
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470775.81744120110
    s21_decimal check = {{0xBD64212E, 0xA2A674F9, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2579
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156796
    s21_decimal check = {{0x4C23E87C, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2580
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156812
    s21_decimal check = {{0x4C23E88C, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2581
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2582
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2583
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2584
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2585
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2586
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395025
    s21_decimal check = {{0x99999991, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2587
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2588
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395025.5
    s21_decimal check = {{0xFFFFFFAF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2589
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2590
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395026
    s21_decimal check = {{0x99999992, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2591
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2592
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395027
    s21_decimal check = {{0x99999993, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2593
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -9
    s21_decimal check = {{0x9, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2594
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7
    s21_decimal check = {{0x7, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2595
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -8.5
    s21_decimal check = {{0x55, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2596
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7.5
    s21_decimal check = {{0x4B, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2597
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2598
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.5000000000000000000000000001
    s21_decimal check = {{0xF8000001, 0xD21591D7, 0xF2568BC2, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2599
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2600
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.4999999999999999999999999999
    s21_decimal check = {{0xF7FFFFFF, 0xD21591D7, 0xF2568BC2, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2601
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -9.999999999999999999999999900
    s21_decimal check = {{0xFFFFF9C, 0x3E250261, 0x204FCE5E, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2602
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6.0000000000000000000000001000
    s21_decimal check = {{0x600003E8, 0x74DE0E46, 0xC1DED635, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2603
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -9.000000000000000000000000000
    s21_decimal check = {{0x28000000, 0x9E548224, 0x1D14A021, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2604
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6.9999999999999999999999999999
    s21_decimal check = {{0x6FFFFFFF, 0xB30310A7, 0xE22EA493, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2605
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2606
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2607
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2608
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2609
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517213
    s21_decimal check = {{0x5555555D, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2610
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517197
    s21_decimal check = {{0x5555554D, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2611
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861448
    s21_decimal check = {{0x8, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2612
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861432
    s21_decimal check = {{0xFFFFFFF8, 0x55555554, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2613
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655773
    s21_decimal check = {{0x5555555D, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2614
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655757
    s21_decimal check = {{0x5555554D, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2615
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409395.504754779197847983445
    s21_decimal check = {{0x4A555555, 0x3A2C384, 0x55555707, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2616
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409379.504754779197847983445
    s21_decimal check = {{0x60555555, 0xA707E726, 0x555553A3, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2617
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409395.498605864508043122005
    s21_decimal check = {{0x4A555555, 0xAE4D6E2F, 0x55555706, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2618
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409379.498605864508043122005
    s21_decimal check = {{0x60555555, 0x51B291D1, 0x555553A3, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2619
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409395
    s21_decimal check = {{0x192F9B3, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2620
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409379
    s21_decimal check = {{0x192F9A3, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2621
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -15.922816251426433759354395034
    s21_decimal check = {{0xD999999A, 0x981D9B80, 0x33730B7E, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2622
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0771837485735662406456049665
    s21_decimal check = {{0x80000001, 0xF1281308, 0x27E72F1, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2623
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -16
    s21_decimal check = {{0x10, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2624
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2625
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -11.6336660283201536
    s21_decimal check = {{0x7E891800, 0x19D4F93, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2626
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -4.3663339716798464
    s21_decimal check = {{0x7D86E800, 0x9B1F93, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2627
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2628
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2629
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2630
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2631
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2632
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2633
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -8.000000000000000000000000001
    s21_decimal check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2634
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7.999999999999999999999999999
    s21_decimal check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2635
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -654.33673839575124685661598885
    s21_decimal check = {{0xD2C6F4A5, 0x875D0A36, 0xD36D7766, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2636
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 638.33673839575124685661598885
    s21_decimal check = {{0x92C6F4A5, 0xBADC3D08, 0xCE41FA38, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2637
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470775.81744120110
    s21_decimal check = {{0xBD64212E, 0xA2A674F9, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2638
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470791.81744120110
    s21_decimal check = {{0x44D2A12E, 0xA2A6766E, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2639
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156812
    s21_decimal check = {{0x4C23E88C, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2640
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156796
    s21_decimal check = {{0x4C23E87C, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2641
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950331
    s21_decimal check = {{0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2642
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2643
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950330
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2644
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2645
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395029.4
    s21_decimal check = {{0xFFFFFFD6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2646
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2647
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395029.9
    s21_decimal check = {{0xFFFFFFDB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2648
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2649
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395030.4
    s21_decimal check = {{0xFFFFFFE0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2650
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395038
    s21_decimal check = {{0x9999999E, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2651
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395031.4
    s21_decimal check = {{0xFFFFFFEA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2652
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395039
    s21_decimal check = {{0x9999999F, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2653
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 2.6336660283201536
    s21_decimal check = {{0x90C01800, 0x5D910D, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2654
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 4.6336660283201536
    s21_decimal check = {{0x70421800, 0xA49EF2, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2655
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 3.1336660283201536
    s21_decimal check = {{0xC8A09800, 0x6F5486, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2656
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 4.1336660283201536
    s21_decimal check = {{0x38619800, 0x92DB79, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2657
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3.1336660283201536000000000001
    s21_decimal check = {{0x1800001, 0xDFD679EC, 0x654113ED, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2658
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 4.1336660283201535999999999999
    s21_decimal check = {{0x117FFFFF, 0x1DFB7C4D, 0x8590E24C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2659
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3.1336660283201535999999999999
    s21_decimal check = {{0x17FFFFF, 0xDFD679EC, 0x654113ED, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2660
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 4.1336660283201536000000000001
    s21_decimal check = {{0x11800001, 0x1DFB7C4D, 0x8590E24C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2661
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.6336660283201536000000001000
    s21_decimal check = {{0x698003E8, 0x829EF65A, 0x34C95E60, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2662
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 5.6336660283201535999999999000
    s21_decimal check = {{0xA97FFC18, 0x7B32FFDE, 0xB60897D9, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2663
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 2.6336660283201535999999999999
    s21_decimal check = {{0x797FFFFF, 0xC0C3F8BB, 0x55192CBE, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2664
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 4.6336660283201536000000000001
    s21_decimal check = {{0x99800001, 0x3D0DFD7D, 0x95B8C97B, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2665
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983441
    s21_decimal check = {{0x55555551, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2666
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983449
    s21_decimal check = {{0x55555559, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2667
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122001
    s21_decimal check = {{0x55555551, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2668
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122009
    s21_decimal check = {{0x55555559, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2669
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517201.3663339717
    s21_decimal check = {{0x18D144C5, 0x5555554C, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2670
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517208.6336660283
    s21_decimal check = {{0x47C233B, 0x5555555D, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2671
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861436.3663339717
    s21_decimal check = {{0x8A2A90C5, 0x8EA6B3F7, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2672
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861443.6336660283
    s21_decimal check = {{0x75D56F3B, 0x8EA6B408, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2673
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655761.3663339716798464
    s21_decimal check = {{0x2F93E800, 0x24B365AF, 0xBD7A6, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2674
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655768.6336660283201536
    s21_decimal check = {{0x30961800, 0x25B595AF, 0xBD7A6, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2675
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409383.871088750877694383445
    s21_decimal check = {{0x5A165555, 0x5A165490, 0x55555490, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2676
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409391.138420807518001583445
    s21_decimal check = {{0x50945555, 0x5094561A, 0x5555561A, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2677
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409383.864939836187889522005
    s21_decimal check = {{0x5A165555, 0x4C0FF3B, 0x55555490, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2678
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409391.132271892828196722005
    s21_decimal check = {{0x50945555, 0xFB3F00C5, 0x55555619, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2679
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409383.3663339716798464
    s21_decimal check = {{0x5E69E800, 0x8E2F57B5, 0x37EC, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2680
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409390.6336660283201536
    s21_decimal check = {{0x5F6C1800, 0x8F3187B5, 0x37EC, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2681
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -4.2891502231062801593543950335
    s21_decimal check = {{0x767FFFFF, 0x11704E3, 0x8A9704E3, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2682
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 11.556482279746587359354395034
    s21_decimal check = {{0xA759999A, 0xB3174C4F, 0x25574C4F, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2683
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -4.3663339716798464
    s21_decimal check = {{0x7D86E800, 0x9B1F93, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2684
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 11.6336660283201536
    s21_decimal check = {{0x7E891800, 0x19D4F93, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2685
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.0000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2686
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7.2673320566403072
    s21_decimal check = {{0x1023000, 0x1023000, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2687
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2688
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2689
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2690
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2691
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201535999999999999
    s21_decimal check = {{0x897FFFFF, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2692
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536000000000001
    s21_decimal check = {{0x89800001, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2693
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201535999999999990
    s21_decimal check = {{0x897FFFF6, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2694
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536000000000010
    s21_decimal check = {{0x8980000A, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2695
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -642.70307236743109325661598885
    s21_decimal check = {{0xB166F4A5, 0x9E9011C0, 0xCFAB26F0, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2696
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 649.97040442407140045661598885
    s21_decimal check = {{0xB426F4A5, 0xA3A9357E, 0xD2044AAE, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2697
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470787.451107229420
    s21_decimal check = {{0x12713EEC, 0x5A809C56, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2698
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470780.183775172780
    s21_decimal check = {{0x3B258AC, 0x5A8095BA, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2699
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156800
    s21_decimal check = {{0x4C23E880, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2700
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156808
    s21_decimal check = {{0x4C23E888, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2701
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2702
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950331
    s21_decimal check = {{0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2703
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub2704
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950330
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2705
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2706
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395029.4
    s21_decimal check = {{0xFFFFFFD6, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2707
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2708
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395029.9
    s21_decimal check = {{0xFFFFFFDB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2709
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395038
    s21_decimal check = {{0x9999999E, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2710
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395030.4
    s21_decimal check = {{0xFFFFFFE0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2711
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395039
    s21_decimal check = {{0x9999999F, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2712
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395031.4
    s21_decimal check = {{0xFFFFFFEA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2713
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -4.6336660283201536
    s21_decimal check = {{0x70421800, 0xA49EF2, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2714
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -2.6336660283201536
    s21_decimal check = {{0x90C01800, 0x5D910D, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2715
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -4.1336660283201536
    s21_decimal check = {{0x38619800, 0x92DB79, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2716
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -3.1336660283201536
    s21_decimal check = {{0xC8A09800, 0x6F5486, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2717
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -4.1336660283201535999999999999
    s21_decimal check = {{0x117FFFFF, 0x1DFB7C4D, 0x8590E24C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2718
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3.1336660283201536000000000001
    s21_decimal check = {{0x1800001, 0xDFD679EC, 0x654113ED, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2719
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -4.1336660283201536000000000001
    s21_decimal check = {{0x11800001, 0x1DFB7C4D, 0x8590E24C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2720
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3.1336660283201535999999999999
    s21_decimal check = {{0x17FFFFF, 0xDFD679EC, 0x654113ED, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2721
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -5.6336660283201535999999999000
    s21_decimal check = {{0xA97FFC18, 0x7B32FFDE, 0xB60897D9, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2722
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.6336660283201536000000001000
    s21_decimal check = {{0x698003E8, 0x829EF65A, 0x34C95E60, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2723
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -4.6336660283201536000000000001
    s21_decimal check = {{0x99800001, 0x3D0DFD7D, 0x95B8C97B, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2724
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -2.6336660283201535999999999999
    s21_decimal check = {{0x797FFFFF, 0xC0C3F8BB, 0x55192CBE, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2725
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983449
    s21_decimal check = {{0x55555559, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2726
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983441
    s21_decimal check = {{0x55555551, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2727
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122009
    s21_decimal check = {{0x55555559, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2728
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122001
    s21_decimal check = {{0x55555551, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2729
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517208.6336660283
    s21_decimal check = {{0x47C233B, 0x5555555D, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2730
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517201.3663339717
    s21_decimal check = {{0x18D144C5, 0x5555554C, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2731
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861443.6336660283
    s21_decimal check = {{0x75D56F3B, 0x8EA6B408, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2732
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861436.3663339717
    s21_decimal check = {{0x8A2A90C5, 0x8EA6B3F7, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2733
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655768.6336660283201536
    s21_decimal check = {{0x30961800, 0x25B595AF, 0xBD7A6, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2734
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655761.3663339716798464
    s21_decimal check = {{0x2F93E800, 0x24B365AF, 0xBD7A6, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2735
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409391.138420807518001583445
    s21_decimal check = {{0x50945555, 0x5094561A, 0x5555561A, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2736
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409383.871088750877694383445
    s21_decimal check = {{0x5A165555, 0x5A165490, 0x55555490, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2737
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409391.132271892828196722005
    s21_decimal check = {{0x50945555, 0xFB3F00C5, 0x55555619, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2738
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409383.864939836187889522005
    s21_decimal check = {{0x5A165555, 0x4C0FF3B, 0x55555490, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2739
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409390.6336660283201536
    s21_decimal check = {{0x5F6C1800, 0x8F3187B5, 0x37EC, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2740
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409383.3663339716798464
    s21_decimal check = {{0x5E69E800, 0x8E2F57B5, 0x37EC, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2741
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -11.556482279746587359354395034
    s21_decimal check = {{0xA759999A, 0xB3174C4F, 0x25574C4F, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2742
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 4.2891502231062801593543950335
    s21_decimal check = {{0x767FFFFF, 0x11704E3, 0x8A9704E3, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2743
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -11.6336660283201536
    s21_decimal check = {{0x7E891800, 0x19D4F93, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2744
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 4.3663339716798464
    s21_decimal check = {{0x7D86E800, 0x9B1F93, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2745
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7.2673320566403072
    s21_decimal check = {{0x1023000, 0x1023000, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2746
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.0000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2747
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2748
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2749
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2750
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2751
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536000000000001
    s21_decimal check = {{0x89800001, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2752
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201535999999999999
    s21_decimal check = {{0x897FFFFF, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2753
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536000000000010
    s21_decimal check = {{0x8980000A, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2754
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201535999999999990
    s21_decimal check = {{0x897FFFF6, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2755
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -649.97040442407140045661598885
    s21_decimal check = {{0xB426F4A5, 0xA3A9357E, 0xD2044AAE, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2756
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 642.70307236743109325661598885
    s21_decimal check = {{0xB166F4A5, 0x9E9011C0, 0xCFAB26F0, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2757
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470780.183775172780
    s21_decimal check = {{0x3B258AC, 0x5A8095BA, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2758
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470787.451107229420
    s21_decimal check = {{0x12713EEC, 0x5A809C56, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2759
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156808
    s21_decimal check = {{0x4C23E888, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2760
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156800
    s21_decimal check = {{0x4C23E880, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2761
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2762
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2763
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2764
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2765
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2766
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2767
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2768
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2769
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2770
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2771
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2772
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2773
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2774
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2775
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2776
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2777
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2778
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2779
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2780
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2781
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2782
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2783
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2784
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2785
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2786
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2787
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2788
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2789
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2790
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2791
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2792
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2793
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2794
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2795
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2796
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2797
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2798
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2799
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2800
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2801
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2802
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2803
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2804
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2805
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2806
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2807
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2808
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2809
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2810
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2811
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2812
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2813
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2814
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2815
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2816
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2817
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.81744120110
    s21_decimal check = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2818
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.81744120110
    s21_decimal check = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2819
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2820
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2821
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2822
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2823
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2824
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2825
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2826
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2827
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2828
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2829
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2830
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2831
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2832
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2833
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2834
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2835
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2836
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2837
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2838
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2839
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2840
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2841
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2842
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2843
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2844
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2845
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2846
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2847
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2848
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2849
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2850
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2851
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2852
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2853
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2854
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2855
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2856
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2857
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2858
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2859
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2860
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2861
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2862
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2863
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2864
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2865
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x80100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2866
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x100000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2867
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2868
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2869
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2870
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2871
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2872
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2873
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2874
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2875
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2876
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2877
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.81744120110
    s21_decimal check = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2878
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.81744120110
    s21_decimal check = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2879
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2880
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2881
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2882
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2883
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2884
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2885
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2886
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2887
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2888
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2889
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2890
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2891
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2892
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2893
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2894
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2895
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2896
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2897
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2898
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2899
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2900
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2901
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2902
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2903
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2904
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2905
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2906
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2907
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2908
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2909
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2910
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2911
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2912
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2913
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2914
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2915
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2916
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2917
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2918
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2919
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2920
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2921
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2922
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2923
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2924
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2925
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2926
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2927
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2928
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2929
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2930
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2931
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2932
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2933
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2934
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2935
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2936
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2937
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2938
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2939
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2940
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2941
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2942
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2943
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2944
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2945
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2946
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2947
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2948
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2949
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2950
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2951
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2952
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2953
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2954
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2955
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2956
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2957
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2958
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2959
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2960
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2961
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2962
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2963
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2964
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2965
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2966
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2967
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2968
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub2969
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2970
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2971
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2972
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2973
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2974
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2975
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2976
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2977
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2978
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2979
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2980
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2981
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2982
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2983
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2984
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2985
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2986
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2987
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2988
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2989
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2990
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2991
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2992
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2993
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2994
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2995
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2996
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2997
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2998
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub2999
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3000
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3001
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3002
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3003
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3004
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3005
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3006
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3007
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3008
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3009
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3010
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3011
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3012
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3013
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3014
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3015
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3016
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3017
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999998
    s21_decimal check = {{0x87FFFFFE, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3018
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3019
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3020
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3021
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999998999
    s21_decimal check = {{0x1FFFFC17, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3022
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999001
    s21_decimal check = {{0x1FFFFC19, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3023
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3024
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3025
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3026
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3027
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3028
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3029
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3030
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3031
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3032
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3033
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3034
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3035
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3036
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3037
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3038
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3039
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3040
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3041
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3042
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3043
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3044
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3045
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201535999999999999
    s21_decimal check = {{0x897FFFFF, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3046
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201536000000000001
    s21_decimal check = {{0x89800001, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3047
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3048
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3049
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3050
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3051
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3052
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3053
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000009
    s21_decimal check = {{0x9, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3054
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000011
    s21_decimal check = {{0xB, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3055
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3056
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3057
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3058
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3059
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3060
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3061
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3062
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3063
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3064
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3065
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3066
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3067
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3068
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3069
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3070
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3071
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3072
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3073
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3074
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3075
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3076
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3077
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3078
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999998
    s21_decimal check = {{0x87FFFFFE, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3079
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3080
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3081
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999001
    s21_decimal check = {{0x1FFFFC19, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3082
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999998999
    s21_decimal check = {{0x1FFFFC17, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3083
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3084
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3085
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3086
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3087
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3088
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3089
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3090
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3091
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3092
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3093
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3094
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3095
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3096
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3097
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3098
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3099
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3100
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3101
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3102
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3103
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3104
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3105
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201536000000000001
    s21_decimal check = {{0x89800001, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3106
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201535999999999999
    s21_decimal check = {{0x897FFFFF, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3107
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3108
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3109
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3110
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3111
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3112
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3113
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000011
    s21_decimal check = {{0xB, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3114
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000009
    s21_decimal check = {{0x9, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3115
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3116
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3117
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3118
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3119
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3120
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3121
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3122
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3123
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3124
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3125
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3126
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3127
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3128
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3129
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3130
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3131
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3132
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3133
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.9999999999999999999999999990
    s21_decimal check = {{0xFFFFFF6, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3134
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000010
    s21_decimal check = {{0x1000000A, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3135
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.4999999999999999999999999990
    s21_decimal check = {{0x87FFFFF6, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3136
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000010
    s21_decimal check = {{0x8800000A, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3137
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999989
    s21_decimal check = {{0x87FFFFF5, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3138
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000009
    s21_decimal check = {{0x88000009, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3139
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999991
    s21_decimal check = {{0x87FFFFF7, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3140
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000011
    s21_decimal check = {{0x8800000B, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3141
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999998990
    s21_decimal check = {{0x1FFFFC0E, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3142
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999010
    s21_decimal check = {{0x1FFFFC22, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3143
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.9999999999999999999999999991
    s21_decimal check = {{0xFFFFFF7, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3144
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000011
    s21_decimal check = {{0x1000000B, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3145
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3146
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3147
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3148
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3149
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3150
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3151
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3152
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3153
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3154
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3155
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3156
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3157
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3158
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3159
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3160
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3161
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950325
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3162
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3163
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7.999999999999999999999999999
    s21_decimal check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3164
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8.000000000000000000000000001
    s21_decimal check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3165
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201535999999999990
    s21_decimal check = {{0x897FFFF6, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3166
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201536000000000010
    s21_decimal check = {{0x8980000A, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3167
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3168
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3169
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3170
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3171
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000009
    s21_decimal check = {{0x9, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3172
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000011
    s21_decimal check = {{0xB, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3173
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3174
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000020
    s21_decimal check = {{0x14, 0x0, 0x0, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3175
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3176
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3177
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3178
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3179
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3180
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3181
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3182
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3183
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3184
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3185
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3186
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3187
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3188
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3189
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3190
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3191
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3192
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3193
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000010
    s21_decimal check = {{0x1000000A, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3194
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.9999999999999999999999999990
    s21_decimal check = {{0xFFFFFF6, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3195
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000010
    s21_decimal check = {{0x8800000A, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3196
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.4999999999999999999999999990
    s21_decimal check = {{0x87FFFFF6, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3197
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000009
    s21_decimal check = {{0x88000009, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3198
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999989
    s21_decimal check = {{0x87FFFFF5, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3199
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000011
    s21_decimal check = {{0x8800000B, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3200
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999991
    s21_decimal check = {{0x87FFFFF7, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3201
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999010
    s21_decimal check = {{0x1FFFFC22, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3202
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999998990
    s21_decimal check = {{0x1FFFFC0E, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3203
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000011
    s21_decimal check = {{0x1000000B, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3204
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.9999999999999999999999999991
    s21_decimal check = {{0xFFFFFF7, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3205
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3206
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3207
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3208
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3209
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3210
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3211
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3212
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3213
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3214
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3215
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3216
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26409387.504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3217
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3218
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3219
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3220
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3221
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3222
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950325
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3223
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -8.000000000000000000000000001
    s21_decimal check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3224
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7.999999999999999999999999999
    s21_decimal check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3225
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201536000000000010
    s21_decimal check = {{0x8980000A, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3226
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201535999999999990
    s21_decimal check = {{0x897FFFF6, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3227
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3228
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3229
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3230
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3231
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000011
    s21_decimal check = {{0xB, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3232
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000009
    s21_decimal check = {{0x9, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3233
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000020
    s21_decimal check = {{0x14, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3234
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3235
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3236
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3237
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3238
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3239
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3240
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3241
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543949689
    s21_decimal check = {{0xFFFFFD79, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3242
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3243
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543949688
    s21_decimal check = {{0xFFFFFD78, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3244
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3245
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354394386.7
    s21_decimal check = {{0xFFFFE6BB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3246
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395679
    s21_decimal check = {{0x99999C1F, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3247
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354394387.2
    s21_decimal check = {{0xFFFFE6C0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3248
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395680
    s21_decimal check = {{0x99999C20, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3249
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354394387.7
    s21_decimal check = {{0xFFFFE6C5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3250
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395680
    s21_decimal check = {{0x99999C20, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3251
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354394388.7
    s21_decimal check = {{0xFFFFE6CF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3252
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395681
    s21_decimal check = {{0x99999C21, 0x99999999, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3253
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 645.33673839575124685661598885
    s21_decimal check = {{0xCEC6F4A5, 0xC45496CC, 0xD08500FC, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3254
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 647.33673839575124685661598885
    s21_decimal check = {{0x96C6F4A5, 0x7DE4B072, 0xD12A70A2, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3255
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3256
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3257
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3258
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3259
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3260
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3261
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 644.33673839575124685661598895
    s21_decimal check = {{0xEAC6F4AF, 0xE78C89F9, 0xD0324929, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3262
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 648.33673839575124685661598875
    s21_decimal check = {{0x7AC6F49B, 0x5AACBD45, 0xD17D2875, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3263
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 645.33673839575124685661598885
    s21_decimal check = {{0xCEC6F4A5, 0xC45496CC, 0xD08500FC, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3264
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 647.33673839575124685661598885
    s21_decimal check = {{0x96C6F4A5, 0x7DE4B072, 0xD12A70A2, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3265
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847982799
    s21_decimal check = {{0x555552CF, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3266
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847984091
    s21_decimal check = {{0x555557DB, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3267
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043121359
    s21_decimal check = {{0x555552CF, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3268
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122651
    s21_decimal check = {{0x555557DB, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3269
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236516558.6632616042
    s21_decimal check = {{0xAFEF286A, 0x55554F73, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3270
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517851.3367383958
    s21_decimal check = {{0x6D5E3F96, 0x55555B35, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3271
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804860793.6632616042
    s21_decimal check = {{0x2148746A, 0x8EA6AE1F, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3272
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804862086.3367383958
    s21_decimal check = {{0xDEB78B96, 0x8EA6B9E0, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3273
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655118.6632616042487531434
    s21_decimal check = {{0x90B6C7AA, 0xF3CD3D01, 0x2E425FA2, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3274
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431656411.3367383957512468566
    s21_decimal check = {{0x13593856, 0xB648ABA6, 0x2E42625F, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3275
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26408741.168016383446601126829
    s21_decimal check = {{0xD19B53AD, 0x5939B933, 0x5554CC77, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3276
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26410033.841493174949094840061
    s21_decimal check = {{0xD90F56FD, 0x5170F176, 0x5555DE33, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3277
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26408741.161867468756796265389
    s21_decimal check = {{0xD19B53AD, 0x3E463DE, 0x5554CC77, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3278
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26410033.835344260259289978621
    s21_decimal check = {{0xD90F56FD, 0xFC1B9C21, 0x5555DE32, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3279
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26408740.663261604248753143384
    s21_decimal check = {{0xD125FE58, 0xFC5883D3, 0x5554CC5B, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3280
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26410033.336738395751246856616
    s21_decimal check = {{0xD89A01A8, 0xF48FBC16, 0x5555DE17, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3281
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 638.41392214432481309726159382
    s21_decimal check = {{0x89D13216, 0xAB5A1443, 0xCE485CA6, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3282
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 654.25955464717768061597038388
    s21_decimal check = {{0xDBBCB734, 0x96DF32FB, 0xD36714F8, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3283
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 638.33673839575124685661598885
    s21_decimal check = {{0x92C6F4A5, 0xBADC3D08, 0xCE41FA38, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3284
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 654.33673839575124685661598885
    s21_decimal check = {{0xD2C6F4A5, 0x875D0A36, 0xD36D7766, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3285
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 642.70307236743109325661598885
    s21_decimal check = {{0xB166F4A5, 0x9E9011C0, 0xCFAB26F0, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3286
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 649.97040442407140045661598885
    s21_decimal check = {{0xB426F4A5, 0xA3A9357E, 0xD2044AAE, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3287
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3288
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3289
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3290
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3291
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3292
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3293
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3294
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3295
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 0.00000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3296
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 1292.6734767915024937132319777
    s21_decimal check = {{0x23C16421, 0xED05BA53, 0x29C4BE8F, 0x190000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3297
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143471430.154179596851
    s21_decimal check = {{0xAC45233, 0x5A82E4DF, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3298
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470137.480702805349
    s21_decimal check = {{0xB5F4565, 0x5A7E4D31, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3299
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156158
    s21_decimal check = {{0x4C23E5FE, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3300
    // 646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976157450
    s21_decimal check = {{0x4C23EB0A, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3301
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3302
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543949689
    s21_decimal check = {{0xFFFFFD79, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3303
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3304
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543949688
    s21_decimal check = {{0xFFFFFD78, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3305
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395679
    s21_decimal check = {{0x99999C1F, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3306
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354394386.7
    s21_decimal check = {{0xFFFFE6BB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3307
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395680
    s21_decimal check = {{0x99999C20, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3308
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354394387.2
    s21_decimal check = {{0xFFFFE6C0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3309
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395680
    s21_decimal check = {{0x99999C20, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3310
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354394387.7
    s21_decimal check = {{0xFFFFE6C5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3311
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395681
    s21_decimal check = {{0x99999C21, 0x99999999, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3312
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354394388.7
    s21_decimal check = {{0xFFFFE6CF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3313
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -647.33673839575124685661598885
    s21_decimal check = {{0x96C6F4A5, 0x7DE4B072, 0xD12A70A2, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3314
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -645.33673839575124685661598885
    s21_decimal check = {{0xCEC6F4A5, 0xC45496CC, 0xD08500FC, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3315
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3316
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3317
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3318
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3319
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -646.83673839575124685661598885
    s21_decimal check = {{0x24C6F4A5, 0xF80AA09, 0xD10114B9, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3320
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -645.83673839575124685661598885
    s21_decimal check = {{0x40C6F4A5, 0x32B89D36, 0xD0AE5CE6, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3321
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -648.33673839575124685661598875
    s21_decimal check = {{0x7AC6F49B, 0x5AACBD45, 0xD17D2875, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3322
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -644.33673839575124685661598895
    s21_decimal check = {{0xEAC6F4AF, 0xE78C89F9, 0xD0324929, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3323
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -647.33673839575124685661598885
    s21_decimal check = {{0x96C6F4A5, 0x7DE4B072, 0xD12A70A2, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3324
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -645.33673839575124685661598885
    s21_decimal check = {{0xCEC6F4A5, 0xC45496CC, 0xD08500FC, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3325
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847984091
    s21_decimal check = {{0x555557DB, 0x55555555, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3326
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847982799
    s21_decimal check = {{0x555552CF, 0x55555555, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3327
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122651
    s21_decimal check = {{0x555557DB, 0x0, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3328
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043121359
    s21_decimal check = {{0x555552CF, 0x0, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3329
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517851.3367383958
    s21_decimal check = {{0x6D5E3F96, 0x55555B35, 0xC6AEA155, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3330
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236516558.6632616042
    s21_decimal check = {{0xAFEF286A, 0x55554F73, 0xC6AEA155, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3331
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804862086.3367383958
    s21_decimal check = {{0xDEB78B96, 0x8EA6B9E0, 0xC6AEA154, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3332
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804860793.6632616042
    s21_decimal check = {{0x2148746A, 0x8EA6AE1F, 0xC6AEA154, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3333
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431656411.3367383957512468566
    s21_decimal check = {{0x13593856, 0xB648ABA6, 0x2E42625F, 0x80130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3334
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655118.6632616042487531434
    s21_decimal check = {{0x90B6C7AA, 0xF3CD3D01, 0x2E425FA2, 0x130000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3335
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -26410033.841493174949094840061
    s21_decimal check = {{0xD90F56FD, 0x5170F176, 0x5555DE33, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3336
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 26408741.168016383446601126829
    s21_decimal check = {{0xD19B53AD, 0x5939B933, 0x5554CC77, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3337
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26410033.835344260259289978621
    s21_decimal check = {{0xD90F56FD, 0xFC1B9C21, 0x5555DE32, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3338
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26408741.161867468756796265389
    s21_decimal check = {{0xD19B53AD, 0x3E463DE, 0x5554CC77, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3339
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26410033.336738395751246856616
    s21_decimal check = {{0xD89A01A8, 0xF48FBC16, 0x5555DE17, 0x80150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3340
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26408740.663261604248753143384
    s21_decimal check = {{0xD125FE58, 0xFC5883D3, 0x5554CC5B, 0x150000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3341
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -654.25955464717768061597038388
    s21_decimal check = {{0xDBBCB734, 0x96DF32FB, 0xD36714F8, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3342
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -638.41392214432481309726159382
    s21_decimal check = {{0x89D13216, 0xAB5A1443, 0xCE485CA6, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3343
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -654.33673839575124685661598885
    s21_decimal check = {{0xD2C6F4A5, 0x875D0A36, 0xD36D7766, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3344
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -638.33673839575124685661598885
    s21_decimal check = {{0x92C6F4A5, 0xBADC3D08, 0xCE41FA38, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3345
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -649.97040442407140045661598885
    s21_decimal check = {{0xB426F4A5, 0xA3A9357E, 0xD2044AAE, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3346
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -642.70307236743109325661598885
    s21_decimal check = {{0xB166F4A5, 0x9E9011C0, 0xCFAB26F0, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3347
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3348
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3349
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3350
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3351
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3352
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3353
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3354
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -646.33673839575124685661598885
    s21_decimal check = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3355
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -1292.6734767915024937132319777
    s21_decimal check = {{0x23C16421, 0xED05BA53, 0x29C4BE8F, 0x80190000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3356
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -0.00000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3357
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470137.480702805349
    s21_decimal check = {{0xB5F4565, 0x5A7E4D31, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3358
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143471430.154179596851
    s21_decimal check = {{0xAC45233, 0x5A82E4DF, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3359
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976157450
    s21_decimal check = {{0x4C23EB0A, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3360
    // -646.33673839575124685661598885
    s21_decimal decimal1 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156158
    s21_decimal check = {{0x4C23E5FE, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3361
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3362
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514240090656400479551
    s21_decimal check = {{0x4AC153F, 0xFFA9DB8A, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3363
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3364
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514240090656400479550
    s21_decimal check = {{0x4AC153E, 0xFFA9DB8A, 0xFFFFFFFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3365
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251450680696497865817
    s21_decimal check = {{0x94ED8459, 0x99EFBE0F, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3366
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251402186822210924249.2
    s21_decimal check = {{0x2EB8D47C, 0xFCA29364, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3367
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251450680696497865817
    s21_decimal check = {{0x94ED8459, 0x99EFBE0F, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3368
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251402186822210924249.7
    s21_decimal check = {{0x2EB8D481, 0xFCA29364, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3369
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251450680696497865818
    s21_decimal check = {{0x94ED845A, 0x99EFBE0F, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3370
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251402186822210924250.2
    s21_decimal check = {{0x2EB8D486, 0xFCA29364, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3371
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251450680696497865819
    s21_decimal check = {{0x94ED845B, 0x99EFBE0F, 0x19999999, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3372
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251402186822210924251.2
    s21_decimal check = {{0x2EB8D490, 0xFCA29364, 0xFFFFFFFF, 0x10000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3373
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -24246937143470784.81744120110
    s21_decimal check = {{0x4992492E, 0xA2A675CB, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3374
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -24246937143470782.81744120110
    s21_decimal check = {{0xB8A4792E, 0xA2A6759C, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3375
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -24246937143470784.31744120110
    s21_decimal check = {{0xA556D52E, 0xA2A675BF, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3376
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -24246937143470783.31744120110
    s21_decimal check = {{0x5CDFED2E, 0xA2A675A8, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3377
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -24246937143470784.317441201100
    s21_decimal check = {{0x756453CC, 0x5A80997C, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3378
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -24246937143470783.317441201100
    s21_decimal check = {{0xA0BF43CC, 0x5A809893, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3379
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -24246937143470784.317441201100
    s21_decimal check = {{0x756453CC, 0x5A80997C, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3380
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -24246937143470783.317441201100
    s21_decimal check = {{0xA0BF43CC, 0x5A809893, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3381
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -24246937143470785.817441201100
    s21_decimal check = {{0xB45BEBCC, 0x5A809AD9, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3382
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -24246937143470781.817441201100
    s21_decimal check = {{0x61C7ABCC, 0x5A809736, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3383
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -24246937143470784.817441201100
    s21_decimal check = {{0xDFB6DBCC, 0x5A8099F0, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3384
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -24246937143470782.817441201100
    s21_decimal check = {{0x366CBBCC, 0x5A80981F, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3385
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504779026134991454229
    s21_decimal check = {{0x50A94015, 0x55AB79CB, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3386
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504730532260704512661
    s21_decimal check = {{0x5A016A95, 0x54FF30DF, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3387
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498630111445186592789
    s21_decimal check = {{0x50A94015, 0x562476, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3388
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498581617570899651221
    s21_decimal check = {{0x5A016A95, 0xFFA9DB8A, 0x55555554, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3389
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6173161628379987988.8174412011
    s21_decimal check = {{0xF52970EB, 0x4BFF944C, 0xC7773238, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3390
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6124667754093046421.1825587989
    s21_decimal check = {{0x2823F715, 0x5EAB165C, 0xC5E61072, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3391
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6173161626948332223.8174412011
    s21_decimal check = {{0x6682BCEB, 0x8550F2F8, 0xC7773237, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3392
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6124667752661390656.1825587989
    s21_decimal check = {{0x997D4315, 0x97FC7507, 0xC5E61071, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3393
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -24246938575126548.81744120110
    s21_decimal check = {{0x939E692E, 0x6578C301, 0x7D5A8E5, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3394
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -24246935711815018.81744120110
    s21_decimal check = {{0x6E98592E, 0xDFD42866, 0x7D5A8D5, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3395
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -24246937169880171.322195980298
    s21_decimal check = {{0x479E300A, 0xC901970B, 0x4E5898A9, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3396
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -24246937117061396.312686421902
    s21_decimal check = {{0xCE85678E, 0xEBFF9B04, 0x4E5898A6, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3397
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -24246937169880171.316047065608
    s21_decimal check = {{0xD91D3208, 0xC9019709, 0x4E5898A9, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3398
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -24246937117061396.318835336592
    s21_decimal check = {{0x3D066590, 0xEBFF9B06, 0x4E5898A6, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3399
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -24246937169880170.81744120110
    s21_decimal check = {{0x6030592E, 0xC74CF575, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3400
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -24246937117061396.81744120110
    s21_decimal check = {{0xA206692E, 0x7DFFF5F2, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3401
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -24246937143470791.740257452526
    s21_decimal check = {{0xB7B7C1EE, 0x5A80A03C, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3402
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -24246937143470775.894624949674
    s21_decimal check = {{0x5E6BD5AA, 0x5A8091D3, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3403
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -24246937143470791.81744120110
    s21_decimal check = {{0x44D2A12E, 0xA2A6766E, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3404
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -24246937143470775.81744120110
    s21_decimal check = {{0xBD64212E, 0xA2A674F9, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3405
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -24246937143470787.451107229420
    s21_decimal check = {{0x12713EEC, 0x5A809C56, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3406
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -24246937143470780.183775172780
    s21_decimal check = {{0x3B258AC, 0x5A8095BA, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3407
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal check = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3408
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal check = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3409
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3410
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3411
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3412
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3413
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3414
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3415
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -24246937143471430.154179596851
    s21_decimal check = {{0xAC45233, 0x5A82E4DF, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3416
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -24246937143470137.480702805349
    s21_decimal check = {{0xB5F4565, 0x5A7E4D31, 0x4E5898A8, 0x800C0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3417
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -0.00000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3418
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -48493874286941567.63488240220
    s21_decimal check = {{0x236C25C, 0x454CEB68, 0xFAB51BB, 0x800B0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3419
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531793805234119627588
    s21_decimal check = {{0x4777D344, 0x64E294A2, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3420
    // -24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531745311359832686020
    s21_decimal check = {{0x50CFFDC4, 0x64364BB6, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3421
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514240090656400479551
    s21_decimal check = {{0x4AC153F, 0xFFA9DB8A, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3422
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3423
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514240090656400479550
    s21_decimal check = {{0x4AC153E, 0xFFA9DB8A, 0xFFFFFFFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3424
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3425
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251402186822210924249.2
    s21_decimal check = {{0x2EB8D47C, 0xFCA29364, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3426
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251450680696497865817
    s21_decimal check = {{0x94ED8459, 0x99EFBE0F, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3427
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251402186822210924249.7
    s21_decimal check = {{0x2EB8D481, 0xFCA29364, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3428
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251450680696497865817
    s21_decimal check = {{0x94ED8459, 0x99EFBE0F, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3429
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251402186822210924250.2
    s21_decimal check = {{0x2EB8D486, 0xFCA29364, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3430
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251450680696497865818
    s21_decimal check = {{0x94ED845A, 0x99EFBE0F, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3431
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251402186822210924251.2
    s21_decimal check = {{0x2EB8D490, 0xFCA29364, 0xFFFFFFFF, 0x80010000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3432
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251450680696497865819
    s21_decimal check = {{0x94ED845B, 0x99EFBE0F, 0x19999999, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3433
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 24246937143470782.81744120110
    s21_decimal check = {{0xB8A4792E, 0xA2A6759C, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3434
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 24246937143470784.81744120110
    s21_decimal check = {{0x4992492E, 0xA2A675CB, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3435
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 24246937143470783.31744120110
    s21_decimal check = {{0x5CDFED2E, 0xA2A675A8, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3436
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 24246937143470784.31744120110
    s21_decimal check = {{0xA556D52E, 0xA2A675BF, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3437
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 24246937143470783.317441201100
    s21_decimal check = {{0xA0BF43CC, 0x5A809893, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3438
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 24246937143470784.317441201100
    s21_decimal check = {{0x756453CC, 0x5A80997C, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3439
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 24246937143470783.317441201100
    s21_decimal check = {{0xA0BF43CC, 0x5A809893, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3440
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 24246937143470784.317441201100
    s21_decimal check = {{0x756453CC, 0x5A80997C, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3441
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 24246937143470781.817441201100
    s21_decimal check = {{0x61C7ABCC, 0x5A809736, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3442
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 24246937143470785.817441201100
    s21_decimal check = {{0xB45BEBCC, 0x5A809AD9, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3443
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 24246937143470782.817441201100
    s21_decimal check = {{0x366CBBCC, 0x5A80981F, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3444
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 24246937143470784.817441201100
    s21_decimal check = {{0xDFB6DBCC, 0x5A8099F0, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3445
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504730532260704512661
    s21_decimal check = {{0x5A016A95, 0x54FF30DF, 0x55555555, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3446
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504779026134991454229
    s21_decimal check = {{0x50A94015, 0x55AB79CB, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3447
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498581617570899651221
    s21_decimal check = {{0x5A016A95, 0xFFA9DB8A, 0x55555554, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3448
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498630111445186592789
    s21_decimal check = {{0x50A94015, 0x562476, 0x55555555, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3449
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6124667754093046421.1825587989
    s21_decimal check = {{0x2823F715, 0x5EAB165C, 0xC5E61072, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3450
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6173161628379987988.8174412011
    s21_decimal check = {{0xF52970EB, 0x4BFF944C, 0xC7773238, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3451
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6124667752661390656.1825587989
    s21_decimal check = {{0x997D4315, 0x97FC7507, 0xC5E61071, 0x800A0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3452
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6173161626948332223.8174412011
    s21_decimal check = {{0x6682BCEB, 0x8550F2F8, 0xC7773237, 0xA0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3453
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 24246935711815018.81744120110
    s21_decimal check = {{0x6E98592E, 0xDFD42866, 0x7D5A8D5, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3454
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 24246938575126548.81744120110
    s21_decimal check = {{0x939E692E, 0x6578C301, 0x7D5A8E5, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3455
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 24246937117061396.312686421902
    s21_decimal check = {{0xCE85678E, 0xEBFF9B04, 0x4E5898A6, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3456
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 24246937169880171.322195980298
    s21_decimal check = {{0x479E300A, 0xC901970B, 0x4E5898A9, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3457
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 24246937117061396.318835336592
    s21_decimal check = {{0x3D066590, 0xEBFF9B06, 0x4E5898A6, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3458
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 24246937169880171.316047065608
    s21_decimal check = {{0xD91D3208, 0xC9019709, 0x4E5898A9, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3459
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 24246937117061396.81744120110
    s21_decimal check = {{0xA206692E, 0x7DFFF5F2, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3460
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 24246937169880170.81744120110
    s21_decimal check = {{0x6030592E, 0xC74CF575, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3461
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 24246937143470775.894624949674
    s21_decimal check = {{0x5E6BD5AA, 0x5A8091D3, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3462
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 24246937143470791.740257452526
    s21_decimal check = {{0xB7B7C1EE, 0x5A80A03C, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3463
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 24246937143470775.81744120110
    s21_decimal check = {{0xBD64212E, 0xA2A674F9, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3464
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 24246937143470791.81744120110
    s21_decimal check = {{0x44D2A12E, 0xA2A6766E, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3465
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 24246937143470780.183775172780
    s21_decimal check = {{0x3B258AC, 0x5A8095BA, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3466
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 24246937143470787.451107229420
    s21_decimal check = {{0x12713EEC, 0x5A809C56, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3467
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal check = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3468
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal check = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3469
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3470
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3471
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3472
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3473
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3474
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 24246937143470783.817441201100
    s21_decimal check = {{0xB11CBCC, 0x5A809908, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3475
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 24246937143470137.480702805349
    s21_decimal check = {{0xB5F4565, 0x5A7E4D31, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3476
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 24246937143471430.154179596851
    s21_decimal check = {{0xAC45233, 0x5A82E4DF, 0x4E5898A8, 0xC0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3477
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 48493874286941567.63488240220
    s21_decimal check = {{0x236C25C, 0x454CEB68, 0xFAB51BB, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3478
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 0.00000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0xB0000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3479
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531745311359832686020
    s21_decimal check = {{0x50CFFDC4, 0x64364BB6, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3480
    // 24246937143470783.81744120110
    s21_decimal decimal1 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531793805234119627588
    s21_decimal check = {{0x4777D344, 0x64E294A2, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3481
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -18994429982494779296567793531
    s21_decimal check = {{0xB3DC177B, 0x9B738FD3, 0x3D5FD300, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3482
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3483
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -18994429982494779296567793530
    s21_decimal check = {{0xB3DC177A, 0x9B738FD3, 0x3D5FD300, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3484
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3485
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 52310916280343124537621761771
    s21_decimal check = {{0xB28A4EEB, 0xCAF2D692, 0xA9069365, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3486
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 68156548783195992056330551837
    s21_decimal check = {{0xE5BD821D, 0xFE2609C5, 0xDC39C698, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3487
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 52310916280343124537621761770
    s21_decimal check = {{0xB28A4EEA, 0xCAF2D692, 0xA9069365, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3488
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 68156548783195992056330551838
    s21_decimal check = {{0xE5BD821E, 0xFE2609C5, 0xDC39C698, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3489
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 52310916280343124537621761770
    s21_decimal check = {{0xB28A4EEA, 0xCAF2D692, 0xA9069365, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3490
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 68156548783195992056330551838
    s21_decimal check = {{0xE5BD821E, 0xFE2609C5, 0xDC39C698, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3491
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 52310916280343124537621761769
    s21_decimal check = {{0xB28A4EE9, 0xCAF2D692, 0xA9069365, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3492
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 68156548783195992056330551839
    s21_decimal check = {{0xE5BD821F, 0xFE2609C5, 0xDC39C698, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3493
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3494
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3495
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3496
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3497
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3498
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3499
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3500
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3501
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 60233732531769558296976156802
    s21_decimal check = {{0x4C23E882, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3502
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 60233732531769558296976156806
    s21_decimal check = {{0x4C23E886, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3503
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3504
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3505
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 33824345027014779099128173359
    s21_decimal check = {{0xF6CE932F, 0xF371AD6, 0x6D4AD7AA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3506
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3507
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 33824345033163693788933034799
    s21_decimal check = {{0xF6CE932F, 0x648C702B, 0x6D4AD7AA, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3508
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3509
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 60233732525620643605739639599
    s21_decimal check = {{0xF6CE932F, 0xF371AD6, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3510
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 60233732537918472988212674009
    s21_decimal check = {{0xA1793DD9, 0xB9E1C581, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3511
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 60233732525620643607171295364
    s21_decimal check = {{0x4C23E884, 0xF371AD7, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3512
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 60233732537918472986781018244
    s21_decimal check = {{0x4C23E884, 0xB9E1C581, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3513
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 60233732531769558295544501039
    s21_decimal check = {{0xF6CE932F, 0x648C702B, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3514
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 60233732531769558298407812569
    s21_decimal check = {{0xA1793DD9, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3515
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // 60233732531769558296949747416
    s21_decimal check = {{0x4A90EED8, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3516
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // 60233732531769558297002566192
    s21_decimal check = {{0x4DB6E230, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3517
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 60233732531769558296949747417
    s21_decimal check = {{0x4A90EED9, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3518
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 60233732531769558297002566191
    s21_decimal check = {{0x4DB6E22F, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3519
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 60233732531769558296949747417
    s21_decimal check = {{0x4A90EED9, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3520
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 60233732531769558297002566191
    s21_decimal check = {{0x4DB6E22F, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3521
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 60233732531769558296976156796
    s21_decimal check = {{0x4C23E87C, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3522
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 60233732531769558296976156812
    s21_decimal check = {{0x4C23E88C, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3523
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 60233732531769558296976156796
    s21_decimal check = {{0x4C23E87C, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3524
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 60233732531769558296976156812
    s21_decimal check = {{0x4C23E88C, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3525
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 60233732531769558296976156800
    s21_decimal check = {{0x4C23E880, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3526
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 60233732531769558296976156808
    s21_decimal check = {{0x4C23E888, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3527
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3528
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3529
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3530
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3531
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3532
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3533
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3534
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3535
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // 60233732531769558296976156158
    s21_decimal check = {{0x4C23E5FE, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3536
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // 60233732531769558296976157450
    s21_decimal check = {{0x4C23EB0A, 0x648C702C, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3537
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // 60233732531793805234119627588
    s21_decimal check = {{0x4777D344, 0x64E294A2, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3538
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // 60233732531745311359832686020
    s21_decimal check = {{0x50CFFDC4, 0x64364BB6, 0xC2A02CFF, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3539
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3540
    // 60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3541
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3542
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 18994429982494779296567793531
    s21_decimal check = {{0xB3DC177B, 0x9B738FD3, 0x3D5FD300, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3543
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3544
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 18994429982494779296567793530
    s21_decimal check = {{0xB3DC177A, 0x9B738FD3, 0x3D5FD300, 0x0}};

    test_sub(decimal1, decimal2, check);

#test test_sub3545
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -68156548783195992056330551837
    s21_decimal check = {{0xE5BD821D, 0xFE2609C5, 0xDC39C698, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3546
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -52310916280343124537621761771
    s21_decimal check = {{0xB28A4EEB, 0xCAF2D692, 0xA9069365, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3547
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -68156548783195992056330551838
    s21_decimal check = {{0xE5BD821E, 0xFE2609C5, 0xDC39C698, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3548
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -52310916280343124537621761770
    s21_decimal check = {{0xB28A4EEA, 0xCAF2D692, 0xA9069365, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3549
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -68156548783195992056330551838
    s21_decimal check = {{0xE5BD821E, 0xFE2609C5, 0xDC39C698, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3550
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -52310916280343124537621761770
    s21_decimal check = {{0xB28A4EEA, 0xCAF2D692, 0xA9069365, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3551
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -68156548783195992056330551839
    s21_decimal check = {{0xE5BD821F, 0xFE2609C5, 0xDC39C698, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3552
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -52310916280343124537621761769
    s21_decimal check = {{0xB28A4EE9, 0xCAF2D692, 0xA9069365, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3553
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3554
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3555
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3556
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3557
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3558
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3559
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3560
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3561
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -60233732531769558296976156806
    s21_decimal check = {{0x4C23E886, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3562
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -60233732531769558296976156802
    s21_decimal check = {{0x4C23E882, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3563
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -60233732531769558296976156805
    s21_decimal check = {{0x4C23E885, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3564
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -60233732531769558296976156803
    s21_decimal check = {{0x4C23E883, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3565
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3566
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -33824345027014779099128173359
    s21_decimal check = {{0xF6CE932F, 0xF371AD6, 0x6D4AD7AA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3567
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3568
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -33824345033163693788933034799
    s21_decimal check = {{0xF6CE932F, 0x648C702B, 0x6D4AD7AA, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3569
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -60233732537918472988212674009
    s21_decimal check = {{0xA1793DD9, 0xB9E1C581, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3570
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -60233732525620643605739639599
    s21_decimal check = {{0xF6CE932F, 0xF371AD6, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3571
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -60233732537918472986781018244
    s21_decimal check = {{0x4C23E884, 0xB9E1C581, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3572
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -60233732525620643607171295364
    s21_decimal check = {{0x4C23E884, 0xF371AD7, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3573
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -60233732531769558298407812569
    s21_decimal check = {{0xA1793DD9, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3574
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -60233732531769558295544501039
    s21_decimal check = {{0xF6CE932F, 0x648C702B, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3575
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x150000}};
    // -60233732531769558297002566192
    s21_decimal check = {{0x4DB6E230, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3576
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -26409387.504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80150000}};
    // -60233732531769558296949747416
    s21_decimal check = {{0x4A90EED8, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3577
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -60233732531769558297002566191
    s21_decimal check = {{0x4DB6E22F, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3578
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -60233732531769558296949747417
    s21_decimal check = {{0x4A90EED9, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3579
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -60233732531769558297002566191
    s21_decimal check = {{0x4DB6E22F, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3580
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -60233732531769558296949747417
    s21_decimal check = {{0x4A90EED9, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3581
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -60233732531769558296976156812
    s21_decimal check = {{0x4C23E88C, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3582
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -60233732531769558296976156796
    s21_decimal check = {{0x4C23E87C, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3583
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -60233732531769558296976156812
    s21_decimal check = {{0x4C23E88C, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3584
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -60233732531769558296976156796
    s21_decimal check = {{0x4C23E87C, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3585
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -60233732531769558296976156808
    s21_decimal check = {{0x4C23E888, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3586
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -60233732531769558296976156800
    s21_decimal check = {{0x4C23E880, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3587
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3588
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3589
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3590
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3591
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3592
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3593
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3594
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -60233732531769558296976156804
    s21_decimal check = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3595
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x1A0000}};
    // -60233732531769558296976157450
    s21_decimal check = {{0x4C23EB0A, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3596
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -646.33673839575124685661598885
    s21_decimal decimal2 = {{0xB2C6F4A5, 0xA11CA39F, 0xD0D7B8CF, 0x801A0000}};
    // -60233732531769558296976156158
    s21_decimal check = {{0x4C23E5FE, 0x648C702C, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3597
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0x800B0000}};
    // -60233732531745311359832686020
    s21_decimal check = {{0x50CFFDC4, 0x64364BB6, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3598
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 24246937143470783.81744120110
    s21_decimal decimal2 = {{0x11B612E, 0xA2A675B4, 0x7D5A8DD, 0xB0000}};
    // -60233732531793805234119627588
    s21_decimal check = {{0x4777D344, 0x64E294A2, 0xC2A02CFF, 0x80000000}};

    test_sub(decimal1, decimal2, check);

#test test_sub3599
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // 60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x0}};
    // overflow
    int check = IS_TOO_SMALL;

    test_sub_fail(decimal1, decimal2, check);

#test test_sub3600
    // -60233732531769558296976156804
    s21_decimal decimal1 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -60233732531769558296976156804
    s21_decimal decimal2 = {{0x4C23E884, 0x648C702C, 0xC2A02CFF, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_sub(decimal1, decimal2, check);


