#test nasa_test_add23
    printf("Testing NASA s21_add...\n");
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test nasa_test_add22
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test nasa_test_add89
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -79228162508115422902307433130
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test nasa_test_add17
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);



#test nasa_test_add1661
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
NASA test
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

#test test_add1
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add4
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add5
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add6
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add7
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add8
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add9
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add10
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add11
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add12
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add13
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add14
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add15
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add16
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add17
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add18
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add19
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add20
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add21
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add22
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add23
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add24
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add25
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add26
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add27
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add28
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 52818775015658473085500828330
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add29
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add30
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 79228162508115422902307433130
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add31
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add32
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 79228162508115422903739088895
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add33
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add34
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 79228162514264337592112294570
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add35
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add36
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add37
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add38
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add39
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add40
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add41
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add42
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add43
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add44
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add45
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add46
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 79228162514264337593543950331
    s21_decimal check = {{0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add47
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add48
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add49
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add50
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add51
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add52
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add53
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add54
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add55
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 79228106389283212384222373411
    s21_decimal check = {{0x3AC4E623, 0x756BD584, 0xFFFFF41D, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add56
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add57
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 79228162514264337543839948913
    s21_decimal check = {{0x6D692071, 0xFFFFFFF4, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add58
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add59
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 79228162514264337592894706333
    s21_decimal check = {{0xD94D529D, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add60
    // 79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add61
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add62
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add63
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add64
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add65
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add66
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add67
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add68
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add69
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add70
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add71
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add72
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add73
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add74
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add75
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add76
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add77
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add78
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add79
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add80
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add81
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add82
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add83
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add84
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add85
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add86
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add87
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -52818775015658473085500828330
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add88
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add89
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -79228162508115422902307433130
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add90
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add91
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -79228162508115422903739088895
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add92
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add93
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -79228162514264337592112294570
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add94
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add95
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add96
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add97
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add98
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add99
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add100
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add101
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add102
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add103
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add104
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add105
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -79228162514264337593543950331
    s21_decimal check = {{0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add106
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add107
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add108
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add109
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add110
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add111
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add112
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add113
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add114
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add115
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add116
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -79228106389283212384222373411
    s21_decimal check = {{0x3AC4E623, 0x756BD584, 0xFFFFF41D, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add117
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add118
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -79228162514264337543839948913
    s21_decimal check = {{0x6D692071, 0xFFFFFFF4, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add119
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add120
    // -79228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -79228162514264337592894706333
    s21_decimal check = {{0xD94D529D, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add121
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add122
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add123
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add124
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add125
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add126
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add127
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add128
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add129
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add130
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add131
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add132
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 71305346262837903834189555299
    s21_decimal check = {{0x66666663, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add133
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add134
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add135
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add136
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add137
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add138
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add139
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add140
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add141
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add142
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 79228162514264337593543950332
    s21_decimal check = {{0xFFFFFFFC, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add143
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add144
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add145
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add146
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 52818775009509558395695966889
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add147
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add148
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 52818775015658473085500828329
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add149
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add150
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 79228162508115422902307433129
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add151
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add152
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 79228162508115422903739088894
    s21_decimal check = {{0xFFFFFFFE, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add153
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add154
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 79228162514264337592112294569
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add155
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add156
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 79228162514264337593517540946
    s21_decimal check = {{0xFE6D0652, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add157
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add158
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add159
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add160
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add161
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add162
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add163
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add164
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add165
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add166
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 79228162514264337593543950330
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add167
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add168
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add169
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add170
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add171
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add172
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add173
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add174
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add175
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 79228106389283212384222373410
    s21_decimal check = {{0x3AC4E622, 0x756BD584, 0xFFFFF41D, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add176
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add177
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 79228162514264337543839948912
    s21_decimal check = {{0x6D692070, 0xFFFFFFF4, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add178
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add179
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 79228162514264337592894706332
    s21_decimal check = {{0xD94D529C, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add180
    // 79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add181
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add182
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add183
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add184
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add185
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add186
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add187
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add188
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add189
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add190
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add191
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -71305346262837903834189555299
    s21_decimal check = {{0x66666663, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add192
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add193
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add194
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add195
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add196
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add197
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add198
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add199
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add200
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add201
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -79228162514264337593543950332
    s21_decimal check = {{0xFFFFFFFC, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add202
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add203
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add204
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add205
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -52818775009509558395695966889
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add206
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add207
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -52818775015658473085500828329
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add208
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add209
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -79228162508115422902307433129
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add210
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add211
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -79228162508115422903739088894
    s21_decimal check = {{0xFFFFFFFE, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add212
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add213
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -79228162514264337592112294569
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add214
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add215
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -79228162514264337593517540946
    s21_decimal check = {{0xFE6D0652, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add216
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add217
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add218
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add219
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add220
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add221
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add222
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add223
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add224
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add225
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -79228162514264337593543950330
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add226
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add227
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add228
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add229
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add230
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add231
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add232
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add233
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add234
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add235
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add236
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -79228106389283212384222373410
    s21_decimal check = {{0x3AC4E622, 0x756BD584, 0xFFFFF41D, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add237
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add238
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -79228162514264337543839948912
    s21_decimal check = {{0x6D692070, 0xFFFFFFF4, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add239
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add240
    // -79228162514264337593543950334
    s21_decimal decimal1 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -79228162514264337592894706332
    s21_decimal check = {{0xD94D529C, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add241
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add242
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add243
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add244
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add245
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add246
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add247
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add248
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add249
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add250
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add251
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add252
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add253
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add254
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395032
    s21_decimal check = {{0x99999998, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add255
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add256
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add257
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add258
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add259
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add260
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add261
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add262
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395031.0
    s21_decimal check = {{0xFFFFFFE6, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add263
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add264
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add265
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add266
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add267
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add268
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add269
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add270
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816245277519068117877828
    s21_decimal check = {{0x44444444, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add271
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816257575348449159256473
    s21_decimal check = {{0x99999999, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add272
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816245277519069549533593
    s21_decimal check = {{0x99999999, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add273
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add274
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433757922739268
    s21_decimal check = {{0x44444444, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add275
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add276
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 7922816251426433759327985645.3
    s21_decimal check = {{0xF0423F45, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add277
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add278
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add279
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add280
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759327985646
    s21_decimal check = {{0x98069FEE, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add281
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add282
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395025.1
    s21_decimal check = {{0xFFFFFFAB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add283
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add284
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395025
    s21_decimal check = {{0x99999991, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add285
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add286
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395029.4
    s21_decimal check = {{0xFFFFFFD6, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add287
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add288
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add289
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add290
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add291
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add292
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add293
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add294
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add295
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 7922760126445308550032818109.0
    s21_decimal check = {{0x4BB0FD62, 0x9636572A, 0xFFFF8926, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add296
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 7922872376407558968675971957
    s21_decimal check = {{0x5ED4B375, 0x242DC415, 0x1999A57C, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add297
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 7922816251426433709650393610.6
    s21_decimal check = {{0x461B446A, 0xFFFFFF8C, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add298
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 7922816251426433809058396455
    s21_decimal check = {{0x2C307927, 0x999999A5, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add299
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 7922816251426433758705151030.8
    s21_decimal check = {{0x7D053A24, 0xFFFFFFFE, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add300
    // 7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 7922816251426433760003639035
    s21_decimal check = {{0xC04C46FB, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add301
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add302
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add303
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add304
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add305
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add306
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add307
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add308
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add309
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add310
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add311
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add312
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add313
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395032
    s21_decimal check = {{0x99999998, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add314
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add315
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add316
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add317
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add318
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add319
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add320
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add321
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395031.0
    s21_decimal check = {{0xFFFFFFE6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add322
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add323
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add324
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add325
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add326
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add327
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add328
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add329
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816245277519068117877828
    s21_decimal check = {{0x44444444, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add330
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add331
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816245277519069549533593
    s21_decimal check = {{0x99999999, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add332
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816257575348449159256473
    s21_decimal check = {{0x99999999, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add333
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433757922739268
    s21_decimal check = {{0x44444444, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add334
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add335
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -7922816251426433759327985645.3
    s21_decimal check = {{0xF0423F45, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add336
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add337
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add338
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add339
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759327985646
    s21_decimal check = {{0x98069FEE, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add340
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add341
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395025.1
    s21_decimal check = {{0xFFFFFFAB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add342
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add343
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395025
    s21_decimal check = {{0x99999991, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add344
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add345
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395029.4
    s21_decimal check = {{0xFFFFFFD6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add346
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add347
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add348
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add349
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add350
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add351
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add352
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add353
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add354
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add355
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -7922872376407558968675971957
    s21_decimal check = {{0x5ED4B375, 0x242DC415, 0x1999A57C, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add356
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -7922760126445308550032818109.0
    s21_decimal check = {{0x4BB0FD62, 0x9636572A, 0xFFFF8926, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add357
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -7922816251426433809058396455
    s21_decimal check = {{0x2C307927, 0x999999A5, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add358
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -7922816251426433709650393610.6
    s21_decimal check = {{0x461B446A, 0xFFFFFF8C, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add359
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -7922816251426433760003639035
    s21_decimal check = {{0xC04C46FB, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add360
    // -7922816251426433759354395033
    s21_decimal decimal1 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -7922816251426433758705151030.8
    s21_decimal check = {{0x7D053A24, 0xFFFFFFFE, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add361
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add362
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add363
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add364
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add365
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add366
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add367
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add368
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add369
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add370
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add371
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add372
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add373
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add374
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add375
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add376
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add377
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add378
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add379
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add380
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add381
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add382
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395031.5
    s21_decimal check = {{0xFFFFFFEB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add383
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add384
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add385
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add386
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add387
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add388
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add389
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add390
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816245277519068117877828.5
    s21_decimal check = {{0xAAAAAAAD, 0xAAAAAAAA, 0xFFFFFFFC, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add391
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add392
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816245277519069549533593.5
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAD, 0xFFFFFFFC, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add393
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add394
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433757922739268.5
    s21_decimal check = {{0xAAAAAAAD, 0xFFFFFFFC, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add395
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add396
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 7922816251426433759327985645.8
    s21_decimal check = {{0xF0423F4A, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add397
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add398
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add399
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add400
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add401
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add402
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395025.6
    s21_decimal check = {{0xFFFFFFB0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add403
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add404
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395025.5
    s21_decimal check = {{0xFFFFFFAF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add405
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add406
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395029.9
    s21_decimal check = {{0xFFFFFFDB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add407
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add408
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add409
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add410
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add411
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add412
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add413
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add414
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add415
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 7922760126445308550032818109.5
    s21_decimal check = {{0x4BB0FD67, 0x9636572A, 0xFFFF8926, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add416
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 7922872376407558968675971958
    s21_decimal check = {{0x5ED4B376, 0x242DC415, 0x1999A57C, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add417
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 7922816251426433709650393611.1
    s21_decimal check = {{0x461B446F, 0xFFFFFF8C, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add418
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 7922816251426433809058396456
    s21_decimal check = {{0x2C307928, 0x999999A5, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add419
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 7922816251426433758705151031.3
    s21_decimal check = {{0x7D053A29, 0xFFFFFFFE, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add420
    // 7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 7922816251426433760003639036
    s21_decimal check = {{0xC04C46FC, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add421
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 71305346262837903834189555302
    s21_decimal check = {{0x66666666, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add422
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add423
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add424
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add425
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add426
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790066
    s21_decimal check = {{0x33333332, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add427
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add428
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add429
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add430
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add431
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add432
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add433
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add434
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add435
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add436
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add437
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add438
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add439
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add440
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add441
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395031.5
    s21_decimal check = {{0xFFFFFFEB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add442
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add443
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add444
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add445
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add446
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add447
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add448
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add449
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816245277519068117877828.5
    s21_decimal check = {{0xAAAAAAAD, 0xAAAAAAAA, 0xFFFFFFFC, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add450
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add451
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816245277519069549533593.5
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAD, 0xFFFFFFFC, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add452
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add453
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433757922739268.5
    s21_decimal check = {{0xAAAAAAAD, 0xFFFFFFFC, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add454
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add455
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -7922816251426433759327985645.8
    s21_decimal check = {{0xF0423F4A, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add456
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add457
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add458
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add459
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add460
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add461
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395025.6
    s21_decimal check = {{0xFFFFFFB0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add462
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add463
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395025.5
    s21_decimal check = {{0xFFFFFFAF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add464
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add465
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395029.9
    s21_decimal check = {{0xFFFFFFDB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add466
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add467
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add468
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add469
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add470
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add471
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add472
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add473
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add474
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add475
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -7922872376407558968675971958
    s21_decimal check = {{0x5ED4B376, 0x242DC415, 0x1999A57C, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add476
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -7922760126445308550032818109.5
    s21_decimal check = {{0x4BB0FD67, 0x9636572A, 0xFFFF8926, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add477
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -7922816251426433809058396456
    s21_decimal check = {{0x2C307928, 0x999999A5, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add478
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -7922816251426433709650393611.1
    s21_decimal check = {{0x461B446F, 0xFFFFFF8C, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add479
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -7922816251426433760003639036
    s21_decimal check = {{0xC04C46FC, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add480
    // -7922816251426433759354395033.5
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -7922816251426433758705151031.3
    s21_decimal check = {{0x7D053A29, 0xFFFFFFFE, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add481
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add482
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add483
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add484
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add485
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add486
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add487
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add488
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add489
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add490
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add491
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790069
    s21_decimal check = {{0x33333335, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add492
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add493
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add494
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add495
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add496
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add497
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add498
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add499
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add500
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add501
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add502
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add503
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add504
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add505
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 34332203756181212957202378479
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add506
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -18486571253328345438493588411
    s21_decimal check = {{0xBBBBBBBB, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add507
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 34332203750032298267397517039
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add508
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -18486571247179430748688726971
    s21_decimal check = {{0xBBBBBBBB, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add509
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816257575348450590912239
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add510
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816245277519068117877829
    s21_decimal check = {{0x44444445, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add511
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add512
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816245277519069549533594
    s21_decimal check = {{0x9999999A, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add513
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433760786050799
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add514
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433757922739269
    s21_decimal check = {{0x44444445, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add515
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add516
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 7922816251426433759327985646.3
    s21_decimal check = {{0xF0423F4F, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add517
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add518
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add519
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add520
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759327985647
    s21_decimal check = {{0x98069FEF, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add521
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add522
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395026.1
    s21_decimal check = {{0xFFFFFFB5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add523
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add524
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395026
    s21_decimal check = {{0x99999992, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add525
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395038
    s21_decimal check = {{0x9999999E, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add526
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395030.4
    s21_decimal check = {{0xFFFFFFE0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add527
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add528
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add529
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add530
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add531
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add532
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add533
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add534
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add535
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 7922760126445308550032818110.0
    s21_decimal check = {{0x4BB0FD6C, 0x9636572A, 0xFFFF8926, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add536
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 7922872376407558968675971958
    s21_decimal check = {{0x5ED4B376, 0x242DC415, 0x1999A57C, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add537
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 7922816251426433709650393611.6
    s21_decimal check = {{0x461B4474, 0xFFFFFF8C, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add538
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 7922816251426433809058396456
    s21_decimal check = {{0x2C307928, 0x999999A5, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add539
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 7922816251426433758705151031.8
    s21_decimal check = {{0x7D053A2E, 0xFFFFFFFE, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add540
    // 7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 7922816251426433760003639036
    s21_decimal check = {{0xC04C46FC, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add541
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 71305346262837903834189555301
    s21_decimal check = {{0x66666665, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add542
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add543
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add544
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add545
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add546
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add547
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add548
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add549
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add550
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add551
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add552
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790069
    s21_decimal check = {{0x33333335, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add553
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add554
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add555
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add556
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add557
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add558
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add559
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add560
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add561
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add562
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add563
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add564
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add565
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 18486571253328345438493588411
    s21_decimal check = {{0xBBBBBBBB, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add566
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -34332203756181212957202378479
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add567
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 18486571247179430748688726971
    s21_decimal check = {{0xBBBBBBBB, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add568
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -34332203750032298267397517039
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add569
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816245277519068117877829
    s21_decimal check = {{0x44444445, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add570
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816257575348450590912239
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add571
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816245277519069549533594
    s21_decimal check = {{0x9999999A, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add572
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add573
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433757922739269
    s21_decimal check = {{0x44444445, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add574
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433760786050799
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add575
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -7922816251426433759327985646.3
    s21_decimal check = {{0xF0423F4F, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add576
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add577
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add578
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add579
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759327985647
    s21_decimal check = {{0x98069FEF, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add580
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add581
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395026.1
    s21_decimal check = {{0xFFFFFFB5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add582
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add583
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395026
    s21_decimal check = {{0x99999992, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add584
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add585
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395030.4
    s21_decimal check = {{0xFFFFFFE0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add586
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395038
    s21_decimal check = {{0x9999999E, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add587
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add588
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add589
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add590
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add591
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add592
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add593
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add594
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add595
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -7922872376407558968675971958
    s21_decimal check = {{0x5ED4B376, 0x242DC415, 0x1999A57C, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add596
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -7922760126445308550032818110.0
    s21_decimal check = {{0x4BB0FD6C, 0x9636572A, 0xFFFF8926, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add597
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -7922816251426433809058396456
    s21_decimal check = {{0x2C307928, 0x999999A5, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add598
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -7922816251426433709650393611.6
    s21_decimal check = {{0x461B4474, 0xFFFFFF8C, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add599
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -7922816251426433760003639036
    s21_decimal check = {{0xC04C46FC, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add600
    // -7922816251426433759354395034
    s21_decimal decimal1 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -7922816251426433758705151031.8
    s21_decimal check = {{0x7D053A2E, 0xFFFFFFFE, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add601
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add602
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add603
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add604
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -71305346262837903834189555299
    s21_decimal check = {{0x66666663, 0x66666666, 0xE6666666, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add605
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add606
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add607
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add608
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add609
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790069
    s21_decimal check = {{0x33333335, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add610
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add611
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 15845632502852867518708790070
    s21_decimal check = {{0x33333336, 0x33333333, 0x33333333, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add612
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add613
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add614
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add615
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add616
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add617
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add618
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add619
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add620
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add621
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add622
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add623
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add624
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add625
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 34332203756181212957202378480
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add626
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -18486571253328345438493588410
    s21_decimal check = {{0xBBBBBBBA, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add627
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 34332203750032298267397517040
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add628
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -18486571247179430748688726970
    s21_decimal check = {{0xBBBBBBBA, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add629
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816257575348450590912240
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add630
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816245277519068117877830
    s21_decimal check = {{0x44444446, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add631
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816257575348449159256475
    s21_decimal check = {{0x9999999B, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add632
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816245277519069549533595
    s21_decimal check = {{0x9999999B, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add633
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433760786050800
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add634
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433757922739270
    s21_decimal check = {{0x44444446, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add635
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 7922816251426433759380804423
    s21_decimal check = {{0x9B2C9347, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add636
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 7922816251426433759327985647.3
    s21_decimal check = {{0xF0423F59, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add637
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add638
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add639
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add640
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759327985648
    s21_decimal check = {{0x98069FF0, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add641
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add642
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395027.1
    s21_decimal check = {{0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add643
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add644
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395027
    s21_decimal check = {{0x99999993, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add645
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395039
    s21_decimal check = {{0x9999999F, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add646
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395031.4
    s21_decimal check = {{0xFFFFFFEA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add647
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add648
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add649
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add650
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add651
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add652
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add653
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add654
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add655
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 7922760126445308550032818111.0
    s21_decimal check = {{0x4BB0FD76, 0x9636572A, 0xFFFF8926, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add656
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 7922872376407558968675971959
    s21_decimal check = {{0x5ED4B377, 0x242DC415, 0x1999A57C, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add657
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 7922816251426433709650393612.6
    s21_decimal check = {{0x461B447E, 0xFFFFFF8C, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add658
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 7922816251426433809058396457
    s21_decimal check = {{0x2C307929, 0x999999A5, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add659
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 7922816251426433758705151032.8
    s21_decimal check = {{0x7D053A38, 0xFFFFFFFE, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add660
    // 7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 7922816251426433760003639037
    s21_decimal check = {{0xC04C46FD, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add661
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 71305346262837903834189555300
    s21_decimal check = {{0x66666664, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add662
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add663
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 71305346262837903834189555299
    s21_decimal check = {{0x66666663, 0x66666666, 0xE6666666, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add664
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add665
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add666
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add667
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add668
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -15845632502852867518708790068
    s21_decimal check = {{0x33333334, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add669
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add670
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790069
    s21_decimal check = {{0x33333335, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add671
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add672
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -15845632502852867518708790070
    s21_decimal check = {{0x33333336, 0x33333333, 0x33333333, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add673
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add674
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add675
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add676
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add677
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add678
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add679
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add680
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add681
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add682
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add683
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add684
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add685
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 18486571253328345438493588410
    s21_decimal check = {{0xBBBBBBBA, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add686
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -34332203756181212957202378480
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add687
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 18486571247179430748688726970
    s21_decimal check = {{0xBBBBBBBA, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add688
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -34332203750032298267397517040
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add689
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816245277519068117877830
    s21_decimal check = {{0x44444446, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add690
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816257575348450590912240
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add691
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816245277519069549533595
    s21_decimal check = {{0x9999999B, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add692
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816257575348449159256475
    s21_decimal check = {{0x9999999B, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add693
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433757922739270
    s21_decimal check = {{0x44444446, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add694
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433760786050800
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add695
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -7922816251426433759327985647.3
    s21_decimal check = {{0xF0423F59, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add696
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -7922816251426433759380804423
    s21_decimal check = {{0x9B2C9347, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add697
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add698
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add699
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759327985648
    s21_decimal check = {{0x98069FF0, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add700
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add701
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395027.1
    s21_decimal check = {{0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add702
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add703
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395027
    s21_decimal check = {{0x99999993, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add704
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add705
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395031.4
    s21_decimal check = {{0xFFFFFFEA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add706
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395039
    s21_decimal check = {{0x9999999F, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add707
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add708
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add709
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add710
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add711
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add712
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add713
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add714
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add715
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -7922872376407558968675971959
    s21_decimal check = {{0x5ED4B377, 0x242DC415, 0x1999A57C, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add716
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -7922760126445308550032818111.0
    s21_decimal check = {{0x4BB0FD76, 0x9636572A, 0xFFFF8926, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add717
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -7922816251426433809058396457
    s21_decimal check = {{0x2C307929, 0x999999A5, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add718
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -7922816251426433709650393612.6
    s21_decimal check = {{0x461B447E, 0xFFFFFF8C, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add719
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -7922816251426433760003639037
    s21_decimal check = {{0xC04C46FD, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add720
    // -7922816251426433759354395035
    s21_decimal decimal1 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -7922816251426433758705151032.8
    s21_decimal check = {{0x7D053A38, 0xFFFFFFFE, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add721
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add722
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add723
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add724
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add725
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add726
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395032
    s21_decimal check = {{0x99999998, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add727
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add728
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add729
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add730
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add731
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add732
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add733
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add734
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add735
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add736
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add737
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.4999999999999999999999999999
    s21_decimal check = {{0x97FFFFFF, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add738
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add739
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add740
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add741
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 2.9999999999999999999999999000
    s21_decimal check = {{0x2FFFFC18, 0xBA6F0723, 0x60EF6B1A, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add742
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.9999999999999999999999999000
    s21_decimal check = {{0xFFFFC18, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add743
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 2.0000000000000000000000000001
    s21_decimal check = {{0x20000001, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add744
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add745
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add746
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add747
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add748
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add749
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517206
    s21_decimal check = {{0x55555556, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add750
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517204
    s21_decimal check = {{0x55555554, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add751
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861441
    s21_decimal check = {{0x1, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add752
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861439
    s21_decimal check = {{0xFFFFFFFF, 0x55555554, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add753
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655766
    s21_decimal check = {{0x55555556, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add754
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655764
    s21_decimal check = {{0x55555554, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add755
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409388.704754779197847983445
    s21_decimal check = {{0xFA155555, 0x62ADBF75, 0x55555596, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add756
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409386.704754779197847983445
    s21_decimal check = {{0x3CD55555, 0xF71A63EA, 0x55555529, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add757
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add758
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add759
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409388
    s21_decimal check = {{0x192F9AC, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add760
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409386
    s21_decimal check = {{0x192F9AA, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add761
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add762
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6.9228162514264337593543950335
    s21_decimal check = {{0xEFFFFFFF, 0xC1DAFD9E, 0xDFB031A1, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add763
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 9
    s21_decimal check = {{0x9, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add764
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7
    s21_decimal check = {{0x7, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add765
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 4.6336660283201536
    s21_decimal check = {{0x70421800, 0xA49EF2, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add766
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -2.6336660283201536
    s21_decimal check = {{0x90C01800, 0x5D910D, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add767
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add768
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add769
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add770
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add771
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add772
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add773
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000010
    s21_decimal check = {{0x1000000A, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add774
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.9999999999999999999999999990
    s21_decimal check = {{0xFFFFFF6, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add775
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576923.010631
    s21_decimal check = {{0xF461647, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add776
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576925.010631
    s21_decimal check = {{0xF649AC7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add777
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001421.391670881925172831
    s21_decimal check = {{0xD8178E5F, 0x1D61BAF2, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add778
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001423.391670881925172831
    s21_decimal check = {{0x26DF8E5F, 0x3923285A, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add779
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244001.20841517182548587502
    s21_decimal check = {{0xAF1233EE, 0xEAAE8DB8, 0xD1C8347E, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add780
    // 1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244003.20841517182548587502
    s21_decimal check = {{0x753233EE, 0xC23D4A13, 0xD1C83489, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add781
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add782
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add783
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add784
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add785
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395032
    s21_decimal check = {{0x99999998, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add786
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add787
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add788
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add789
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add790
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add791
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add792
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add793
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add794
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -2
    s21_decimal check = {{0x2, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add795
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add796
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add797
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add798
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.4999999999999999999999999999
    s21_decimal check = {{0x97FFFFFF, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add799
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add800
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);
#test test_add801
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.9999999999999999999999999000
    s21_decimal check = {{0xFFFFC18, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add802
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -2.9999999999999999999999999000
    s21_decimal check = {{0x2FFFFC18, 0xBA6F0723, 0x60EF6B1A, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add803
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add804
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -2.0000000000000000000000000001
    s21_decimal check = {{0x20000001, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add805
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add806
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add807
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add808
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add809
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517204
    s21_decimal check = {{0x55555554, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add810
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517206
    s21_decimal check = {{0x55555556, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add811
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861439
    s21_decimal check = {{0xFFFFFFFF, 0x55555554, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add812
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861441
    s21_decimal check = {{0x1, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add813
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655764
    s21_decimal check = {{0x55555554, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add814
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655766
    s21_decimal check = {{0x55555556, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add815
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409386.704754779197847983445
    s21_decimal check = {{0x3CD55555, 0xF71A63EA, 0x55555529, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add816
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409388.704754779197847983445
    s21_decimal check = {{0xFA155555, 0x62ADBF75, 0x55555596, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add817
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add818
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add819
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409386
    s21_decimal check = {{0x192F9AA, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add820
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409388
    s21_decimal check = {{0x192F9AC, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add821
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6.9228162514264337593543950335
    s21_decimal check = {{0xEFFFFFFF, 0xC1DAFD9E, 0xDFB031A1, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add822
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add823
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7
    s21_decimal check = {{0x7, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add824
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -9
    s21_decimal check = {{0x9, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add825
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 2.6336660283201536
    s21_decimal check = {{0x90C01800, 0x5D910D, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add826
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -4.6336660283201536
    s21_decimal check = {{0x70421800, 0xA49EF2, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add827
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add828
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add829
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add830
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add831
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add832
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add833
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.9999999999999999999999999990
    s21_decimal check = {{0xFFFFFF6, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add834
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000010
    s21_decimal check = {{0x1000000A, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add835
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576925.010631
    s21_decimal check = {{0xF649AC7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add836
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576923.010631
    s21_decimal check = {{0xF461647, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add837
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001423.391670881925172831
    s21_decimal check = {{0x26DF8E5F, 0x3923285A, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add838
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001421.391670881925172831
    s21_decimal check = {{0xD8178E5F, 0x1D61BAF2, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add839
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244003.20841517182548587502
    s21_decimal check = {{0x753233EE, 0xC23D4A13, 0xD1C83489, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add840
    // -1
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244001.20841517182548587502
    s21_decimal check = {{0xAF1233EE, 0xEAAE8DB8, 0xD1C8347E, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add841
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add842
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add843
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add844
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add845
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add846
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add847
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add848
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add849
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add850
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add851
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add852
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add853
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add854
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add855
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.0
    s21_decimal check = {{0xA, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add856
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add857
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add858
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add859
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add860
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add861
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 2.4999999999999999999999999000
    s21_decimal check = {{0xA7FFFC18, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add862
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.4999999999999999999999999000
    s21_decimal check = {{0x97FFFC18, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add863
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add864
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add865
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add866
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add867
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add868
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add869
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.5
    s21_decimal check = {{0x55555557, 0x55555555, 0x3, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add870
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517204.5
    s21_decimal check = {{0x5555554D, 0x55555555, 0x3, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add871
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.5
    s21_decimal check = {{0x5, 0x55555552, 0x3, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add872
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861439.5
    s21_decimal check = {{0xFFFFFFFB, 0x55555551, 0x3, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add873
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.5
    s21_decimal check = {{0x55555557, 0x3, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add874
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655764.5
    s21_decimal check = {{0x5555554D, 0x3, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add875
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add876
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add877
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add878
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add879
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.5
    s21_decimal check = {{0xFBDC0B3, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add880
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409386.5
    s21_decimal check = {{0xFBDC0A9, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add881
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add882
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.4228162514264337593543950335
    s21_decimal check = {{0x77FFFFFF, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add883
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8.5
    s21_decimal check = {{0x55, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add884
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7.5
    s21_decimal check = {{0x4B, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add885
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 4.1336660283201536
    s21_decimal check = {{0x38619800, 0x92DB79, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add886
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.1336660283201536
    s21_decimal check = {{0xC8A09800, 0x6F5486, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add887
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add888
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add889
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add890
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add891
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add892
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add893
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000010
    s21_decimal check = {{0x8800000A, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add894
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999990
    s21_decimal check = {{0x87FFFFF6, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add895
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add896
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add897
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add898
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add899
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add900
    // 0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x10000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add901
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add902
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add903
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add904
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add905
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add906
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add907
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add908
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add909
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add910
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add911
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add912
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add913
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add914
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.5
    s21_decimal check = {{0xF, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add915
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add916
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.0
    s21_decimal check = {{0xA, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add917
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add918
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add919
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add920
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add921
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.4999999999999999999999999000
    s21_decimal check = {{0x97FFFC18, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add922
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -2.4999999999999999999999999000
    s21_decimal check = {{0xA7FFFC18, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add923
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add924
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add925
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add926
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add927
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add928
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add929
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517204.5
    s21_decimal check = {{0x5555554D, 0x55555555, 0x3, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add930
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.5
    s21_decimal check = {{0x55555557, 0x55555555, 0x3, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add931
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861439.5
    s21_decimal check = {{0xFFFFFFFB, 0x55555551, 0x3, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add932
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.5
    s21_decimal check = {{0x5, 0x55555552, 0x3, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add933
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655764.5
    s21_decimal check = {{0x5555554D, 0x3, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add934
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.5
    s21_decimal check = {{0x55555557, 0x3, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add935
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add936
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add937
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add938
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add939
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409386.5
    s21_decimal check = {{0xFBDC0A9, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add940
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.5
    s21_decimal check = {{0xFBDC0B3, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add941
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.4228162514264337593543950335
    s21_decimal check = {{0x77FFFFFF, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add942
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add943
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7.5
    s21_decimal check = {{0x4B, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add944
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8.5
    s21_decimal check = {{0x55, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add945
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.1336660283201536
    s21_decimal check = {{0xC8A09800, 0x6F5486, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add946
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -4.1336660283201536
    s21_decimal check = {{0x38619800, 0x92DB79, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add947
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add948
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add949
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add950
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add951
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add952
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add953
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999990
    s21_decimal check = {{0x87FFFFF6, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add954
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000010
    s21_decimal check = {{0x8800000A, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add955
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add956
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add957
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add958
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add959
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add960
    // -0.5
    s21_decimal decimal1 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add961
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add962
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add963
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add964
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add965
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add966
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add967
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add968
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add969
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add970
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add971
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add972
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add973
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.4999999999999999999999999999
    s21_decimal check = {{0x97FFFFFF, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add974
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add975
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add976
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add977
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.9999999999999999999999999998
    s21_decimal check = {{0xFFFFFFE, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add978
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add979
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add980
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add981
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 2.4999999999999999999999998999
    s21_decimal check = {{0xA7FFFC17, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add982
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.4999999999999999999999999001
    s21_decimal check = {{0x97FFFC19, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add983
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.5000000000000000000000000000
    s21_decimal check = {{0x98000000, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add984
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add985
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add986
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add987
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add988
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add989
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add990
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add991
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add992
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add993
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add994
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add995
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add996
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add997
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add998
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add999
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1000
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1001
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 8.422816251426433759354395033
    s21_decimal check = {{0xD999999, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1002
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.4228162514264337593543950336
    s21_decimal check = {{0x78000000, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1003
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1004
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7.5000000000000000000000000001
    s21_decimal check = {{0xF8000001, 0xD21591D7, 0xF2568BC2, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1005
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 4.1336660283201535999999999999
    s21_decimal check = {{0x117FFFFF, 0x1DFB7C4D, 0x8590E24C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1006
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.1336660283201536000000000001
    s21_decimal check = {{0x1800001, 0xDFD679EC, 0x654113ED, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1007
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1008
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1009
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1010
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1011
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1012
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999998
    s21_decimal check = {{0x87FFFFFE, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1013
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000009
    s21_decimal check = {{0x88000009, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1014
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999989
    s21_decimal check = {{0x87FFFFF5, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1015
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1016
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1017
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add1018
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add1019
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add1020
    // 0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add1021
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1022
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1023
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1024
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1025
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1026
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1027
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1028
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1029
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1030
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1031
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1032
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1033
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1034
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.4999999999999999999999999999
    s21_decimal check = {{0x97FFFFFF, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1035
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1036
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1037
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1038
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.9999999999999999999999999998
    s21_decimal check = {{0xFFFFFFE, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1039
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1040
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1041
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.4999999999999999999999999001
    s21_decimal check = {{0x97FFFC19, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1042
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -2.4999999999999999999999998999
    s21_decimal check = {{0xA7FFFC17, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1043
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1044
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.5000000000000000000000000000
    s21_decimal check = {{0x98000000, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1045
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1046
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1047
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1048
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1049
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1050
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1051
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1052
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1053
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1054
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add1055
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1056
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1057
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1058
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1059
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1060
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1061
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.4228162514264337593543950336
    s21_decimal check = {{0x78000000, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1062
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -8.422816251426433759354395033
    s21_decimal check = {{0xD999999, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1063
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7.5000000000000000000000000001
    s21_decimal check = {{0xF8000001, 0xD21591D7, 0xF2568BC2, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1064
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1065
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.1336660283201536000000000001
    s21_decimal check = {{0x1800001, 0xDFD679EC, 0x654113ED, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1066
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -4.1336660283201535999999999999
    s21_decimal check = {{0x117FFFFF, 0x1DFB7C4D, 0x8590E24C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1067
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1068
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1069
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1070
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1071
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999998
    s21_decimal check = {{0x87FFFFFE, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1072
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1073
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999989
    s21_decimal check = {{0x87FFFFF5, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1074
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000009
    s21_decimal check = {{0x88000009, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1075
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1076
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1077
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add1078
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add1079
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add1080
    // -0.4999999999999999999999999999
    s21_decimal decimal1 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add1081
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1082
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1083
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1084
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1085
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1086
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1087
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1088
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1089
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1090
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1091
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1092
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1093
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1094
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1095
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1096
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1097
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1098
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1099
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1100
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1101
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 2.4999999999999999999999999001
    s21_decimal check = {{0xA7FFFC19, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1102
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.4999999999999999999999998999
    s21_decimal check = {{0x97FFFC17, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1103
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.5000000000000000000000000002
    s21_decimal check = {{0x98000002, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1104
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1105
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1106
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1107
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1108
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1109
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1110
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1111
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1112
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1113
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1114
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add1115
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1116
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1117
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1118
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1119
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1120
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1121
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1122
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.4228162514264337593543950334
    s21_decimal check = {{0x77FFFFFE, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1123
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1124
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7.4999999999999999999999999999
    s21_decimal check = {{0xF7FFFFFF, 0xD21591D7, 0xF2568BC2, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1125
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 4.1336660283201536000000000001
    s21_decimal check = {{0x11800001, 0x1DFB7C4D, 0x8590E24C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1126
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.1336660283201535999999999999
    s21_decimal check = {{0x17FFFFF, 0xDFD679EC, 0x654113ED, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1127
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1128
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1129
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1130
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1131
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1132
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1133
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000011
    s21_decimal check = {{0x8800000B, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1134
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999991
    s21_decimal check = {{0x87FFFFF7, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1135
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1136
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1137
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add1138
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add1139
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add1140
    // 0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add1141
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1142
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1143
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1144
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1145
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1146
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1147
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1148
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1149
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1150
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1151
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1152
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1153
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1154
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1155
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1156
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1157
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1158
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1159
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1160
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1161
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.4999999999999999999999998999
    s21_decimal check = {{0x97FFFC17, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1162
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -2.4999999999999999999999999001
    s21_decimal check = {{0xA7FFFC19, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1163
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1164
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.5000000000000000000000000002
    s21_decimal check = {{0x98000002, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1165
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1166
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1167
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1168
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1169
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1170
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1171
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1172
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1173
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1174
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add1175
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1176
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1177
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1178
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1179
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1180
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1181
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.4228162514264337593543950334
    s21_decimal check = {{0x77FFFFFE, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1182
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1183
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7.4999999999999999999999999999
    s21_decimal check = {{0xF7FFFFFF, 0xD21591D7, 0xF2568BC2, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1184
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1185
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.1336660283201535999999999999
    s21_decimal check = {{0x17FFFFF, 0xDFD679EC, 0x654113ED, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1186
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -4.1336660283201536000000000001
    s21_decimal check = {{0x11800001, 0x1DFB7C4D, 0x8590E24C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1187
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1188
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1189
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1190
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1191
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1192
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1193
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999991
    s21_decimal check = {{0x87FFFFF7, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1194
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000011
    s21_decimal check = {{0x8800000B, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1195
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1196
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1197
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add1198
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add1199
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add1200
    // -0.5000000000000000000000000001
    s21_decimal decimal1 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add1201
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1202
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1203
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1204
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950332
    s21_decimal check = {{0xFFFFFFFC, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1205
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1206
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395031.0
    s21_decimal check = {{0xFFFFFFE6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1207
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1208
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395031.5
    s21_decimal check = {{0xFFFFFFEB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1209
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1210
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1211
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1212
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1213
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 2.9999999999999999999999999000
    s21_decimal check = {{0x2FFFFC18, 0xBA6F0723, 0x60EF6B1A, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1214
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.9999999999999999999999999000
    s21_decimal check = {{0xFFFFC18, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1215
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 2.4999999999999999999999999000
    s21_decimal check = {{0xA7FFFC18, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1216
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1.4999999999999999999999999000
    s21_decimal check = {{0x97FFFC18, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1217
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 2.4999999999999999999999998999
    s21_decimal check = {{0xA7FFFC17, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1218
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.4999999999999999999999999001
    s21_decimal check = {{0x97FFFC19, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1219
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 2.4999999999999999999999999001
    s21_decimal check = {{0xA7FFFC19, 0x9B5C85F2, 0x50C783EB, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1220
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1.4999999999999999999999998999
    s21_decimal check = {{0x97FFFC17, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1221
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 3.9999999999999999999999998000
    s21_decimal check = {{0x3FFFF830, 0xF8940984, 0x813F3978, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1222
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1223
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 2.9999999999999999999999999001
    s21_decimal check = {{0x2FFFFC19, 0xBA6F0723, 0x60EF6B1A, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1224
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.9999999999999999999999998999
    s21_decimal check = {{0xFFFFC17, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1225
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983447
    s21_decimal check = {{0x55555557, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1226
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983443
    s21_decimal check = {{0x55555553, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1227
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122007
    s21_decimal check = {{0x55555557, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1228
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122003
    s21_decimal check = {{0x55555553, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1229
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517207.0000000000
    s21_decimal check = {{0x36BE7C00, 0x55555559, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1230
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517203.0000000000
    s21_decimal check = {{0xE68EEC00, 0x5555554F, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1231
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861442.0000000000
    s21_decimal check = {{0xA817C800, 0x8EA6B404, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1232
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861438.0000000000
    s21_decimal check = {{0x57E83800, 0x8EA6B3FB, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1233
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655767.0000000000000000000
    s21_decimal check = {{0xE5D80000, 0x6A993A5C, 0x2E426102, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1234
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655763.0000000000000000000
    s21_decimal check = {{0xBE380000, 0x3F7CAE4A, 0x2E426100, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add1235
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409389.704754779197847983445
    s21_decimal check = {{0xD8B55555, 0x98776D3B, 0x555555CC, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1236
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409385.704754779197847983445
    s21_decimal check = {{0x5E355555, 0xC150B624, 0x555554F3, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1237
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409389.498605864508043122005
    s21_decimal check = {{0x12955555, 0x6B935B8C, 0x555555C1, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1238
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409385.498605864508043122005
    s21_decimal check = {{0x98155555, 0x946CA474, 0x555554E8, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1239
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409389.000000000000000000000
    s21_decimal check = {{0x12200000, 0x64077B81, 0x555555A6, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1240
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409385.000000000000000000000
    s21_decimal check = {{0x97A00000, 0x8CE0C469, 0x555554CD, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1241
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 9.922816251426433759354394934
    s21_decimal check = {{0x69999936, 0xD93A9A13, 0x200FF612, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1242
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -5.9228162514264337593543951335
    s21_decimal check = {{0xE00003E7, 0x83B5FB3D, 0xBF606343, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1243
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 9.999999999999999999999999900
    s21_decimal check = {{0xFFFFF9C, 0x3E250261, 0x204FCE5E, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1244
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6.0000000000000000000000001000
    s21_decimal check = {{0x600003E8, 0x74DE0E46, 0xC1DED635, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1245
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 5.6336660283201535999999999000
    s21_decimal check = {{0xA97FFC18, 0x7B32FFDE, 0xB60897D9, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1246
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1.6336660283201536000000001000
    s21_decimal check = {{0x698003E8, 0x829EF65A, 0x34C95E60, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1247
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1248
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1249
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1250
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1251
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999001
    s21_decimal check = {{0x1FFFFC19, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1252
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999998999
    s21_decimal check = {{0x1FFFFC17, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1253
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999010
    s21_decimal check = {{0x1FFFFC22, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1254
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999998990
    s21_decimal check = {{0x1FFFFC0E, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1255
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576922.010631
    s21_decimal check = {{0xF36D407, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1256
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576926.010631
    s21_decimal check = {{0xF73DD07, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1257
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001420.391670881925172831
    s21_decimal check = {{0x30B38E5F, 0xF81043F, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add1258
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001424.391670881925172831
    s21_decimal check = {{0xCE438E5F, 0x4703DF0D, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add1259
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244000.20841517182548587502
    s21_decimal check = {{0x4C0233EE, 0x7EE72F8B, 0xD1C83479, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add1260
    // 1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244004.20841517182548587502
    s21_decimal check = {{0xD84233EE, 0x2E04A840, 0xD1C8348F, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add1261
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1262
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1263
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950332
    s21_decimal check = {{0xFFFFFFFC, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1264
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1265
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395031.0
    s21_decimal check = {{0xFFFFFFE6, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1266
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1267
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395031.5
    s21_decimal check = {{0xFFFFFFEB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1268
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1269
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1270
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1271
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1272
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1273
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.9999999999999999999999999000
    s21_decimal check = {{0xFFFFC18, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1274
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -2.9999999999999999999999999000
    s21_decimal check = {{0x2FFFFC18, 0xBA6F0723, 0x60EF6B1A, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1275
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1.4999999999999999999999999000
    s21_decimal check = {{0x97FFFC18, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1276
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -2.4999999999999999999999999000
    s21_decimal check = {{0xA7FFFC18, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1277
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.4999999999999999999999999001
    s21_decimal check = {{0x97FFFC19, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1278
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -2.4999999999999999999999998999
    s21_decimal check = {{0xA7FFFC17, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1279
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1.4999999999999999999999998999
    s21_decimal check = {{0x97FFFC17, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1280
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -2.4999999999999999999999999001
    s21_decimal check = {{0xA7FFFC19, 0x9B5C85F2, 0x50C783EB, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1281
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1282
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -3.9999999999999999999999998000
    s21_decimal check = {{0x3FFFF830, 0xF8940984, 0x813F3978, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1283
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.9999999999999999999999998999
    s21_decimal check = {{0xFFFFC17, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1284
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -2.9999999999999999999999999001
    s21_decimal check = {{0x2FFFFC19, 0xBA6F0723, 0x60EF6B1A, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1285
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983443
    s21_decimal check = {{0x55555553, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1286
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983447
    s21_decimal check = {{0x55555557, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1287
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122003
    s21_decimal check = {{0x55555553, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1288
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122007
    s21_decimal check = {{0x55555557, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1289
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517203.0000000000
    s21_decimal check = {{0xE68EEC00, 0x5555554F, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1290
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517207.0000000000
    s21_decimal check = {{0x36BE7C00, 0x55555559, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1291
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861438.0000000000
    s21_decimal check = {{0x57E83800, 0x8EA6B3FB, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1292
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861442.0000000000
    s21_decimal check = {{0xA817C800, 0x8EA6B404, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1293
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655763.0000000000000000000
    s21_decimal check = {{0xBE380000, 0x3F7CAE4A, 0x2E426100, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1294
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655767.0000000000000000000
    s21_decimal check = {{0xE5D80000, 0x6A993A5C, 0x2E426102, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add1295
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409385.704754779197847983445
    s21_decimal check = {{0x5E355555, 0xC150B624, 0x555554F3, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1296
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409389.704754779197847983445
    s21_decimal check = {{0xD8B55555, 0x98776D3B, 0x555555CC, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1297
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409385.498605864508043122005
    s21_decimal check = {{0x98155555, 0x946CA474, 0x555554E8, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1298
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409389.498605864508043122005
    s21_decimal check = {{0x12955555, 0x6B935B8C, 0x555555C1, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1299
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409385.000000000000000000000
    s21_decimal check = {{0x97A00000, 0x8CE0C469, 0x555554CD, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1300
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409389.000000000000000000000
    s21_decimal check = {{0x12200000, 0x64077B81, 0x555555A6, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1301
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 5.9228162514264337593543951335
    s21_decimal check = {{0xE00003E7, 0x83B5FB3D, 0xBF606343, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1302
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -9.922816251426433759354394934
    s21_decimal check = {{0x69999936, 0xD93A9A13, 0x200FF612, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1303
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 6.0000000000000000000000001000
    s21_decimal check = {{0x600003E8, 0x74DE0E46, 0xC1DED635, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1304
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -9.999999999999999999999999900
    s21_decimal check = {{0xFFFFF9C, 0x3E250261, 0x204FCE5E, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1305
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1.6336660283201536000000001000
    s21_decimal check = {{0x698003E8, 0x829EF65A, 0x34C95E60, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1306
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -5.6336660283201535999999999000
    s21_decimal check = {{0xA97FFC18, 0x7B32FFDE, 0xB60897D9, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1307
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1308
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1309
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1310
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1311
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999998999
    s21_decimal check = {{0x1FFFFC17, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1312
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999001
    s21_decimal check = {{0x1FFFFC19, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1313
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999998990
    s21_decimal check = {{0x1FFFFC0E, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1314
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999010
    s21_decimal check = {{0x1FFFFC22, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1315
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576926.010631
    s21_decimal check = {{0xF73DD07, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1316
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576922.010631
    s21_decimal check = {{0xF36D407, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1317
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001424.391670881925172831
    s21_decimal check = {{0xCE438E5F, 0x4703DF0D, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add1318
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001420.391670881925172831
    s21_decimal check = {{0x30B38E5F, 0xF81043F, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add1319
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244004.20841517182548587502
    s21_decimal check = {{0xD84233EE, 0x2E04A840, 0xD1C8348F, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add1320
    // -1.9999999999999999999999999000
    s21_decimal decimal1 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244000.20841517182548587502
    s21_decimal check = {{0x4C0233EE, 0x7EE72F8B, 0xD1C83479, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add1321
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1322
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1323
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1324
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1325
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1326
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1327
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1328
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1329
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1330
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1331
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1332
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1333
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 2.0000000000000000000000000001
    s21_decimal check = {{0x20000001, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1334
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1335
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1336
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1337
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.5000000000000000000000000000
    s21_decimal check = {{0x98000000, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1338
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1339
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1.5000000000000000000000000002
    s21_decimal check = {{0x98000002, 0x5D378391, 0x3077B58D, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1340
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1341
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 2.9999999999999999999999999001
    s21_decimal check = {{0x2FFFFC19, 0xBA6F0723, 0x60EF6B1A, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1342
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -0.9999999999999999999999998999
    s21_decimal check = {{0xFFFFC17, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1343
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 2.0000000000000000000000000002
    s21_decimal check = {{0x20000002, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1344
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1345
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1346
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1347
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1348
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1349
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517206.0000000000
    s21_decimal check = {{0xE2B29800, 0x55555556, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1350
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517204.0000000000
    s21_decimal check = {{0x3A9AD000, 0x55555552, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1351
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861441.0000000000
    s21_decimal check = {{0x540BE400, 0x8EA6B402, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1352
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861439.0000000000
    s21_decimal check = {{0xABF41C00, 0x8EA6B3FD, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1353
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655766.0000000000000000000
    s21_decimal check = {{0x5BF00000, 0xDFD21758, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1354
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655764.0000000000000000000
    s21_decimal check = {{0x48200000, 0xCA43D14F, 0x2E426100, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add1355
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409388.704754779197847983445
    s21_decimal check = {{0xFA155555, 0x62ADBF75, 0x55555596, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1356
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409386.704754779197847983445
    s21_decimal check = {{0x3CD55555, 0xF71A63EA, 0x55555529, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1357
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1358
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1359
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409388.000000000000000000000
    s21_decimal check = {{0x33800000, 0x2E3DCDBB, 0x55555570, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1360
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409386.000000000000000000000
    s21_decimal check = {{0x76400000, 0xC2AA722F, 0x55555503, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1361
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1362
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6.9228162514264337593543950334
    s21_decimal check = {{0xEFFFFFFE, 0xC1DAFD9E, 0xDFB031A1, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1363
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 9.000000000000000000000000000
    s21_decimal check = {{0x28000000, 0x9E548224, 0x1D14A021, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1364
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6.9999999999999999999999999999
    s21_decimal check = {{0x6FFFFFFF, 0xB30310A7, 0xE22EA493, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1365
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 4.6336660283201536000000000001
    s21_decimal check = {{0x99800001, 0x3D0DFD7D, 0x95B8C97B, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1366
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -2.6336660283201535999999999999
    s21_decimal check = {{0x797FFFFF, 0xC0C3F8BB, 0x55192CBE, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1367
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1368
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1369
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1370
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1371
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1372
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1373
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000011
    s21_decimal check = {{0x1000000B, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1374
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.9999999999999999999999999991
    s21_decimal check = {{0xFFFFFF7, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1375
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576923.010631
    s21_decimal check = {{0xF461647, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1376
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576925.010631
    s21_decimal check = {{0xF649AC7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1377
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001421.391670881925172831
    s21_decimal check = {{0xD8178E5F, 0x1D61BAF2, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add1378
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001423.391670881925172831
    s21_decimal check = {{0x26DF8E5F, 0x3923285A, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add1379
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244001.20841517182548587502
    s21_decimal check = {{0xAF1233EE, 0xEAAE8DB8, 0xD1C8347E, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add1380
    // 1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244003.20841517182548587502
    s21_decimal check = {{0x753233EE, 0xC23D4A13, 0xD1C83489, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add1381
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1382
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1383
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950333
    s21_decimal check = {{0xFFFFFFFD, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1384
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1385
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395032.0
    s21_decimal check = {{0xFFFFFFF0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1386
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1387
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395032.5
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1388
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1389
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1390
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1391
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1392
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395036
    s21_decimal check = {{0x9999999C, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1393
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1394
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -2.0000000000000000000000000001
    s21_decimal check = {{0x20000001, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1395
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1396
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1.5000000000000000000000000001
    s21_decimal check = {{0x98000001, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1397
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1398
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.5000000000000000000000000000
    s21_decimal check = {{0x98000000, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1399
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1400
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1.5000000000000000000000000002
    s21_decimal check = {{0x98000002, 0x5D378391, 0x3077B58D, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1401
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 0.9999999999999999999999998999
    s21_decimal check = {{0xFFFFC17, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1402
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -2.9999999999999999999999999001
    s21_decimal check = {{0x2FFFFC19, 0xBA6F0723, 0x60EF6B1A, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1403
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1404
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -2.0000000000000000000000000002
    s21_decimal check = {{0x20000002, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1405
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1406
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1407
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1408
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1409
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517204.0000000000
    s21_decimal check = {{0x3A9AD000, 0x55555552, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1410
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517206.0000000000
    s21_decimal check = {{0xE2B29800, 0x55555556, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1411
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861439.0000000000
    s21_decimal check = {{0xABF41C00, 0x8EA6B3FD, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1412
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861441.0000000000
    s21_decimal check = {{0x540BE400, 0x8EA6B402, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1413
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655764.0000000000000000000
    s21_decimal check = {{0x48200000, 0xCA43D14F, 0x2E426100, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1414
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655766.0000000000000000000
    s21_decimal check = {{0x5BF00000, 0xDFD21758, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add1415
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409386.704754779197847983445
    s21_decimal check = {{0x3CD55555, 0xF71A63EA, 0x55555529, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1416
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409388.704754779197847983445
    s21_decimal check = {{0xFA155555, 0x62ADBF75, 0x55555596, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1417
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1418
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1419
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409386.000000000000000000000
    s21_decimal check = {{0x76400000, 0xC2AA722F, 0x55555503, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add1420
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409388.000000000000000000000
    s21_decimal check = {{0x33800000, 0x2E3DCDBB, 0x55555570, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add1421
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6.9228162514264337593543950334
    s21_decimal check = {{0xEFFFFFFE, 0xC1DAFD9E, 0xDFB031A1, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1422
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1423
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 6.9999999999999999999999999999
    s21_decimal check = {{0x6FFFFFFF, 0xB30310A7, 0xE22EA493, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1424
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -9.000000000000000000000000000
    s21_decimal check = {{0x28000000, 0x9E548224, 0x1D14A021, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add1425
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 2.6336660283201535999999999999
    s21_decimal check = {{0x797FFFFF, 0xC0C3F8BB, 0x55192CBE, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1426
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -4.6336660283201536000000000001
    s21_decimal check = {{0x99800001, 0x3D0DFD7D, 0x95B8C97B, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1427
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1428
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1429
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1430
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1431
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1432
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1433
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.9999999999999999999999999991
    s21_decimal check = {{0xFFFFFF7, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1434
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000011
    s21_decimal check = {{0x1000000B, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add1435
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576925.010631
    s21_decimal check = {{0xF649AC7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1436
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576923.010631
    s21_decimal check = {{0xF461647, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1437
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001423.391670881925172831
    s21_decimal check = {{0x26DF8E5F, 0x3923285A, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add1438
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001421.391670881925172831
    s21_decimal check = {{0xD8178E5F, 0x1D61BAF2, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add1439
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244003.20841517182548587502
    s21_decimal check = {{0x753233EE, 0xC23D4A13, 0xD1C83489, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add1440
    // -1.0000000000000000000000000001
    s21_decimal decimal1 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244001.20841517182548587502
    s21_decimal check = {{0xAF1233EE, 0xEAAE8DB8, 0xD1C8347E, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add1441
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1442
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1443
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1444
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -52818775009509558395695966889
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1445
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1446
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1447
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1448
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1449
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 34332203756181212957202378479
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1450
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 18486571253328345438493588411
    s21_decimal check = {{0xBBBBBBBB, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1451
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 34332203756181212957202378480
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1452
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 18486571253328345438493588410
    s21_decimal check = {{0xBBBBBBBA, 0xBBBBBBBB, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1453
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1454
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1455
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1456
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1457
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1458
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1459
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1460
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1461
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387504754779197847983447
    s21_decimal check = {{0x55555557, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1462
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387504754779197847983443
    s21_decimal check = {{0x55555553, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1463
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1464
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1465
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1466
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1467
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 52818775003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1468
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1469
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387510903693889084500650
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1470
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1471
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387510903693887652844885
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1472
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1473
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1474
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387504754779196416327680
    s21_decimal check = {{0x0, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1475
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387504754779197874392833
    s21_decimal check = {{0x56E84F01, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1476
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 26409387504754779197821574057
    s21_decimal check = {{0x53C25BA9, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1477
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1478
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1479
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1480
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1481
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1482
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1483
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1484
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1485
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387504754779197847983449
    s21_decimal check = {{0x55555559, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1486
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387504754779197847983441
    s21_decimal check = {{0x55555551, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1487
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1488
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1489
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1490
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1491
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1492
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1493
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1494
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1495
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 26409331379773653988526406521
    s21_decimal check = {{0x901A3B79, 0xCAC12AD9, 0x55554972, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1496
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 26409443629735904407169560369
    s21_decimal check = {{0x1A906F31, 0xDFE97FD1, 0x55556137, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1497
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 26409387504754779148143982023
    s21_decimal check = {{0xC2BE75C7, 0x55555549, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1498
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 26409387504754779247551984867
    s21_decimal check = {{0xE7EC34E3, 0x55555560, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1499
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 26409387504754779197198739443
    s21_decimal check = {{0x2EA2A7F3, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1500
    // 26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 26409387504754779198497227447
    s21_decimal check = {{0x7C0802B7, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1501
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1502
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1503
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 52818775009509558395695966889
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1504
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1505
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1506
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1507
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -18486571253328345438493588412
    s21_decimal check = {{0xBBBBBBBC, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1508
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -34332203756181212957202378478
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1509
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -18486571253328345438493588411
    s21_decimal check = {{0xBBBBBBBB, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1510
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -34332203756181212957202378479
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1511
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -18486571253328345438493588410
    s21_decimal check = {{0xBBBBBBBA, 0xBBBBBBBB, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1512
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -34332203756181212957202378480
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1513
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1514
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1515
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1516
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1517
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1518
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1519
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1520
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1521
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387504754779197847983443
    s21_decimal check = {{0x55555553, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1522
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387504754779197847983447
    s21_decimal check = {{0x55555557, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1523
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387504754779197847983444
    s21_decimal check = {{0x55555554, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1524
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387504754779197847983446
    s21_decimal check = {{0x55555556, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1525
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1526
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -52818775009509558395695966890
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1527
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1528
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -52818775003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1529
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1530
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387510903693889084500650
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1531
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1532
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387510903693887652844885
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1533
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387504754779196416327680
    s21_decimal check = {{0x0, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1534
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1535
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -26409387504754779197821574057
    s21_decimal check = {{0x53C25BA9, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1536
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387504754779197874392833
    s21_decimal check = {{0x56E84F01, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1537
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1538
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1539
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1540
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1541
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1542
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1543
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1544
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1545
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387504754779197847983441
    s21_decimal check = {{0x55555551, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1546
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387504754779197847983449
    s21_decimal check = {{0x55555559, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1547
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1548
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1549
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1550
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1551
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1552
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1553
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1554
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1555
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -26409443629735904407169560369
    s21_decimal check = {{0x1A906F31, 0xDFE97FD1, 0x55556137, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1556
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -26409331379773653988526406521
    s21_decimal check = {{0x901A3B79, 0xCAC12AD9, 0x55554972, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1557
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -26409387504754779247551984867
    s21_decimal check = {{0xE7EC34E3, 0x55555560, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1558
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -26409387504754779148143982023
    s21_decimal check = {{0xC2BE75C7, 0x55555549, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1559
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -26409387504754779198497227447
    s21_decimal check = {{0x7C0802B7, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1560
    // -26409387504754779197847983445
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -26409387504754779197198739443
    s21_decimal check = {{0x2EA2A7F3, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1561
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1562
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -52818775015658473085500828330
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1563
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1564
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -52818775015658473085500828329
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1565
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1566
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // 18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1567
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1568
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // 18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1569
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 34332203750032298267397517039
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1570
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // 18486571247179430748688726971
    s21_decimal check = {{0xBBBBBBBB, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1571
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 34332203750032298267397517040
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x6EEEEEEE, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1572
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // 18486571247179430748688726970
    s21_decimal check = {{0xBBBBBBBA, 0x66666666, 0x3BBBBBBB, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1573
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1574
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1575
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1576
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1577
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1578
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1579
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1580
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1581
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409387498605864508043122007
    s21_decimal check = {{0x55555557, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1582
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409387498605864508043122003
    s21_decimal check = {{0x55555553, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1583
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1584
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1585
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 52818775003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1586
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1587
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 52818774997211729016086244010
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1588
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1589
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1590
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387492456949816806604800
    s21_decimal check = {{0x0, 0xAAAAAAAB, 0x55555554, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1591
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1592
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387492456949818238260565
    s21_decimal check = {{0x55555555, 0xAAAAAAAB, 0x55555554, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1593
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387498605864509474777770
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1594
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1595
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387498605864508069531393
    s21_decimal check = {{0x56E84F01, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1596
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 26409387498605864508016712617
    s21_decimal check = {{0x53C25BA9, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1597
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1598
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1599
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1600
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1601
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1602
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1603
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1604
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1605
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387498605864508043122009
    s21_decimal check = {{0x55555559, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1606
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387498605864508043122001
    s21_decimal check = {{0x55555551, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1607
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1608
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1609
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1610
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1611
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1612
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1613
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1614
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1615
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 26409331373624739298721545081
    s21_decimal check = {{0x901A3B79, 0x756BD584, 0x55554972, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1616
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 26409443623586989717364698929
    s21_decimal check = {{0x1A906F31, 0x8A942A7C, 0x55556137, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1617
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 26409387498605864458339120583
    s21_decimal check = {{0xC2BE75C7, 0xFFFFFFF4, 0x55555554, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1618
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 26409387498605864557747123427
    s21_decimal check = {{0xE7EC34E3, 0xB, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1619
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 26409387498605864507393878003
    s21_decimal check = {{0x2EA2A7F3, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1620
    // 26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 26409387498605864508692366007
    s21_decimal check = {{0x7C0802B7, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1621
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 52818775015658473085500828330
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1622
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1623
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 52818775015658473085500828329
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xAAAAAAAA, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1624
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1625
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // -18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1626
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1627
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // -18486571247179430748688726972
    s21_decimal check = {{0xBBBBBBBC, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1628
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -34332203750032298267397517038
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1629
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // -18486571247179430748688726971
    s21_decimal check = {{0xBBBBBBBB, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1630
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -34332203750032298267397517039
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1631
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // -18486571247179430748688726970
    s21_decimal check = {{0xBBBBBBBA, 0x66666666, 0x3BBBBBBB, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1632
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -34332203750032298267397517040
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x6EEEEEEE, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1633
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1634
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1635
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1636
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1637
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1638
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1639
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1640
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1641
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409387498605864508043122003
    s21_decimal check = {{0x55555553, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1642
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409387498605864508043122007
    s21_decimal check = {{0x55555557, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1643
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409387498605864508043122004
    s21_decimal check = {{0x55555554, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1644
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409387498605864508043122006
    s21_decimal check = {{0x55555556, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1645
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1646
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -52818775003360643705891105450
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1647
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1648
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -52818774997211729016086244010
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0xAAAAAAAA, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1649
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387492456949816806604800
    s21_decimal check = {{0x0, 0xAAAAAAAB, 0x55555554, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1650
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1651
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387492456949818238260565
    s21_decimal check = {{0x55555555, 0xAAAAAAAB, 0x55555554, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1652
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1653
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1654
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387498605864509474777770
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1655
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -26409387498605864508016712617
    s21_decimal check = {{0x53C25BA9, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1656
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387498605864508069531393
    s21_decimal check = {{0x56E84F01, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1657
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1658
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1659
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1660
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1661
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1662
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1663
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1664
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1665
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387498605864508043122001
    s21_decimal check = {{0x55555551, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1666
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387498605864508043122009
    s21_decimal check = {{0x55555559, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1667
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1668
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1669
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1670
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1671
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1672
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1673
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1674
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1675
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -26409443623586989717364698929
    s21_decimal check = {{0x1A906F31, 0x8A942A7C, 0x55556137, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1676
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -26409331373624739298721545081
    s21_decimal check = {{0x901A3B79, 0x756BD584, 0x55554972, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1677
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -26409387498605864557747123427
    s21_decimal check = {{0xE7EC34E3, 0xB, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1678
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -26409387498605864458339120583
    s21_decimal check = {{0xC2BE75C7, 0xFFFFFFF4, 0x55555554, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1679
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -26409387498605864508692366007
    s21_decimal check = {{0x7C0802B7, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1680
    // -26409387498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -26409387498605864507393878003
    s21_decimal check = {{0x2EA2A7F3, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1681
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1682
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162508115422902307433130
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1683
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1684
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162508115422902307433129
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1685
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1686
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816245277519068117877828
    s21_decimal check = {{0x44444444, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1687
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1688
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816245277519068117877828.5
    s21_decimal check = {{0xAAAAAAAD, 0xAAAAAAAA, 0xFFFFFFFC, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1689
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816257575348450590912239
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1690
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816245277519068117877829
    s21_decimal check = {{0x44444445, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1691
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816257575348450590912240
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1692
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816245277519068117877830
    s21_decimal check = {{0x44444446, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1693
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914691236517206
    s21_decimal check = {{0x55555556, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1694
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914691236517204
    s21_decimal check = {{0x55555554, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1695
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914691236517205.5
    s21_decimal check = {{0x55555557, 0x55555555, 0x3, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1696
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914691236517204.5
    s21_decimal check = {{0x5555554D, 0x55555555, 0x3, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1697
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1698
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1699
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1700
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1701
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914691236517207.0000000000
    s21_decimal check = {{0x36BE7C00, 0x55555559, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1702
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914691236517203.0000000000
    s21_decimal check = {{0xE68EEC00, 0x5555554F, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1703
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914691236517206.0000000000
    s21_decimal check = {{0xE2B29800, 0x55555556, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1704
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914691236517204.0000000000
    s21_decimal check = {{0x3A9AD000, 0x55555552, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1705
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387510903693889084500650
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1706
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1707
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1708
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387492456949816806604800
    s21_decimal check = {{0x0, 0xAAAAAAAB, 0x55555554, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1709
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 12297829382473034410
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1710
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1711
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 12297829381041378645
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1712
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1713
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914692668172970
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1714
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1715
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 6148914691262926592.7047547792
    s21_decimal check = {{0xEF6D0B90, 0x58FF954F, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1716
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 6148914691210107817.2952452208
    s21_decimal check = {{0x2DE05C70, 0x51AB1559, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1717
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914691262926592.4986058645
    s21_decimal check = {{0x748D3795, 0x58FF954F, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1718
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914691210107817.5013941355
    s21_decimal check = {{0xA8C0306B, 0x51AB1559, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1719
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914691262926592
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1720
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914691210107818
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1721
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914691236517212.9228162514
    s21_decimal check = {{0x10485D2, 0x55555567, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1722
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914691236517197.0771837486
    s21_decimal check = {{0x1C48E22E, 0x55555542, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1723
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914691236517213
    s21_decimal check = {{0x5555555D, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1724
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914691236517197
    s21_decimal check = {{0x5555554D, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1725
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 6148914691236517208.6336660283
    s21_decimal check = {{0x47C233B, 0x5555555D, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1726
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 6148914691236517201.3663339717
    s21_decimal check = {{0x18D144C5, 0x5555554C, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1727
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1728
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1729
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1730
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1731
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1732
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1733
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1734
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1735
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56118832210518085059719.010631
    s21_decimal check = {{0xBA051947, 0xFFE9C0EB, 0xB55468F5, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1736
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56131130039900558094129.010631
    s21_decimal check = {{0x64A597C7, 0xAA946B96, 0xB55E9520, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1737
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 6148914641532515782.6083291181
    s21_decimal check = {{0x12FE002D, 0x638479D3, 0xC6AEA13A, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1738
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 6148914740940518627.3916708819
    s21_decimal check = {{0xA4F67D3, 0x472630D6, 0xC6AEA170, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1739
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 6148914690587273202.7915848282
    s21_decimal check = {{0x54CBCA5A, 0xFB3B8D87, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1740
    // 6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 6148914691885761207.2084151718
    s21_decimal check = {{0xC8819DA6, 0xAF6F1D21, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1741
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162508115422902307433130
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1742
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1743
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162508115422902307433129
    s21_decimal check = {{0xAAAAAAA9, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1744
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1745
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816245277519068117877828
    s21_decimal check = {{0x44444444, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1746
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1747
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816245277519068117877828.5
    s21_decimal check = {{0xAAAAAAAD, 0xAAAAAAAA, 0xFFFFFFFC, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1748
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816257575348450590912238
    s21_decimal check = {{0xEEEEEEEE, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1749
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816245277519068117877829
    s21_decimal check = {{0x44444445, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1750
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816257575348450590912239
    s21_decimal check = {{0xEEEEEEEF, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1751
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816245277519068117877830
    s21_decimal check = {{0x44444446, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1752
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816257575348450590912240
    s21_decimal check = {{0xEEEEEEF0, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1753
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914691236517204
    s21_decimal check = {{0x55555554, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1754
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914691236517206
    s21_decimal check = {{0x55555556, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1755
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914691236517204.5
    s21_decimal check = {{0x5555554D, 0x55555555, 0x3, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1756
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914691236517205.5
    s21_decimal check = {{0x55555557, 0x55555555, 0x3, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1757
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1758
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1759
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914691236517204.5000000000
    s21_decimal check = {{0x64A0C200, 0x55555553, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1760
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914691236517205.5000000000
    s21_decimal check = {{0xB8ACA600, 0x55555555, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1761
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914691236517203.0000000000
    s21_decimal check = {{0xE68EEC00, 0x5555554F, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1762
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914691236517207.0000000000
    s21_decimal check = {{0x36BE7C00, 0x55555559, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1763
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914691236517204.0000000000
    s21_decimal check = {{0x3A9AD000, 0x55555552, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1764
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914691236517206.0000000000
    s21_decimal check = {{0xE2B29800, 0x55555556, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1765
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1766
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387510903693889084500650
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1767
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387492456949816806604800
    s21_decimal check = {{0x0, 0xAAAAAAAB, 0x55555554, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1768
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1769
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1770
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -12297829382473034410
    s21_decimal check = {{0xAAAAAAAA, 0xAAAAAAAA, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1771
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1772
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -12297829381041378645
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1773
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1774
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914692668172970
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1775
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -6148914691210107817.2952452208
    s21_decimal check = {{0x2DE05C70, 0x51AB1559, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1776
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -6148914691262926592.7047547792
    s21_decimal check = {{0xEF6D0B90, 0x58FF954F, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1777
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914691210107817.5013941355
    s21_decimal check = {{0xA8C0306B, 0x51AB1559, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1778
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914691262926592.4986058645
    s21_decimal check = {{0x748D3795, 0x58FF954F, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1779
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914691210107818
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1780
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914691262926592
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1781
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914691236517197.0771837486
    s21_decimal check = {{0x1C48E22E, 0x55555542, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1782
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914691236517212.9228162514
    s21_decimal check = {{0x10485D2, 0x55555567, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1783
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914691236517197
    s21_decimal check = {{0x5555554D, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1784
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914691236517213
    s21_decimal check = {{0x5555555D, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1785
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -6148914691236517201.3663339717
    s21_decimal check = {{0x18D144C5, 0x5555554C, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1786
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -6148914691236517208.6336660283
    s21_decimal check = {{0x47C233B, 0x5555555D, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1787
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1788
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1789
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1790
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1791
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1792
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1793
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1794
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1795
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56131130039900558094129.010631
    s21_decimal check = {{0x64A597C7, 0xAA946B96, 0xB55E9520, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1796
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56118832210518085059719.010631
    s21_decimal check = {{0xBA051947, 0xFFE9C0EB, 0xB55468F5, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1797
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -6148914740940518627.3916708819
    s21_decimal check = {{0xA4F67D3, 0x472630D6, 0xC6AEA170, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1798
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -6148914641532515782.6083291181
    s21_decimal check = {{0x12FE002D, 0x638479D3, 0xC6AEA13A, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1799
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -6148914691885761207.2084151718
    s21_decimal check = {{0xC8819DA6, 0xAF6F1D21, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1800
    // -6148914691236517205
    s21_decimal decimal1 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -6148914690587273202.7915848282
    s21_decimal check = {{0x54CBCA5A, 0xFB3B8D87, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1801
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1802
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162508115422903739088895
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1803
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1804
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162508115422903739088894
    s21_decimal check = {{0xFFFFFFFE, 0xAAAAAAAA, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1805
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816257575348449159256473
    s21_decimal check = {{0x99999999, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1806
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816245277519069549533593
    s21_decimal check = {{0x99999999, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1807
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1808
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816245277519069549533593.5
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAD, 0xFFFFFFFC, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1809
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1810
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816245277519069549533594
    s21_decimal check = {{0x9999999A, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1811
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816257575348449159256475
    s21_decimal check = {{0x9999999B, 0xEEEEEEEE, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1812
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816245277519069549533595
    s21_decimal check = {{0x9999999B, 0x44444444, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1813
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 6148914689804861441
    s21_decimal check = {{0x1, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1814
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6148914689804861439
    s21_decimal check = {{0xFFFFFFFF, 0x55555554, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1815
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 6148914689804861440.5
    s21_decimal check = {{0x5, 0x55555552, 0x3, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1816
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 6148914689804861439.5
    s21_decimal check = {{0xFFFFFFFB, 0x55555551, 0x3, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1817
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1818
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1819
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1820
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1821
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 6148914689804861442.0000000000
    s21_decimal check = {{0xA817C800, 0x8EA6B404, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1822
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6148914689804861438.0000000000
    s21_decimal check = {{0x57E83800, 0x8EA6B3FB, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1823
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 6148914689804861441.0000000000
    s21_decimal check = {{0x540BE400, 0x8EA6B402, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1824
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6148914689804861439.0000000000
    s21_decimal check = {{0xABF41C00, 0x8EA6B3FD, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1825
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387510903693887652844885
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1826
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1827
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1828
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387492456949818238260565
    s21_decimal check = {{0x55555555, 0xAAAAAAAB, 0x55555554, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1829
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 12297829381041378645
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1830
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1831
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 12297829379609722880
    s21_decimal check = {{0x0, 0xAAAAAAAA, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1832
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1833
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1834
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914688373205675
    s21_decimal check = {{0xAAAAAAAB, 0x55555554, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1835
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 6148914689831270827.7047547792
    s21_decimal check = {{0x60C65790, 0x9250F3FB, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1836
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 6148914689778452052.2952452208
    s21_decimal check = {{0x9F39A870, 0x8AFC7404, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1837
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914689831270827.4986058645
    s21_decimal check = {{0xE5E68395, 0x9250F3FA, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1838
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914689778452052.5013941355
    s21_decimal check = {{0x1A197C6B, 0x8AFC7405, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1839
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914689831270827
    s21_decimal check = {{0x192F9AB, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1840
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914689778452053
    s21_decimal check = {{0xFE6D0655, 0x55555554, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1841
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914689804861447.9228162514
    s21_decimal check = {{0x725DD1D2, 0x8EA6B412, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1842
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914689804861432.0771837486
    s21_decimal check = {{0x8DA22E2E, 0x8EA6B3ED, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1843
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914689804861448
    s21_decimal check = {{0x8, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1844
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914689804861432
    s21_decimal check = {{0xFFFFFFF8, 0x55555554, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1845
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 6148914689804861443.6336660283
    s21_decimal check = {{0x75D56F3B, 0x8EA6B408, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1846
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 6148914689804861436.3663339717
    s21_decimal check = {{0x8A2A90C5, 0x8EA6B3F7, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1847
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1848
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1849
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1850
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1851
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1852
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1853
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1854
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1855
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56118832210519516715484.010631
    s21_decimal check = {{0xF555887, 0xFFEED701, 0xB55468F5, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1856
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56131130039899126438364.010631
    s21_decimal check = {{0xF555887, 0xAA8F5581, 0xB55E9520, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1857
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 6148914640100860017.6083291181
    s21_decimal check = {{0x84574C2D, 0x9CD5D87E, 0xC6AEA139, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1858
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 6148914739508862862.3916708819
    s21_decimal check = {{0x7BA8B3D3, 0x80778F81, 0xC6AEA16F, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1859
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 6148914689155617437.7915848282
    s21_decimal check = {{0xC625165A, 0x348CEC32, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1860
    // 6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 6148914690454105442.2084151718
    s21_decimal check = {{0x39DAE9A6, 0xE8C07BCD, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add1861
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162508115422903739088895
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1862
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1863
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162508115422903739088894
    s21_decimal check = {{0xFFFFFFFE, 0xAAAAAAAA, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1864
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1865
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816245277519069549533593
    s21_decimal check = {{0x99999999, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1866
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816257575348449159256473
    s21_decimal check = {{0x99999999, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1867
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816245277519069549533593.5
    s21_decimal check = {{0xFFFFFFFF, 0xAAAAAAAD, 0xFFFFFFFC, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1868
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1869
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816245277519069549533594
    s21_decimal check = {{0x9999999A, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1870
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816257575348449159256474
    s21_decimal check = {{0x9999999A, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1871
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816245277519069549533595
    s21_decimal check = {{0x9999999B, 0x44444444, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1872
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816257575348449159256475
    s21_decimal check = {{0x9999999B, 0xEEEEEEEE, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1873
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -6148914689804861439
    s21_decimal check = {{0xFFFFFFFF, 0x55555554, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1874
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -6148914689804861441
    s21_decimal check = {{0x1, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1875
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -6148914689804861439.5
    s21_decimal check = {{0xFFFFFFFB, 0x55555551, 0x3, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1876
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -6148914689804861440.5
    s21_decimal check = {{0x5, 0x55555552, 0x3, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1877
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1878
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1879
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -6148914689804861439.5000000000
    s21_decimal check = {{0xD5FA0E00, 0x8EA6B3FE, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1880
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -6148914689804861440.5000000000
    s21_decimal check = {{0x2A05F200, 0x8EA6B401, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1881
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6148914689804861438.0000000000
    s21_decimal check = {{0x57E83800, 0x8EA6B3FB, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1882
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -6148914689804861442.0000000000
    s21_decimal check = {{0xA817C800, 0x8EA6B404, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1883
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6148914689804861439.0000000000
    s21_decimal check = {{0xABF41C00, 0x8EA6B3FD, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1884
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -6148914689804861441.0000000000
    s21_decimal check = {{0x540BE400, 0x8EA6B402, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1885
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1886
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387510903693887652844885
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1887
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387492456949818238260565
    s21_decimal check = {{0x55555555, 0xAAAAAAAB, 0x55555554, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1888
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1889
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1890
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -12297829381041378645
    s21_decimal check = {{0x55555555, 0xAAAAAAAA, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1891
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1892
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -12297829379609722880
    s21_decimal check = {{0x0, 0xAAAAAAAA, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1893
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914688373205675
    s21_decimal check = {{0xAAAAAAAB, 0x55555554, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1894
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1895
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -6148914689778452052.2952452208
    s21_decimal check = {{0x9F39A870, 0x8AFC7404, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1896
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -6148914689831270827.7047547792
    s21_decimal check = {{0x60C65790, 0x9250F3FB, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1897
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914689778452052.5013941355
    s21_decimal check = {{0x1A197C6B, 0x8AFC7405, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1898
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914689831270827.4986058645
    s21_decimal check = {{0xE5E68395, 0x9250F3FA, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1899
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914689778452053
    s21_decimal check = {{0xFE6D0655, 0x55555554, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1900
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914689831270827
    s21_decimal check = {{0x192F9AB, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1901
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914689804861432.0771837486
    s21_decimal check = {{0x8DA22E2E, 0x8EA6B3ED, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1902
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914689804861447.9228162514
    s21_decimal check = {{0x725DD1D2, 0x8EA6B412, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1903
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914689804861432
    s21_decimal check = {{0xFFFFFFF8, 0x55555554, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1904
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914689804861448
    s21_decimal check = {{0x8, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1905
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -6148914689804861436.3663339717
    s21_decimal check = {{0x8A2A90C5, 0x8EA6B3F7, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1906
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -6148914689804861443.6336660283
    s21_decimal check = {{0x75D56F3B, 0x8EA6B408, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1907
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1908
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1909
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1910
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1911
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1912
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1913
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1914
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1915
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56131130039899126438364.010631
    s21_decimal check = {{0xF555887, 0xAA8F5581, 0xB55E9520, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1916
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56118832210519516715484.010631
    s21_decimal check = {{0xF555887, 0xFFEED701, 0xB55468F5, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1917
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -6148914739508862862.3916708819
    s21_decimal check = {{0x7BA8B3D3, 0x80778F81, 0xC6AEA16F, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1918
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -6148914640100860017.6083291181
    s21_decimal check = {{0x84574C2D, 0x9CD5D87E, 0xC6AEA139, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1919
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -6148914690454105442.2084151718
    s21_decimal check = {{0x39DAE9A6, 0xE8C07BCD, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1920
    // -6148914689804861440
    s21_decimal decimal1 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -6148914689155617437.7915848282
    s21_decimal check = {{0xC625165A, 0x348CEC32, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add1921
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1922
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337592112294570
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1923
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add1924
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337592112294569
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1925
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1926
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433757922739268
    s21_decimal check = {{0x44444444, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1927
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1928
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433757922739268.5
    s21_decimal check = {{0xAAAAAAAD, 0xFFFFFFFC, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1929
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433760786050799
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1930
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433757922739269
    s21_decimal check = {{0x44444445, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1931
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433760786050800
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1932
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433757922739270
    s21_decimal check = {{0x44444446, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1933
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1431655766
    s21_decimal check = {{0x55555556, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1934
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 1431655764
    s21_decimal check = {{0x55555554, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1935
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 1431655765.5
    s21_decimal check = {{0x55555557, 0x3, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1936
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 1431655764.5
    s21_decimal check = {{0x5555554D, 0x3, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1937
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1938
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1939
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1940
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1941
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1431655767.0000000000000000000
    s21_decimal check = {{0xE5D80000, 0x6A993A5C, 0x2E426102, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1942
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1431655763.0000000000000000000
    s21_decimal check = {{0xBE380000, 0x3F7CAE4A, 0x2E426100, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1943
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1431655766.0000000000000000000
    s21_decimal check = {{0x5BF00000, 0xDFD21758, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1944
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 1431655764.0000000000000000000
    s21_decimal check = {{0x48200000, 0xCA43D14F, 0x2E426100, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1945
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1946
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779196416327680
    s21_decimal check = {{0x0, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1947
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864509474777770
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1948
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1949
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914692668172970
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1950
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1951
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1952
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914688373205675
    s21_decimal check = {{0xAAAAAAAB, 0x55555554, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1953
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 2863311530
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1954
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1955
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 1458065152.7047547791978479834
    s21_decimal check = {{0x2E7740DA, 0x180D3C2F, 0x2F1CD50F, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1956
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 1405246377.2952452208021520166
    s21_decimal check = {{0x7598BF26, 0x9208AC78, 0x2D67ECF3, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1957
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1458065152.4986058645080431220
    s21_decimal check = {{0x3948DA74, 0xFB715ABA, 0x2F1CD50E, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1958
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1405246377.5013941354919568780
    s21_decimal check = {{0x6AC7258C, 0xAEA48DED, 0x2D67ECF3, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1959
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1458065152
    s21_decimal check = {{0x56E84F00, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1960
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1405246378
    s21_decimal check = {{0x53C25BAA, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1961
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1431655772.9228162514264337594
    s21_decimal check = {{0x87AD2CBA, 0xA08DEE5D, 0x2E426105, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1962
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1431655757.0771837485735662406
    s21_decimal check = {{0x1C62D346, 0x987FA4A, 0x2E4260FD, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1963
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 1431655773
    s21_decimal check = {{0x5555555D, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1964
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1431655757
    s21_decimal check = {{0x5555554D, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1965
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1431655768.6336660283201536
    s21_decimal check = {{0x30961800, 0x25B595AF, 0xBD7A6, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add1966
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1431655761.3663339716798464
    s21_decimal check = {{0x2F93E800, 0x24B365AF, 0xBD7A6, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add1967
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1968
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1969
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1970
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1971
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1972
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1973
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1974
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1975
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125207889921159.010631
    s21_decimal check = {{0xBA051947, 0x553A002B, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add1976
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125210753232689.010631
    s21_decimal check = {{0x64A597C7, 0x55442C56, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add1977
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -48272345657.391670881925172831
    s21_decimal check = {{0xB7478E5F, 0xA2C15937, 0x9BF9F2CD, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add1978
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 51135657187.391670881925172831
    s21_decimal check = {{0x47AF8E5F, 0xB3C38A15, 0xA53A6C9A, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add1979
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 782411762.79158482817451412498
    s21_decimal check = {{0x222DCC12, 0xFBF79F60, 0xFCCF9588, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add1980
    // 1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 2080899767.2084151718254858750
    s21_decimal check = {{0x6D71D1FE, 0x2A7D2584, 0x433CCCA8, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add1981
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337592112294570
    s21_decimal check = {{0xAAAAAAAA, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1982
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1983
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337592112294569
    s21_decimal check = {{0xAAAAAAA9, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1984
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add1985
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433757922739268
    s21_decimal check = {{0x44444444, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1986
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1987
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433757922739268.5
    s21_decimal check = {{0xAAAAAAAD, 0xFFFFFFFC, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add1988
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433760786050798
    s21_decimal check = {{0xEEEEEEEE, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1989
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433757922739269
    s21_decimal check = {{0x44444445, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1990
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433760786050799
    s21_decimal check = {{0xEEEEEEEF, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1991
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433757922739270
    s21_decimal check = {{0x44444446, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add1992
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433760786050800
    s21_decimal check = {{0xEEEEEEF0, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1993
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -1431655764
    s21_decimal check = {{0x55555554, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1994
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1431655766
    s21_decimal check = {{0x55555556, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add1995
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -1431655764.5
    s21_decimal check = {{0x5555554D, 0x3, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1996
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -1431655765.5
    s21_decimal check = {{0x55555557, 0x3, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add1997
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add1998
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add1999
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -1431655764.5000000000000000000
    s21_decimal check = {{0x8D140000, 0xFA762D1, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2000
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -1431655765.5000000000000000000
    s21_decimal check = {{0x16FC0000, 0x9A6E85D6, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2001
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1431655763.0000000000000000000
    s21_decimal check = {{0xBE380000, 0x3F7CAE4A, 0x2E426100, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2002
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1431655767.0000000000000000000
    s21_decimal check = {{0xE5D80000, 0x6A993A5C, 0x2E426102, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2003
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -1431655764.0000000000000000000
    s21_decimal check = {{0x48200000, 0xCA43D14F, 0x2E426100, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2004
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1431655766.0000000000000000000
    s21_decimal check = {{0x5BF00000, 0xDFD21758, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2005
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779196416327680
    s21_decimal check = {{0x0, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2006
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779199279639210
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2007
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864506611466240
    s21_decimal check = {{0x0, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2008
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864509474777770
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2009
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2010
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914692668172970
    s21_decimal check = {{0xAAAAAAAA, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2011
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914688373205675
    s21_decimal check = {{0xAAAAAAAB, 0x55555554, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2012
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2013
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2014
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -2863311530
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2015
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -1405246377.2952452208021520166
    s21_decimal check = {{0x7598BF26, 0x9208AC78, 0x2D67ECF3, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2016
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -1458065152.7047547791978479834
    s21_decimal check = {{0x2E7740DA, 0x180D3C2F, 0x2F1CD50F, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2017
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1405246377.5013941354919568780
    s21_decimal check = {{0x6AC7258C, 0xAEA48DED, 0x2D67ECF3, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2018
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1458065152.4986058645080431220
    s21_decimal check = {{0x3948DA74, 0xFB715ABA, 0x2F1CD50E, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2019
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1405246378
    s21_decimal check = {{0x53C25BAA, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2020
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1458065152
    s21_decimal check = {{0x56E84F00, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2021
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1431655757.0771837485735662406
    s21_decimal check = {{0x1C62D346, 0x987FA4A, 0x2E4260FD, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2022
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1431655772.9228162514264337594
    s21_decimal check = {{0x87AD2CBA, 0xA08DEE5D, 0x2E426105, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2023
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -1431655757
    s21_decimal check = {{0x5555554D, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2024
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1431655773
    s21_decimal check = {{0x5555555D, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2025
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1431655761.3663339716798464
    s21_decimal check = {{0x2F93E800, 0x24B365AF, 0xBD7A6, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2026
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1431655768.6336660283201536
    s21_decimal check = {{0x30961800, 0x25B595AF, 0xBD7A6, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2027
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2028
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2029
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2030
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2031
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2032
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2033
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2034
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2035
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125210753232689.010631
    s21_decimal check = {{0x64A597C7, 0x55442C56, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2036
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125207889921159.010631
    s21_decimal check = {{0xBA051947, 0x553A002B, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2037
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -51135657187.391670881925172831
    s21_decimal check = {{0x47AF8E5F, 0xB3C38A15, 0xA53A6C9A, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2038
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 48272345657.391670881925172831
    s21_decimal check = {{0xB7478E5F, 0xA2C15937, 0x9BF9F2CD, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2039
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -2080899767.2084151718254858750
    s21_decimal check = {{0x6D71D1FE, 0x2A7D2584, 0x433CCCA8, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2040
    // -1431655765
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -782411762.79158482817451412498
    s21_decimal check = {{0x222DCC12, 0xFBF79F60, 0xFCCF9588, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2041
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2042
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2043
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2044
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593517540946
    s21_decimal check = {{0xFE6D0652, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2045
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2046
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759327985645.3
    s21_decimal check = {{0xF0423F45, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2047
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2048
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759327985645.8
    s21_decimal check = {{0xF0423F4A, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2049
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2050
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759327985646.3
    s21_decimal check = {{0xF0423F4F, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2051
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759380804423
    s21_decimal check = {{0x9B2C9347, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2052
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759327985647.3
    s21_decimal check = {{0xF0423F59, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2053
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409388.704754779197847983445
    s21_decimal check = {{0xFA155555, 0x62ADBF75, 0x55555596, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2054
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409386.704754779197847983445
    s21_decimal check = {{0x3CD55555, 0xF71A63EA, 0x55555529, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2055
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2056
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2057
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2058
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2059
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2060
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2061
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409389.704754779197847983445
    s21_decimal check = {{0xD8B55555, 0x98776D3B, 0x555555CC, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2062
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409385.704754779197847983445
    s21_decimal check = {{0x5E355555, 0xC150B624, 0x555554F3, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2063
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409388.704754779197847983445
    s21_decimal check = {{0xFA155555, 0x62ADBF75, 0x55555596, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2064
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409386.704754779197847983445
    s21_decimal check = {{0x3CD55555, 0xF71A63EA, 0x55555529, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2065
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197874392833
    s21_decimal check = {{0x56E84F01, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2066
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197821574057
    s21_decimal check = {{0x53C25BA9, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2067
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508069531393
    s21_decimal check = {{0x56E84F01, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2068
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508016712617
    s21_decimal check = {{0x53C25BA9, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2069
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691262926592.7047547792
    s21_decimal check = {{0xEF6D0B90, 0x58FF954F, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2070
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691210107817.2952452208
    s21_decimal check = {{0x2DE05C70, 0x51AB1559, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2071
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689831270827.7047547792
    s21_decimal check = {{0x60C65790, 0x9250F3FB, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2072
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689778452052.2952452208
    s21_decimal check = {{0x9F39A870, 0x8AFC7404, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2073
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1458065152.7047547791978479834
    s21_decimal check = {{0x2E7740DA, 0x180D3C2F, 0x2F1CD50F, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add2074
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1405246377.2952452208021520166
    s21_decimal check = {{0x7598BF26, 0x9208AC78, 0x2D67ECF3, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2075
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 52818775.409509558395695966890
    s21_decimal check = {{0x36EAAAAA, 0x59C82360, 0xAAAAAAC0, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2076
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 0.000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2077
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 52818775.203360643705891105450
    s21_decimal check = {{0x70CAAAAA, 0x2CE411B0, 0xAAAAAAB5, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2078
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.206148914689804861440
    s21_decimal check = {{0xC6200000, 0x2CE411AF, 0xB, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2079
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 52818774.704754779197847983445
    s21_decimal check = {{0x70555555, 0x255831A5, 0xAAAAAA9A, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2080
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.704754779197847983445
    s21_decimal check = {{0xC6955555, 0x346FF1BA, 0x26, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2081
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409395.627571030624281742799
    s21_decimal check = {{0xFFACDCF, 0xAC0DBD7B, 0x5555570D, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2082
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409379.781938527771414224091
    s21_decimal check = {{0x26EFDCDB, 0xADBA65E5, 0x555553B2, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2083
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409395.704754779197847983445
    s21_decimal check = {{0x10755555, 0xDB317FDF, 0x55555711, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2084
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409379.704754779197847983445
    s21_decimal check = {{0x26755555, 0x7E96A381, 0x555553AE, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2085
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409391.338420807518001583445
    s21_decimal check = {{0x16B45555, 0x28231275, 0x55555625, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2086
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409384.071088750877694383445
    s21_decimal check = {{0x20365555, 0x31A510EB, 0x5555549B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2087
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2088
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2089
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2090
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2091
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2092
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2093
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2094
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2095
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209295167536.305876
    s21_decimal check = {{0x252916D4, 0x553EFE3C, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2096
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209347986311.715386
    s21_decimal check = {{0xF9819A3A, 0x553F2E45, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2097
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49677592034.686916102727324848
    s21_decimal check = {{0x8FD6D4B0, 0x648F0410, 0xA084574C, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2098
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49730410810.096425661123020814
    s21_decimal check = {{0x6F20480E, 0xF1F5DF3C, 0xA0B0081B, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2099
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -622834614.50366039262763789158
    s21_decimal check = {{0x75C9AB66, 0xB85F1D54, 0xC93FABFA, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2100
    // 26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 675653389.91316995102333385846
    s21_decimal check = {{0xAE7ABC76, 0xF48CBA77, 0xDA50BD0D, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2101
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2102
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2103
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593517540946
    s21_decimal check = {{0xFE6D0652, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2104
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2105
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759327985645.3
    s21_decimal check = {{0xF0423F45, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2106
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2107
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759327985645.8
    s21_decimal check = {{0xF0423F4A, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2108
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2109
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759327985646.3
    s21_decimal check = {{0xF0423F4F, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2110
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2111
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759327985647.3
    s21_decimal check = {{0xF0423F59, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2112
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759380804423
    s21_decimal check = {{0x9B2C9347, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2113
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409386.704754779197847983445
    s21_decimal check = {{0x3CD55555, 0xF71A63EA, 0x55555529, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2114
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409388.704754779197847983445
    s21_decimal check = {{0xFA155555, 0x62ADBF75, 0x55555596, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2115
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2116
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2117
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2118
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2119
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409387.204754779197847983445
    s21_decimal check = {{0x2C255555, 0x11FF3ACD, 0x55555545, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2120
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409388.204754779197847983445
    s21_decimal check = {{0xAC55555, 0x47C8E893, 0x5555557B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2121
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409385.704754779197847983445
    s21_decimal check = {{0x5E355555, 0xC150B624, 0x555554F3, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2122
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409389.704754779197847983445
    s21_decimal check = {{0xD8B55555, 0x98776D3B, 0x555555CC, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2123
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409386.704754779197847983445
    s21_decimal check = {{0x3CD55555, 0xF71A63EA, 0x55555529, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2124
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409388.704754779197847983445
    s21_decimal check = {{0xFA155555, 0x62ADBF75, 0x55555596, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2125
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197821574057
    s21_decimal check = {{0x53C25BA9, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2126
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197874392833
    s21_decimal check = {{0x56E84F01, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2127
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508016712617
    s21_decimal check = {{0x53C25BA9, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2128
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508069531393
    s21_decimal check = {{0x56E84F01, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2129
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691210107817.2952452208
    s21_decimal check = {{0x2DE05C70, 0x51AB1559, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2130
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691262926592.7047547792
    s21_decimal check = {{0xEF6D0B90, 0x58FF954F, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2131
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689778452052.2952452208
    s21_decimal check = {{0x9F39A870, 0x8AFC7404, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2132
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689831270827.7047547792
    s21_decimal check = {{0x60C65790, 0x9250F3FB, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2133
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1405246377.2952452208021520166
    s21_decimal check = {{0x7598BF26, 0x9208AC78, 0x2D67ECF3, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add2134
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1458065152.7047547791978479834
    s21_decimal check = {{0x2E7740DA, 0x180D3C2F, 0x2F1CD50F, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2135
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -0.000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2136
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -52818775.409509558395695966890
    s21_decimal check = {{0x36EAAAAA, 0x59C82360, 0xAAAAAAC0, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2137
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.206148914689804861440
    s21_decimal check = {{0xC6200000, 0x2CE411AF, 0xB, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2138
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -52818775.203360643705891105450
    s21_decimal check = {{0x70CAAAAA, 0x2CE411B0, 0xAAAAAAB5, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2139
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.704754779197847983445
    s21_decimal check = {{0xC6955555, 0x346FF1BA, 0x26, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2140
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -52818774.704754779197847983445
    s21_decimal check = {{0x70555555, 0x255831A5, 0xAAAAAA9A, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2141
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409379.781938527771414224091
    s21_decimal check = {{0x26EFDCDB, 0xADBA65E5, 0x555553B2, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2142
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409395.627571030624281742799
    s21_decimal check = {{0xFFACDCF, 0xAC0DBD7B, 0x5555570D, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2143
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409379.704754779197847983445
    s21_decimal check = {{0x26755555, 0x7E96A381, 0x555553AE, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2144
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409395.704754779197847983445
    s21_decimal check = {{0x10755555, 0xDB317FDF, 0x55555711, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2145
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409384.071088750877694383445
    s21_decimal check = {{0x20365555, 0x31A510EB, 0x5555549B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2146
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409391.338420807518001583445
    s21_decimal check = {{0x16B45555, 0x28231275, 0x55555625, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2147
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2148
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2149
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2150
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2151
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2152
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2153
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2154
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2155
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209347986311.715386
    s21_decimal check = {{0xF9819A3A, 0x553F2E45, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2156
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209295167536.305876
    s21_decimal check = {{0x252916D4, 0x553EFE3C, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2157
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49730410810.096425661123020814
    s21_decimal check = {{0x6F20480E, 0xF1F5DF3C, 0xA0B0081B, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2158
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49677592034.686916102727324848
    s21_decimal check = {{0x8FD6D4B0, 0x648F0410, 0xA084574C, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2159
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -675653389.91316995102333385846
    s21_decimal check = {{0xAE7ABC76, 0xF48CBA77, 0xDA50BD0D, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2160
    // -26409387.704754779197847983445
    s21_decimal decimal1 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 622834614.50366039262763789158
    s21_decimal check = {{0x75C9AB66, 0xB85F1D54, 0xC93FABFA, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2161
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2162
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2163
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2164
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2165
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2166
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2167
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2168
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2169
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2170
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2171
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2172
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2173
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2174
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2175
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2176
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2177
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2178
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2179
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2180
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2181
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409389.498605864508043122005
    s21_decimal check = {{0x12955555, 0x6B935B8C, 0x555555C1, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2182
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409385.498605864508043122005
    s21_decimal check = {{0x98155555, 0x946CA474, 0x555554E8, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2183
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2184
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2185
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2186
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2187
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2188
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2189
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691262926592.4986058645
    s21_decimal check = {{0x748D3795, 0x58FF954F, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2190
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691210107817.5013941355
    s21_decimal check = {{0xA8C0306B, 0x51AB1559, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2191
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689831270827.4986058645
    s21_decimal check = {{0xE5E68395, 0x9250F3FA, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2192
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689778452052.5013941355
    s21_decimal check = {{0x1A197C6B, 0x8AFC7405, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2193
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1458065152.4986058645080431220
    s21_decimal check = {{0x3948DA74, 0xFB715ABA, 0x2F1CD50E, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add2194
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1405246377.5013941354919568780
    s21_decimal check = {{0x6AC7258C, 0xAEA48DED, 0x2D67ECF3, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2195
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 52818775.203360643705891105450
    s21_decimal check = {{0x70CAAAAA, 0x2CE411B0, 0xAAAAAAB5, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2196
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -0.206148914689804861440
    s21_decimal check = {{0xC6200000, 0x2CE411AF, 0xB, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2197
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 52818774.997211729016086244010
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0xAAAAAAAA, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2198
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2199
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 52818774.498605864508043122005
    s21_decimal check = {{0xAA355555, 0xF8741FF5, 0xAAAAAA8E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2200
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.498605864508043122005
    s21_decimal check = {{0x755555, 0x78BE00B, 0x1B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2201
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409395.421422115934476881359
    s21_decimal check = {{0x49DACDCF, 0x7F29ABCB, 0x55555702, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2202
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409379.575789613081609362651
    s21_decimal check = {{0x60CFDCDB, 0x80D65435, 0x555553A7, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2203
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409395.498605864508043122005
    s21_decimal check = {{0x4A555555, 0xAE4D6E2F, 0x55555706, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2204
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409379.498605864508043122005
    s21_decimal check = {{0x60555555, 0x51B291D1, 0x555553A3, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2205
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409391.132271892828196722005
    s21_decimal check = {{0x50945555, 0xFB3F00C5, 0x55555619, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2206
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409383.864939836187889522005
    s21_decimal check = {{0x5A165555, 0x4C0FF3B, 0x55555490, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2207
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2208
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2209
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2210
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2211
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2212
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2213
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2214
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2215
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209295167536.512025
    s21_decimal check = {{0x252C3C19, 0x553EFE3C, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2216
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209347986311.509237
    s21_decimal check = {{0xF97E74F5, 0x553F2E45, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2217
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49677592034.893065017417129709
    s21_decimal check = {{0xEC1DEED, 0x676B6769, 0xA084574C, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2218
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49730410809.890276746433215953
    s21_decimal check = {{0xF0353DD1, 0xEF197BE3, 0xA0B0081B, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2219
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -622834614.70980930731744275302
    s21_decimal check = {{0x999AB66, 0xD675EBE6, 0xC93FABFB, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2220
    // 26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 675653389.70702103633352899702
    s21_decimal check = {{0x1AAABC76, 0xD675EBE6, 0xDA50BD0C, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2221
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2222
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2223
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2224
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2225
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759327985645.5
    s21_decimal check = {{0xF0423F47, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2226
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2227
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759327985646.0
    s21_decimal check = {{0xF0423F4C, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2228
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2229
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2230
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2231
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759327985647.5
    s21_decimal check = {{0xF0423F5B, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2232
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2233
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2234
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2235
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2236
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2237
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2238
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2239
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409386.998605864508043122005
    s21_decimal check = {{0x66055555, 0xE51B291D, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2240
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.998605864508043122005
    s21_decimal check = {{0x44A55555, 0x1AE4D6E3, 0x55555570, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2241
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409385.498605864508043122005
    s21_decimal check = {{0x98155555, 0x946CA474, 0x555554E8, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2242
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409389.498605864508043122005
    s21_decimal check = {{0x12955555, 0x6B935B8C, 0x555555C1, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2243
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409386.498605864508043122005
    s21_decimal check = {{0x76B55555, 0xCA36523A, 0x5555551E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2244
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409388.498605864508043122005
    s21_decimal check = {{0x33F55555, 0x35C9ADC6, 0x5555558B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2245
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2246
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2247
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2248
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2249
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691210107817.5013941355
    s21_decimal check = {{0xA8C0306B, 0x51AB1559, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2250
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691262926592.4986058645
    s21_decimal check = {{0x748D3795, 0x58FF954F, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2251
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689778452052.5013941355
    s21_decimal check = {{0x1A197C6B, 0x8AFC7405, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2252
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689831270827.4986058645
    s21_decimal check = {{0xE5E68395, 0x9250F3FA, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2253
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1405246377.5013941354919568780
    s21_decimal check = {{0x6AC7258C, 0xAEA48DED, 0x2D67ECF3, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add2254
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1458065152.4986058645080431220
    s21_decimal check = {{0x3948DA74, 0xFB715ABA, 0x2F1CD50E, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2255
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 0.206148914689804861440
    s21_decimal check = {{0xC6200000, 0x2CE411AF, 0xB, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2256
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -52818775.203360643705891105450
    s21_decimal check = {{0x70CAAAAA, 0x2CE411B0, 0xAAAAAAB5, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2257
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -0.000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2258
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -52818774.997211729016086244010
    s21_decimal check = {{0xAAAAAAAA, 0x0, 0xAAAAAAAA, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2259
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.498605864508043122005
    s21_decimal check = {{0x755555, 0x78BE00B, 0x1B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2260
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -52818774.498605864508043122005
    s21_decimal check = {{0xAA355555, 0xF8741FF5, 0xAAAAAA8E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2261
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409379.575789613081609362651
    s21_decimal check = {{0x60CFDCDB, 0x80D65435, 0x555553A7, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2262
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409395.421422115934476881359
    s21_decimal check = {{0x49DACDCF, 0x7F29ABCB, 0x55555702, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2263
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409379.498605864508043122005
    s21_decimal check = {{0x60555555, 0x51B291D1, 0x555553A3, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2264
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409395.498605864508043122005
    s21_decimal check = {{0x4A555555, 0xAE4D6E2F, 0x55555706, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2265
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409383.864939836187889522005
    s21_decimal check = {{0x5A165555, 0x4C0FF3B, 0x55555490, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2266
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409391.132271892828196722005
    s21_decimal check = {{0x50945555, 0xFB3F00C5, 0x55555619, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2267
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2268
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2269
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2270
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2271
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2272
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2273
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2274
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2275
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209347986311.509237
    s21_decimal check = {{0xF97E74F5, 0x553F2E45, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2276
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209295167536.512025
    s21_decimal check = {{0x252C3C19, 0x553EFE3C, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2277
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49730410809.890276746433215953
    s21_decimal check = {{0xF0353DD1, 0xEF197BE3, 0xA0B0081B, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2278
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49677592034.893065017417129709
    s21_decimal check = {{0xEC1DEED, 0x676B6769, 0xA084574C, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2279
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -675653389.70702103633352899702
    s21_decimal check = {{0x1AAABC76, 0xD675EBE6, 0xDA50BD0C, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2280
    // -26409387.498605864508043122005
    s21_decimal decimal1 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 622834614.70980930731744275302
    s21_decimal check = {{0x999AB66, 0xD675EBE6, 0xC93FABFB, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2281
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2282
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2283
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2284
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2285
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2286
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759327985646
    s21_decimal check = {{0x98069FEE, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2287
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2288
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2289
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2290
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759327985647
    s21_decimal check = {{0x98069FEF, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2291
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2292
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759327985648
    s21_decimal check = {{0x98069FF0, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2293
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 26409388
    s21_decimal check = {{0x192F9AC, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2294
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 26409386
    s21_decimal check = {{0x192F9AA, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2295
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 26409387.5
    s21_decimal check = {{0xFBDC0B3, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2296
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 26409386.5
    s21_decimal check = {{0xFBDC0A9, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2297
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2298
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2299
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2300
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2301
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 26409389.000000000000000000000
    s21_decimal check = {{0x12200000, 0x64077B81, 0x555555A6, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2302
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 26409385.000000000000000000000
    s21_decimal check = {{0x97A00000, 0x8CE0C469, 0x555554CD, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2303
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 26409388.000000000000000000000
    s21_decimal check = {{0x33800000, 0x2E3DCDBB, 0x55555570, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2304
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 26409386.000000000000000000000
    s21_decimal check = {{0x76400000, 0xC2AA722F, 0x55555503, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2305
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2306
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2307
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2308
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2309
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691262926592
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2310
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691210107818
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2311
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689831270827
    s21_decimal check = {{0x192F9AB, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2312
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689778452053
    s21_decimal check = {{0xFE6D0655, 0x55555554, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2313
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1458065152
    s21_decimal check = {{0x56E84F00, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2314
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1405246378
    s21_decimal check = {{0x53C25BAA, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2315
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 52818774.704754779197847983445
    s21_decimal check = {{0x70555555, 0x255831A5, 0xAAAAAA9A, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2316
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -0.704754779197847983445
    s21_decimal check = {{0xC6955555, 0x346FF1BA, 0x26, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2317
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 52818774.498605864508043122005
    s21_decimal check = {{0xAA355555, 0xF8741FF5, 0xAAAAAA8E, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2318
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -0.498605864508043122005
    s21_decimal check = {{0x755555, 0x78BE00B, 0x1B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2319
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 52818774
    s21_decimal check = {{0x325F356, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2320
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2321
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409394.922816251426433759354
    s21_decimal check = {{0x4965787A, 0x779DCBC0, 0x555556E7, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2322
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409379.077183748573566240646
    s21_decimal check = {{0x605A8786, 0x794A742A, 0x5555538C, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2323
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409395
    s21_decimal check = {{0x192F9B3, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2324
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409379
    s21_decimal check = {{0x192F9A3, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2325
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409390.6336660283201536
    s21_decimal check = {{0x5F6C1800, 0x8F3187B5, 0x37EC, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2326
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409383.3663339716798464
    s21_decimal check = {{0x5E69E800, 0x8E2F57B5, 0x37EC, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2327
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2328
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2329
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2330
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2331
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2332
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2333
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2334
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2335
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209295167537.010631
    s21_decimal check = {{0x2533D7C7, 0x553EFE3C, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2336
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209347986311.010631
    s21_decimal check = {{0xF976D947, 0x553F2E45, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2337
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49677592035.391670881925172831
    s21_decimal check = {{0x6BAF8E5F, 0x6E56CECD, 0xA084574C, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2338
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49730410809.391670881925172831
    s21_decimal check = {{0x93478E5F, 0xE82E147F, 0xA0B0081B, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2339
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -622834615.20841517182548587502
    s21_decimal check = {{0x567233EE, 0x8A6A4F1A, 0xC93FABFE, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2340
    // 26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 675653389.20841517182548587502
    s21_decimal check = {{0xCDD233EE, 0x228188B1, 0xDA50BD0A, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2341
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593517540948
    s21_decimal check = {{0xFE6D0654, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2342
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2343
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593517540947
    s21_decimal check = {{0xFE6D0653, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2344
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2345
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759327985646
    s21_decimal check = {{0x98069FEE, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2346
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2347
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759327985646.5
    s21_decimal check = {{0xF0423F51, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2348
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759380804420
    s21_decimal check = {{0x9B2C9344, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2349
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759327985647
    s21_decimal check = {{0x98069FEF, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2350
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759380804421
    s21_decimal check = {{0x9B2C9345, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2351
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759327985648
    s21_decimal check = {{0x98069FF0, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2352
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759380804422
    s21_decimal check = {{0x9B2C9346, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2353
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -26409386
    s21_decimal check = {{0x192F9AA, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2354
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -26409388
    s21_decimal check = {{0x192F9AC, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2355
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -26409386.5
    s21_decimal check = {{0xFBDC0A9, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2356
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -26409387.5
    s21_decimal check = {{0xFBDC0B3, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2357
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2358
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2359
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -26409386.500000000000000000000
    s21_decimal check = {{0x65900000, 0xDD8F4912, 0x5555551E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2360
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -26409387.500000000000000000000
    s21_decimal check = {{0x44300000, 0x1358F6D8, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2361
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -26409385.000000000000000000000
    s21_decimal check = {{0x97A00000, 0x8CE0C469, 0x555554CD, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2362
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -26409389.000000000000000000000
    s21_decimal check = {{0x12200000, 0x64077B81, 0x555555A6, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2363
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -26409386.000000000000000000000
    s21_decimal check = {{0x76400000, 0xC2AA722F, 0x55555503, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2364
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -26409388.000000000000000000000
    s21_decimal check = {{0x33800000, 0x2E3DCDBB, 0x55555570, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2365
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197821574058
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2366
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197874392832
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2367
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508016712618
    s21_decimal check = {{0x53C25BAA, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2368
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508069531392
    s21_decimal check = {{0x56E84F00, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2369
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691210107818
    s21_decimal check = {{0x53C25BAA, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2370
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691262926592
    s21_decimal check = {{0x56E84F00, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2371
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689778452053
    s21_decimal check = {{0xFE6D0655, 0x55555554, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2372
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689831270827
    s21_decimal check = {{0x192F9AB, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2373
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1405246378
    s21_decimal check = {{0x53C25BAA, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2374
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1458065152
    s21_decimal check = {{0x56E84F00, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2375
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 0.704754779197847983445
    s21_decimal check = {{0xC6955555, 0x346FF1BA, 0x26, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2376
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -52818774.704754779197847983445
    s21_decimal check = {{0x70555555, 0x255831A5, 0xAAAAAA9A, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2377
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 0.498605864508043122005
    s21_decimal check = {{0x755555, 0x78BE00B, 0x1B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2378
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -52818774.498605864508043122005
    s21_decimal check = {{0xAA355555, 0xF8741FF5, 0xAAAAAA8E, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2379
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2380
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -52818774
    s21_decimal check = {{0x325F356, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2381
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409379.077183748573566240646
    s21_decimal check = {{0x605A8786, 0x794A742A, 0x5555538C, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2382
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409394.922816251426433759354
    s21_decimal check = {{0x4965787A, 0x779DCBC0, 0x555556E7, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2383
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409379
    s21_decimal check = {{0x192F9A3, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2384
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409395
    s21_decimal check = {{0x192F9B3, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2385
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409383.3663339716798464
    s21_decimal check = {{0x5E69E800, 0x8E2F57B5, 0x37EC, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2386
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409390.6336660283201536
    s21_decimal check = {{0x5F6C1800, 0x8F3187B5, 0x37EC, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2387
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2388
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2389
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2390
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2391
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2392
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2393
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2394
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2395
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209347986311.010631
    s21_decimal check = {{0xF976D947, 0x553F2E45, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2396
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209295167537.010631
    s21_decimal check = {{0x2533D7C7, 0x553EFE3C, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2397
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49730410809.391670881925172831
    s21_decimal check = {{0x93478E5F, 0xE82E147F, 0xA0B0081B, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2398
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49677592035.391670881925172831
    s21_decimal check = {{0x6BAF8E5F, 0x6E56CECD, 0xA084574C, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2399
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -675653389.20841517182548587502
    s21_decimal check = {{0xCDD233EE, 0x228188B1, 0xDA50BD0A, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2400
    // -26409387
    s21_decimal decimal1 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 622834615.20841517182548587502
    s21_decimal check = {{0x567233EE, 0x8A6A4F1A, 0xC93FABFE, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2401
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2402
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2403
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2404
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2405
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2406
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395025.1
    s21_decimal check = {{0xFFFFFFAB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2407
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2408
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395025.6
    s21_decimal check = {{0xFFFFFFB0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2409
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2410
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395026.1
    s21_decimal check = {{0xFFFFFFB5, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2411
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2412
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395027.1
    s21_decimal check = {{0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2413
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2414
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 6.9228162514264337593543950335
    s21_decimal check = {{0xEFFFFFFF, 0xC1DAFD9E, 0xDFB031A1, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2415
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2416
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7.4228162514264337593543950335
    s21_decimal check = {{0x77FFFFFF, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2417
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8.422816251426433759354395033
    s21_decimal check = {{0xD999999, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2418
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.4228162514264337593543950336
    s21_decimal check = {{0x78000000, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2419
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2420
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.4228162514264337593543950334
    s21_decimal check = {{0x77FFFFFE, 0xE0ED7ECF, 0xEFD818D0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2421
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 9.922816251426433759354394934
    s21_decimal check = {{0x69999936, 0xD93A9A13, 0x200FF612, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2422
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 5.9228162514264337593543951335
    s21_decimal check = {{0xE00003E7, 0x83B5FB3D, 0xBF606343, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2423
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2424
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6.9228162514264337593543950334
    s21_decimal check = {{0xEFFFFFFE, 0xC1DAFD9E, 0xDFB031A1, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2425
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2426
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2427
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2428
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2429
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517212.9228162514
    s21_decimal check = {{0x10485D2, 0x55555567, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2430
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517197.0771837486
    s21_decimal check = {{0x1C48E22E, 0x55555542, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2431
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861447.9228162514
    s21_decimal check = {{0x725DD1D2, 0x8EA6B412, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2432
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861432.0771837486
    s21_decimal check = {{0x8DA22E2E, 0x8EA6B3ED, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2433
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655772.9228162514264337594
    s21_decimal check = {{0x87AD2CBA, 0xA08DEE5D, 0x2E426105, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add2434
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655757.0771837485735662406
    s21_decimal check = {{0x1C62D346, 0x987FA4A, 0x2E4260FD, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2435
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409395.627571030624281742799
    s21_decimal check = {{0xFFACDCF, 0xAC0DBD7B, 0x5555570D, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2436
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409379.781938527771414224091
    s21_decimal check = {{0x26EFDCDB, 0xADBA65E5, 0x555553B2, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2437
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409395.421422115934476881359
    s21_decimal check = {{0x49DACDCF, 0x7F29ABCB, 0x55555702, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2438
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409379.575789613081609362651
    s21_decimal check = {{0x60CFDCDB, 0x80D65435, 0x555553A7, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2439
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409394.922816251426433759354
    s21_decimal check = {{0x4965787A, 0x779DCBC0, 0x555556E7, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2440
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409379.077183748573566240646
    s21_decimal check = {{0x605A8786, 0x794A742A, 0x5555538C, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2441
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 15.845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2442
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2443
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 15.922816251426433759354395034
    s21_decimal check = {{0xD999999A, 0x981D9B80, 0x33730B7E, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2444
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0771837485735662406456049665
    s21_decimal check = {{0x80000001, 0xF1281308, 0x27E72F1, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2445
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 11.556482279746587359354395034
    s21_decimal check = {{0xA759999A, 0xB3174C4F, 0x25574C4F, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2446
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 4.2891502231062801593543950335
    s21_decimal check = {{0x767FFFFF, 0x11704E3, 0x8A9704E3, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2447
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2448
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2449
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2450
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2451
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2452
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2453
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2454
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950325
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2455
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576916.087815
    s21_decimal check = {{0xEDC7407, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2456
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576931.933447
    s21_decimal check = {{0xFCE3D07, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2457
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001414.468854630498739072
    s21_decimal check = {{0x2084A380, 0xBD4EF23F, 0xA09A2FB3, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2458
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001430.314487133351606590
    s21_decimal check = {{0xDE72793E, 0x9935F10D, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2459
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649243994.28559892039905211567
    s21_decimal check = {{0xF9AE74AF, 0x63582784, 0xD1C83459, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2460
    // 7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244010.13123142325191963437
    s21_decimal check = {{0x2A95F32D, 0x4993B047, 0xD1C834AF, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2461
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2462
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2463
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2464
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2465
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395025.1
    s21_decimal check = {{0xFFFFFFAB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2466
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2467
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395025.6
    s21_decimal check = {{0xFFFFFFB0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2468
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2469
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395026.1
    s21_decimal check = {{0xFFFFFFB5, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2470
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2471
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395027.1
    s21_decimal check = {{0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2472
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2473
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -6.9228162514264337593543950335
    s21_decimal check = {{0xEFFFFFFF, 0xC1DAFD9E, 0xDFB031A1, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2474
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2475
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7.4228162514264337593543950335
    s21_decimal check = {{0x77FFFFFF, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2476
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2477
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.4228162514264337593543950336
    s21_decimal check = {{0x78000000, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2478
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8.422816251426433759354395033
    s21_decimal check = {{0xD999999, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2479
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.4228162514264337593543950334
    s21_decimal check = {{0x77FFFFFE, 0xE0ED7ECF, 0xEFD818D0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2480
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8.422816251426433759354395034
    s21_decimal check = {{0xD99999A, 0xE981D9B8, 0x1B3730B7, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2481
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -5.9228162514264337593543951335
    s21_decimal check = {{0xE00003E7, 0x83B5FB3D, 0xBF606343, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2482
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -9.922816251426433759354394934
    s21_decimal check = {{0x69999936, 0xD93A9A13, 0x200FF612, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2483
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6.9228162514264337593543950334
    s21_decimal check = {{0xEFFFFFFE, 0xC1DAFD9E, 0xDFB031A1, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2484
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -8.922816251426433759354395034
    s21_decimal check = {{0x8199999A, 0x396A19D6, 0x1CD4C7D6, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2485
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2486
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2487
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2488
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2489
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517197.0771837486
    s21_decimal check = {{0x1C48E22E, 0x55555542, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2490
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517212.9228162514
    s21_decimal check = {{0x10485D2, 0x55555567, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2491
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861432.0771837486
    s21_decimal check = {{0x8DA22E2E, 0x8EA6B3ED, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2492
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861447.9228162514
    s21_decimal check = {{0x725DD1D2, 0x8EA6B412, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2493
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655757.0771837485735662406
    s21_decimal check = {{0x1C62D346, 0x987FA4A, 0x2E4260FD, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add2494
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655772.9228162514264337594
    s21_decimal check = {{0x87AD2CBA, 0xA08DEE5D, 0x2E426105, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2495
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409379.781938527771414224091
    s21_decimal check = {{0x26EFDCDB, 0xADBA65E5, 0x555553B2, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2496
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409395.627571030624281742799
    s21_decimal check = {{0xFFACDCF, 0xAC0DBD7B, 0x5555570D, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2497
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409379.575789613081609362651
    s21_decimal check = {{0x60CFDCDB, 0x80D65435, 0x555553A7, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2498
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409395.421422115934476881359
    s21_decimal check = {{0x49DACDCF, 0x7F29ABCB, 0x55555702, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2499
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409379.077183748573566240646
    s21_decimal check = {{0x605A8786, 0x794A742A, 0x5555538C, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2500
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409394.922816251426433759354
    s21_decimal check = {{0x4965787A, 0x779DCBC0, 0x555556E7, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2501
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2502
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -15.845632502852867518708790067
    s21_decimal check = {{0x33333333, 0x33333333, 0x33333333, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2503
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0771837485735662406456049665
    s21_decimal check = {{0x80000001, 0xF1281308, 0x27E72F1, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2504
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -15.922816251426433759354395034
    s21_decimal check = {{0xD999999A, 0x981D9B80, 0x33730B7E, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2505
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -4.2891502231062801593543950335
    s21_decimal check = {{0x767FFFFF, 0x11704E3, 0x8A9704E3, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2506
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -11.556482279746587359354395034
    s21_decimal check = {{0xA759999A, 0xB3174C4F, 0x25574C4F, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2507
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2508
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2509
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2510
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2511
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2512
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2513
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950325
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2514
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2515
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576931.933447
    s21_decimal check = {{0xFCE3D07, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2516
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576916.087815
    s21_decimal check = {{0xEDC7407, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2517
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001430.314487133351606590
    s21_decimal check = {{0xDE72793E, 0x9935F10D, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2518
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001414.468854630498739072
    s21_decimal check = {{0x2084A380, 0xBD4EF23F, 0xA09A2FB3, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2519
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244010.13123142325191963437
    s21_decimal check = {{0x2A95F32D, 0x4993B047, 0xD1C834AF, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2520
    // -7.9228162514264337593543950335
    s21_decimal decimal1 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649243994.28559892039905211567
    s21_decimal check = {{0xF9AE74AF, 0x63582784, 0xD1C83459, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2521
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2522
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2523
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2524
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2525
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2526
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395025
    s21_decimal check = {{0x99999991, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2527
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2528
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395025.5
    s21_decimal check = {{0xFFFFFFAF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2529
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2530
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395026
    s21_decimal check = {{0x99999992, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2531
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2532
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395027
    s21_decimal check = {{0x99999993, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2533
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 9
    s21_decimal check = {{0x9, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2534
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 7
    s21_decimal check = {{0x7, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2535
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 8.5
    s21_decimal check = {{0x55, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2536
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 7.5
    s21_decimal check = {{0x4B, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2537
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2538
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.5000000000000000000000000001
    s21_decimal check = {{0xF8000001, 0xD21591D7, 0xF2568BC2, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2539
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2540
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 7.4999999999999999999999999999
    s21_decimal check = {{0xF7FFFFFF, 0xD21591D7, 0xF2568BC2, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2541
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 9.999999999999999999999999900
    s21_decimal check = {{0xFFFFF9C, 0x3E250261, 0x204FCE5E, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2542
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 6.0000000000000000000000001000
    s21_decimal check = {{0x600003E8, 0x74DE0E46, 0xC1DED635, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2543
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 9.000000000000000000000000000
    s21_decimal check = {{0x28000000, 0x9E548224, 0x1D14A021, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2544
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 6.9999999999999999999999999999
    s21_decimal check = {{0x6FFFFFFF, 0xB30310A7, 0xE22EA493, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2545
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2546
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2547
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2548
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2549
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517213
    s21_decimal check = {{0x5555555D, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2550
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517197
    s21_decimal check = {{0x5555554D, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2551
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861448
    s21_decimal check = {{0x8, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2552
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861432
    s21_decimal check = {{0xFFFFFFF8, 0x55555554, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2553
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655773
    s21_decimal check = {{0x5555555D, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2554
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655757
    s21_decimal check = {{0x5555554D, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2555
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409395.704754779197847983445
    s21_decimal check = {{0x10755555, 0xDB317FDF, 0x55555711, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2556
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409379.704754779197847983445
    s21_decimal check = {{0x26755555, 0x7E96A381, 0x555553AE, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2557
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409395.498605864508043122005
    s21_decimal check = {{0x4A555555, 0xAE4D6E2F, 0x55555706, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2558
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409379.498605864508043122005
    s21_decimal check = {{0x60555555, 0x51B291D1, 0x555553A3, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2559
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409395
    s21_decimal check = {{0x192F9B3, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2560
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409379
    s21_decimal check = {{0x192F9A3, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2561
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 15.922816251426433759354395034
    s21_decimal check = {{0xD999999A, 0x981D9B80, 0x33730B7E, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2562
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 0.0771837485735662406456049665
    s21_decimal check = {{0x80000001, 0xF1281308, 0x27E72F1, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2563
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 16
    s21_decimal check = {{0x10, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2564
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2565
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 11.6336660283201536
    s21_decimal check = {{0x7E891800, 0x19D4F93, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2566
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 4.3663339716798464
    s21_decimal check = {{0x7D86E800, 0x9B1F93, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2567
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2568
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2569
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2570
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2571
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2572
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2573
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 8.000000000000000000000000001
    s21_decimal check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2574
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7.999999999999999999999999999
    s21_decimal check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2575
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576916.010631
    s21_decimal check = {{0xEDB4687, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2576
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576932.010631
    s21_decimal check = {{0xFCF6A87, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2577
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001414.391670881925172831
    s21_decimal check = {{0x445B8E5F, 0xBC3CBC09, 0xA09A2FB3, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2578
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001430.391670881925172831
    s21_decimal check = {{0xBA9B8E5F, 0x9A482743, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2579
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649243994.20841517182548587502
    s21_decimal check = {{0xF9A233EE, 0xF83AFA7A, 0xD1C83458, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2580
    // 8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244010.20841517182548587502
    s21_decimal check = {{0x2AA233EE, 0xB4B0DD51, 0xD1C834AF, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2581
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950327
    s21_decimal check = {{0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2582
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2583
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950326
    s21_decimal check = {{0xFFFFFFF6, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2584
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2585
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395025
    s21_decimal check = {{0x99999991, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2586
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395041
    s21_decimal check = {{0x999999A1, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2587
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395025.5
    s21_decimal check = {{0xFFFFFFAF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2588
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2589
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395026
    s21_decimal check = {{0x99999992, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2590
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395042
    s21_decimal check = {{0x999999A2, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2591
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395027
    s21_decimal check = {{0x99999993, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2592
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395043
    s21_decimal check = {{0x999999A3, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2593
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -7
    s21_decimal check = {{0x7, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2594
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -9
    s21_decimal check = {{0x9, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2595
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -7.5
    s21_decimal check = {{0x4B, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2596
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -8.5
    s21_decimal check = {{0x55, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2597
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.5000000000000000000000000001
    s21_decimal check = {{0xF8000001, 0xD21591D7, 0xF2568BC2, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2598
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2599
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -7.4999999999999999999999999999
    s21_decimal check = {{0xF7FFFFFF, 0xD21591D7, 0xF2568BC2, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2600
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -8.500000000000000000000000000
    s21_decimal check = {{0xB4000000, 0x4E6C4205, 0x1B770903, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2601
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -6.0000000000000000000000001000
    s21_decimal check = {{0x600003E8, 0x74DE0E46, 0xC1DED635, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2602
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -9.999999999999999999999999900
    s21_decimal check = {{0xFFFFF9C, 0x3E250261, 0x204FCE5E, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2603
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -6.9999999999999999999999999999
    s21_decimal check = {{0x6FFFFFFF, 0xB30310A7, 0xE22EA493, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2604
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -9.000000000000000000000000000
    s21_decimal check = {{0x28000000, 0x9E548224, 0x1D14A021, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2605
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983437
    s21_decimal check = {{0x5555554D, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2606
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983453
    s21_decimal check = {{0x5555555D, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2607
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043121997
    s21_decimal check = {{0x5555554D, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2608
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122013
    s21_decimal check = {{0x5555555D, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2609
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517197
    s21_decimal check = {{0x5555554D, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2610
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517213
    s21_decimal check = {{0x5555555D, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2611
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861432
    s21_decimal check = {{0xFFFFFFF8, 0x55555554, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2612
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861448
    s21_decimal check = {{0x8, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2613
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655757
    s21_decimal check = {{0x5555554D, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2614
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655773
    s21_decimal check = {{0x5555555D, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2615
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409379.704754779197847983445
    s21_decimal check = {{0x26755555, 0x7E96A381, 0x555553AE, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2616
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409395.704754779197847983445
    s21_decimal check = {{0x10755555, 0xDB317FDF, 0x55555711, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2617
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409379.498605864508043122005
    s21_decimal check = {{0x60555555, 0x51B291D1, 0x555553A3, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2618
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409395.498605864508043122005
    s21_decimal check = {{0x4A555555, 0xAE4D6E2F, 0x55555706, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2619
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409379
    s21_decimal check = {{0x192F9A3, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2620
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409395
    s21_decimal check = {{0x192F9B3, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2621
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -0.0771837485735662406456049665
    s21_decimal check = {{0x80000001, 0xF1281308, 0x27E72F1, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2622
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -15.922816251426433759354395034
    s21_decimal check = {{0xD999999A, 0x981D9B80, 0x33730B7E, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2623
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2624
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -16
    s21_decimal check = {{0x10, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2625
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -4.3663339716798464
    s21_decimal check = {{0x7D86E800, 0x9B1F93, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2626
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -11.6336660283201536
    s21_decimal check = {{0x7E891800, 0x19D4F93, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2627
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2628
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2629
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2630
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2631
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2632
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2633
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7.999999999999999999999999999
    s21_decimal check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2634
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -8.000000000000000000000000001
    s21_decimal check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2635
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576932.010631
    s21_decimal check = {{0xFCF6A87, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2636
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576916.010631
    s21_decimal check = {{0xEDB4687, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2637
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001430.391670881925172831
    s21_decimal check = {{0xBA9B8E5F, 0x9A482743, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2638
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001414.391670881925172831
    s21_decimal check = {{0x445B8E5F, 0xBC3CBC09, 0xA09A2FB3, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2639
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244010.20841517182548587502
    s21_decimal check = {{0x2AA233EE, 0xB4B0DD51, 0xD1C834AF, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2640
    // -8
    s21_decimal decimal1 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649243994.20841517182548587502
    s21_decimal check = {{0xF9A233EE, 0xF83AFA7A, 0xD1C83458, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2641
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2642
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950331
    s21_decimal check = {{0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2643
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add2644
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950330
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2645
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2646
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395029.4
    s21_decimal check = {{0xFFFFFFD6, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2647
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2648
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395029.9
    s21_decimal check = {{0xFFFFFFDB, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2649
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395038
    s21_decimal check = {{0x9999999E, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2650
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395030.4
    s21_decimal check = {{0xFFFFFFE0, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2651
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395039
    s21_decimal check = {{0x9999999F, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2652
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395031.4
    s21_decimal check = {{0xFFFFFFEA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2653
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 4.6336660283201536
    s21_decimal check = {{0x70421800, 0xA49EF2, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2654
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 2.6336660283201536
    s21_decimal check = {{0x90C01800, 0x5D910D, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2655
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 4.1336660283201536
    s21_decimal check = {{0x38619800, 0x92DB79, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2656
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 3.1336660283201536
    s21_decimal check = {{0xC8A09800, 0x6F5486, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2657
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 4.1336660283201535999999999999
    s21_decimal check = {{0x117FFFFF, 0x1DFB7C4D, 0x8590E24C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2658
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3.1336660283201536000000000001
    s21_decimal check = {{0x1800001, 0xDFD679EC, 0x654113ED, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2659
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 4.1336660283201536000000000001
    s21_decimal check = {{0x11800001, 0x1DFB7C4D, 0x8590E24C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2660
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 3.1336660283201535999999999999
    s21_decimal check = {{0x17FFFFF, 0xDFD679EC, 0x654113ED, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2661
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 5.6336660283201535999999999000
    s21_decimal check = {{0xA97FFC18, 0x7B32FFDE, 0xB60897D9, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2662
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 1.6336660283201536000000001000
    s21_decimal check = {{0x698003E8, 0x829EF65A, 0x34C95E60, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2663
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 4.6336660283201536000000000001
    s21_decimal check = {{0x99800001, 0x3D0DFD7D, 0x95B8C97B, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2664
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 2.6336660283201535999999999999
    s21_decimal check = {{0x797FFFFF, 0xC0C3F8BB, 0x55192CBE, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2665
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983449
    s21_decimal check = {{0x55555559, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2666
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983441
    s21_decimal check = {{0x55555551, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2667
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122009
    s21_decimal check = {{0x55555559, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2668
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122001
    s21_decimal check = {{0x55555551, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2669
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517208.6336660283
    s21_decimal check = {{0x47C233B, 0x5555555D, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2670
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517201.3663339717
    s21_decimal check = {{0x18D144C5, 0x5555554C, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2671
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861443.6336660283
    s21_decimal check = {{0x75D56F3B, 0x8EA6B408, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2672
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861436.3663339717
    s21_decimal check = {{0x8A2A90C5, 0x8EA6B3F7, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2673
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655768.6336660283201536
    s21_decimal check = {{0x30961800, 0x25B595AF, 0xBD7A6, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2674
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655761.3663339716798464
    s21_decimal check = {{0x2F93E800, 0x24B365AF, 0xBD7A6, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2675
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409391.338420807518001583445
    s21_decimal check = {{0x16B45555, 0x28231275, 0x55555625, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2676
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409384.071088750877694383445
    s21_decimal check = {{0x20365555, 0x31A510EB, 0x5555549B, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2677
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409391.132271892828196722005
    s21_decimal check = {{0x50945555, 0xFB3F00C5, 0x55555619, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2678
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409383.864939836187889522005
    s21_decimal check = {{0x5A165555, 0x4C0FF3B, 0x55555490, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2679
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409390.6336660283201536
    s21_decimal check = {{0x5F6C1800, 0x8F3187B5, 0x37EC, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2680
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409383.3663339716798464
    s21_decimal check = {{0x5E69E800, 0x8E2F57B5, 0x37EC, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2681
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 11.556482279746587359354395034
    s21_decimal check = {{0xA759999A, 0xB3174C4F, 0x25574C4F, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2682
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -4.2891502231062801593543950335
    s21_decimal check = {{0x767FFFFF, 0x11704E3, 0x8A9704E3, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2683
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 11.6336660283201536
    s21_decimal check = {{0x7E891800, 0x19D4F93, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2684
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -4.3663339716798464
    s21_decimal check = {{0x7D86E800, 0x9B1F93, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2685
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 7.2673320566403072
    s21_decimal check = {{0x1023000, 0x1023000, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2686
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.0000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2687
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2688
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2689
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2690
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2691
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536000000000001
    s21_decimal check = {{0x89800001, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2692
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201535999999999999
    s21_decimal check = {{0x897FFFFF, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2693
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536000000000010
    s21_decimal check = {{0x8980000A, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2694
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201535999999999990
    s21_decimal check = {{0x897FFFF6, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2695
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576920.376965
    s21_decimal check = {{0xF1DE685, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2696
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576927.644297
    s21_decimal check = {{0xF8CCA89, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2697
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001418.758004853605019231
    s21_decimal check = {{0x4D0E2E5F, 0xF8D511A6, 0xA09A2FB3, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2698
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001426.025336910245326431
    s21_decimal check = {{0xB1E8EE5F, 0x5DAFD1A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2699
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649243998.57474914350533227502
    s21_decimal check = {{0x5F68B3EE, 0xA3BC6BD2, 0xD1C83470, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2700
    // 3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244005.84208120014563947502
    s21_decimal check = {{0xC4DBB3EE, 0x92F6BF9, 0xD1C83498, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2701
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950331
    s21_decimal check = {{0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2702
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2703
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950330
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2704
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add2705
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395029.4
    s21_decimal check = {{0xFFFFFFD6, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2706
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2707
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395029.9
    s21_decimal check = {{0xFFFFFFDB, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2708
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395037
    s21_decimal check = {{0x9999999D, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2709
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395030.4
    s21_decimal check = {{0xFFFFFFE0, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2710
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395038
    s21_decimal check = {{0x9999999E, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2711
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395031.4
    s21_decimal check = {{0xFFFFFFEA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2712
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395039
    s21_decimal check = {{0x9999999F, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2713
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -2.6336660283201536
    s21_decimal check = {{0x90C01800, 0x5D910D, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2714
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -4.6336660283201536
    s21_decimal check = {{0x70421800, 0xA49EF2, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2715
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -3.1336660283201536
    s21_decimal check = {{0xC8A09800, 0x6F5486, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2716
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -4.1336660283201536
    s21_decimal check = {{0x38619800, 0x92DB79, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2717
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3.1336660283201536000000000001
    s21_decimal check = {{0x1800001, 0xDFD679EC, 0x654113ED, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2718
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -4.1336660283201535999999999999
    s21_decimal check = {{0x117FFFFF, 0x1DFB7C4D, 0x8590E24C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2719
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -3.1336660283201535999999999999
    s21_decimal check = {{0x17FFFFF, 0xDFD679EC, 0x654113ED, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2720
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -4.1336660283201536000000000001
    s21_decimal check = {{0x11800001, 0x1DFB7C4D, 0x8590E24C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2721
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -1.6336660283201536000000001000
    s21_decimal check = {{0x698003E8, 0x829EF65A, 0x34C95E60, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2722
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -5.6336660283201535999999999000
    s21_decimal check = {{0xA97FFC18, 0x7B32FFDE, 0xB60897D9, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2723
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -2.6336660283201535999999999999
    s21_decimal check = {{0x797FFFFF, 0xC0C3F8BB, 0x55192CBE, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2724
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -4.6336660283201536000000000001
    s21_decimal check = {{0x99800001, 0x3D0DFD7D, 0x95B8C97B, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2725
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983441
    s21_decimal check = {{0x55555551, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2726
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983449
    s21_decimal check = {{0x55555559, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2727
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122001
    s21_decimal check = {{0x55555551, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2728
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122009
    s21_decimal check = {{0x55555559, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2729
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517201.3663339717
    s21_decimal check = {{0x18D144C5, 0x5555554C, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2730
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517208.6336660283
    s21_decimal check = {{0x47C233B, 0x5555555D, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2731
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861436.3663339717
    s21_decimal check = {{0x8A2A90C5, 0x8EA6B3F7, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2732
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861443.6336660283
    s21_decimal check = {{0x75D56F3B, 0x8EA6B408, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2733
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655761.3663339716798464
    s21_decimal check = {{0x2F93E800, 0x24B365AF, 0xBD7A6, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2734
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655768.6336660283201536
    s21_decimal check = {{0x30961800, 0x25B595AF, 0xBD7A6, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2735
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409384.071088750877694383445
    s21_decimal check = {{0x20365555, 0x31A510EB, 0x5555549B, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2736
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409391.338420807518001583445
    s21_decimal check = {{0x16B45555, 0x28231275, 0x55555625, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2737
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409383.864939836187889522005
    s21_decimal check = {{0x5A165555, 0x4C0FF3B, 0x55555490, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2738
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409391.132271892828196722005
    s21_decimal check = {{0x50945555, 0xFB3F00C5, 0x55555619, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2739
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409383.3663339716798464
    s21_decimal check = {{0x5E69E800, 0x8E2F57B5, 0x37EC, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2740
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409390.6336660283201536
    s21_decimal check = {{0x5F6C1800, 0x8F3187B5, 0x37EC, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2741
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 4.2891502231062801593543950335
    s21_decimal check = {{0x767FFFFF, 0x11704E3, 0x8A9704E3, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2742
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -11.556482279746587359354395034
    s21_decimal check = {{0xA759999A, 0xB3174C4F, 0x25574C4F, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2743
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 4.3663339716798464
    s21_decimal check = {{0x7D86E800, 0x9B1F93, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2744
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -11.6336660283201536
    s21_decimal check = {{0x7E891800, 0x19D4F93, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2745
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -0.0000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2746
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -7.2673320566403072
    s21_decimal check = {{0x1023000, 0x1023000, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2747
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2748
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2749
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2750
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2751
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201535999999999999
    s21_decimal check = {{0x897FFFFF, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2752
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536000000000001
    s21_decimal check = {{0x89800001, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2753
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201535999999999990
    s21_decimal check = {{0x897FFFF6, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2754
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536000000000010
    s21_decimal check = {{0x8980000A, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2755
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576927.644297
    s21_decimal check = {{0xF8CCA89, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2756
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576920.376965
    s21_decimal check = {{0xF1DE685, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2757
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001426.025336910245326431
    s21_decimal check = {{0xB1E8EE5F, 0x5DAFD1A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2758
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001418.758004853605019231
    s21_decimal check = {{0x4D0E2E5F, 0xF8D511A6, 0xA09A2FB3, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2759
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244005.84208120014563947502
    s21_decimal check = {{0xC4DBB3EE, 0x92F6BF9, 0xD1C83498, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2760
    // -3.6336660283201536
    s21_decimal decimal1 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649243998.57474914350533227502
    s21_decimal check = {{0x5F68B3EE, 0xA3BC6BD2, 0xD1C83470, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2761
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2762
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2763
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2764
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2765
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2766
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2767
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2768
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2769
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2770
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2771
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2772
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2773
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2774
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2775
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2776
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2777
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2778
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2779
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2780
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2781
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2782
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2783
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2784
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2785
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2786
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2787
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2788
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2789
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2790
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2791
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2792
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2793
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2794
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2795
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2796
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2797
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2798
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2799
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2800
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2801
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2802
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2803
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2804
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2805
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2806
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2807
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2808
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2809
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2810
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2811
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2812
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2813
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2814
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2815
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2816
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2817
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2818
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2819
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2820
    // -0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2821
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2822
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2823
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2824
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2825
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2826
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033
    s21_decimal check = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2827
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2828
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2829
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2830
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2831
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2832
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2833
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2834
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1
    s21_decimal check = {{0x1, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2835
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2836
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5
    s21_decimal check = {{0x5, 0x0, 0x0, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2837
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2838
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2839
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2840
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2841
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2842
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2843
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2844
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2845
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2846
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2847
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2848
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2849
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2850
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205
    s21_decimal check = {{0x55555555, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2851
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2852
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440
    s21_decimal check = {{0x0, 0x55555555, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2853
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2854
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765
    s21_decimal check = {{0x55555555, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2855
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2856
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2857
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2858
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2859
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2860
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387
    s21_decimal check = {{0x192F9AB, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2861
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2862
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2863
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2864
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8
    s21_decimal check = {{0x8, 0x0, 0x0, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2865
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x100000}};

    test_add(decimal1, decimal2, check);

#test test_add2866
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201536
    s21_decimal check = {{0x811800, 0x811800, 0x0, 0x80100000}};

    test_add(decimal1, decimal2, check);

#test test_add2867
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2868
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0
    s21_decimal check = {{0x0, 0x0, 0x0, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2869
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2870
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2871
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2872
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2873
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2874
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2875
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2876
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2877
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2878
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2879
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2880
    // 0
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2881
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2882
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2883
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2884
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2885
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2886
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2887
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2888
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2889
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2890
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2891
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2892
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2893
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2894
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2895
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2896
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2897
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2898
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2899
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2900
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2901
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2902
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2903
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2904
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2905
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2906
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2907
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2908
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2909
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2910
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2911
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2912
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2913
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add2914
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2915
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2916
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2917
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2918
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2919
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2920
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2921
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2922
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2923
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2924
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2925
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2926
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2927
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2928
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2929
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2930
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2931
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2932
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2933
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2934
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2935
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2936
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2937
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2938
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2939
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add2940
    // -0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add2941
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2942
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2943
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2944
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2945
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2946
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2947
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add2948
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add2949
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2950
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2951
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2952
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2953
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2954
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2955
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2956
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2957
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2958
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2959
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2960
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2961
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2962
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal check = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2963
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2964
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2965
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2966
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2967
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add2968
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add2969
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2970
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2971
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add2972
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add2973
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add2974
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add2975
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2976
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2977
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2978
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2979
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add2980
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add2981
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2982
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2983
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2984
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add2985
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2986
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201536000000000000
    s21_decimal check = {{0x89800000, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2987
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2988
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2989
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2990
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2991
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2992
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2993
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2994
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add2995
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add2996
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add2997
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add2998
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add2999
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3000
    // 0.0000000000000000000000000000
    s21_decimal decimal1 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3001
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3002
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3003
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3004
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3005
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3006
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3007
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3008
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3009
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3010
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3011
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3012
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3013
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3014
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3015
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3016
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3017
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3018
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999998
    s21_decimal check = {{0x87FFFFFE, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3019
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3020
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3021
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999001
    s21_decimal check = {{0x1FFFFC19, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3022
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999998999
    s21_decimal check = {{0x1FFFFC17, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3023
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3024
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3025
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3026
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3027
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3028
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3029
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3030
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3031
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3032
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3033
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add3034
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add3035
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3036
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3037
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3038
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3039
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3040
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3041
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3042
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3043
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3044
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3045
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201536000000000001
    s21_decimal check = {{0x89800001, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3046
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201535999999999999
    s21_decimal check = {{0x897FFFFF, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3047
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3048
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3049
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3050
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3051
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3052
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3053
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000011
    s21_decimal check = {{0xB, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3054
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000009
    s21_decimal check = {{0x9, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3055
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3056
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3057
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3058
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3059
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3060
    // 0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3061
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3062
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3063
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3064
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3065
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3066
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3067
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3068
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3069
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3070
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3071
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3072
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3073
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.9999999999999999999999999999
    s21_decimal check = {{0xFFFFFFF, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3074
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000001
    s21_decimal check = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3075
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.4999999999999999999999999999
    s21_decimal check = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3076
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000001
    s21_decimal check = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3077
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999998
    s21_decimal check = {{0x87FFFFFE, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3078
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3079
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000000
    s21_decimal check = {{0x88000000, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3080
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000002
    s21_decimal check = {{0x88000002, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3081
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999998999
    s21_decimal check = {{0x1FFFFC17, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3082
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999001
    s21_decimal check = {{0x1FFFFC19, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3083
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000000
    s21_decimal check = {{0x10000000, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3084
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000002
    s21_decimal check = {{0x10000002, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3085
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3086
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3087
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3088
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3089
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3090
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3091
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3092
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3093
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add3094
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add3095
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3096
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3097
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3098
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3099
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3100
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3101
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3102
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3103
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3104
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8.000000000000000000000000000
    s21_decimal check = {{0x40000000, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3105
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201535999999999999
    s21_decimal check = {{0x897FFFFF, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3106
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201536000000000001
    s21_decimal check = {{0x89800001, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3107
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3108
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3109
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3110
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal check = {{0x1, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3111
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3112
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000002
    s21_decimal check = {{0x2, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3113
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000009
    s21_decimal check = {{0x9, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3114
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000011
    s21_decimal check = {{0xB, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3115
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3116
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3117
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3118
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3119
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3120
    // -0.0000000000000000000000000001
    s21_decimal decimal1 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3121
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3122
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3123
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3124
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3125
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3126
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3127
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3128
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3129
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3130
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3131
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3132
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3133
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 1.0000000000000000000000000010
    s21_decimal check = {{0x1000000A, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3134
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -0.9999999999999999999999999990
    s21_decimal check = {{0xFFFFFF6, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3135
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.5000000000000000000000000010
    s21_decimal check = {{0x8800000A, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3136
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.4999999999999999999999999990
    s21_decimal check = {{0x87FFFFF6, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3137
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000009
    s21_decimal check = {{0x88000009, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3138
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999989
    s21_decimal check = {{0x87FFFFF5, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3139
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.5000000000000000000000000011
    s21_decimal check = {{0x8800000B, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3140
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.4999999999999999999999999991
    s21_decimal check = {{0x87FFFFF7, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3141
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999999010
    s21_decimal check = {{0x1FFFFC22, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3142
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999998990
    s21_decimal check = {{0x1FFFFC0E, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3143
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 1.0000000000000000000000000011
    s21_decimal check = {{0x1000000B, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3144
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -0.9999999999999999999999999991
    s21_decimal check = {{0xFFFFFF7, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3145
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3146
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3147
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3148
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3149
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3150
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3151
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3152
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3153
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add3154
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add3155
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3156
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3157
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3158
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3159
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3160
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3161
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3162
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.9228162514264337593543950325
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3163
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 8.000000000000000000000000001
    s21_decimal check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3164
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -7.999999999999999999999999999
    s21_decimal check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3165
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201536000000000010
    s21_decimal check = {{0x8980000A, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3166
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201535999999999990
    s21_decimal check = {{0x897FFFF6, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3167
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3168
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3169
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3170
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3171
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000011
    s21_decimal check = {{0xB, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3172
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000009
    s21_decimal check = {{0x9, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3173
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 0.0000000000000000000000000020
    s21_decimal check = {{0x14, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3174
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3175
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3176
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3177
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3178
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3179
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3180
    // 0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3181
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3182
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950335
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3183
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3184
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337593543950334
    s21_decimal check = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3185
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3186
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395033.0
    s21_decimal check = {{0xFFFFFFFA, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3187
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3188
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433759354395033.5
    s21_decimal check = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3189
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3190
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3191
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3192
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433759354395035
    s21_decimal check = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3193
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 0.9999999999999999999999999990
    s21_decimal check = {{0xFFFFFF6, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3194
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -1.0000000000000000000000000010
    s21_decimal check = {{0x1000000A, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3195
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 0.4999999999999999999999999990
    s21_decimal check = {{0x87FFFFF6, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3196
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -0.5000000000000000000000000010
    s21_decimal check = {{0x8800000A, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3197
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999989
    s21_decimal check = {{0x87FFFFF5, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3198
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000009
    s21_decimal check = {{0x88000009, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3199
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 0.4999999999999999999999999991
    s21_decimal check = {{0x87FFFFF7, 0x1F128130, 0x1027E72F, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3200
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -0.5000000000000000000000000011
    s21_decimal check = {{0x8800000B, 0x1F128130, 0x1027E72F, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3201
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 1.9999999999999999999999998990
    s21_decimal check = {{0x1FFFFC0E, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3202
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -1.9999999999999999999999999010
    s21_decimal check = {{0x1FFFFC22, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3203
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 0.9999999999999999999999999991
    s21_decimal check = {{0xFFFFFF7, 0x3E250261, 0x204FCE5E, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3204
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -1.0000000000000000000000000011
    s21_decimal check = {{0x1000000B, 0x3E250261, 0x204FCE5E, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3205
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3206
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197847983445
    s21_decimal check = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3207
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3208
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3209
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3210
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691236517205.0000000000
    s21_decimal check = {{0x8EA6B400, 0x55555554, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3211
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3212
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689804861440.0000000000
    s21_decimal check = {{0x0, 0x8EA6B400, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3213
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add3214
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -1431655765.0000000000000000000
    s21_decimal check = {{0xD2080000, 0x550AF453, 0x2E426101, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add3215
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3216
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -26409387.704754779197847983445
    s21_decimal check = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3217
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3218
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -26409387.498605864508043122005
    s21_decimal check = {{0x55555555, 0x0, 0x55555555, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3219
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x150000}};

    test_add(decimal1, decimal2, check);

#test test_add3220
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -26409387.000000000000000000000
    s21_decimal check = {{0x54E00000, 0xF8741FF5, 0x55555539, 0x80150000}};

    test_add(decimal1, decimal2, check);

#test test_add3221
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 7.9228162514264337593543950325
    s21_decimal check = {{0xFFFFFFF5, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3222
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -7.922816251426433759354395034
    s21_decimal check = {{0x9999999A, 0x99999999, 0x19999999, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3223
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 7.999999999999999999999999999
    s21_decimal check = {{0x3FFFFFFF, 0xFE8401E7, 0x19D971E4, 0x1B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3224
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -8.000000000000000000000000001
    s21_decimal check = {{0x40000001, 0xFE8401E7, 0x19D971E4, 0x801B0000}};

    test_add(decimal1, decimal2, check);

#test test_add3225
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 3.6336660283201535999999999990
    s21_decimal check = {{0x897FFFF6, 0xFEE8FB1C, 0x7568FB1C, 0x1C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3226
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -3.6336660283201536000000000010
    s21_decimal check = {{0x8980000A, 0xFEE8FB1C, 0x7568FB1C, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3227
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3228
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3229
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3230
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000010
    s21_decimal check = {{0xA, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3231
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000009
    s21_decimal check = {{0x9, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3232
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000011
    s21_decimal check = {{0xB, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3233
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -0.0000000000000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3234
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -0.0000000000000000000000000020
    s21_decimal check = {{0x14, 0x0, 0x0, 0x801C0000}};

    test_add(decimal1, decimal2, check);

#test test_add3235
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3236
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3237
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3238
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3239
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3240
    // -0.0000000000000000000000000010
    s21_decimal decimal1 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3241
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228106389283212384222373411
    s21_decimal check = {{0x3AC4E623, 0x756BD584, 0xFFFFF41D, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3242
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add3243
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228106389283212384222373410
    s21_decimal check = {{0x3AC4E622, 0x756BD584, 0xFFFFF41D, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3244
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add3245
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922760126445308550032818109.0
    s21_decimal check = {{0x4BB0FD62, 0x9636572A, 0xFFFF8926, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3246
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922872376407558968675971957
    s21_decimal check = {{0x5ED4B375, 0x242DC415, 0x1999A57C, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3247
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922760126445308550032818109.5
    s21_decimal check = {{0x4BB0FD67, 0x9636572A, 0xFFFF8926, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3248
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922872376407558968675971958
    s21_decimal check = {{0x5ED4B376, 0x242DC415, 0x1999A57C, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3249
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922760126445308550032818110.0
    s21_decimal check = {{0x4BB0FD6C, 0x9636572A, 0xFFFF8926, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3250
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922872376407558968675971958
    s21_decimal check = {{0x5ED4B376, 0x242DC415, 0x1999A57C, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3251
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922760126445308550032818111.0
    s21_decimal check = {{0x4BB0FD76, 0x9636572A, 0xFFFF8926, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3252
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922872376407558968675971959
    s21_decimal check = {{0x5ED4B377, 0x242DC415, 0x1999A57C, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3253
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -56124981125209321576923.010631
    s21_decimal check = {{0xF461647, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3254
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -56124981125209321576925.010631
    s21_decimal check = {{0xF649AC7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3255
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3256
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3257
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3258
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3259
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3260
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3261
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -56124981125209321576922.010631
    s21_decimal check = {{0xF36D407, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3262
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -56124981125209321576926.010631
    s21_decimal check = {{0xF73DD07, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3263
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -56124981125209321576923.010631
    s21_decimal check = {{0xF461647, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3264
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -56124981125209321576925.010631
    s21_decimal check = {{0xF649AC7, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3265
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409331379773653988526406521
    s21_decimal check = {{0x901A3B79, 0xCAC12AD9, 0x55554972, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3266
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409443629735904407169560369
    s21_decimal check = {{0x1A906F31, 0xDFE97FD1, 0x55556137, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3267
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409331373624739298721545081
    s21_decimal check = {{0x901A3B79, 0x756BD584, 0x55554972, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3268
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409443623586989717364698929
    s21_decimal check = {{0x1A906F31, 0x8A942A7C, 0x55556137, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3269
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // -56118832210518085059719.010631
    s21_decimal check = {{0xBA051947, 0xFFE9C0EB, 0xB55468F5, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3270
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -56131130039900558094129.010631
    s21_decimal check = {{0x64A597C7, 0xAA946B96, 0xB55E9520, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3271
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // -56118832210519516715484.010631
    s21_decimal check = {{0xF555887, 0xFFEED701, 0xB55468F5, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3272
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -56131130039899126438364.010631
    s21_decimal check = {{0xF555887, 0xAA8F5581, 0xB55E9520, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3273
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -56124981125207889921159.010631
    s21_decimal check = {{0xBA051947, 0x553A002B, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3274
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -56124981125210753232689.010631
    s21_decimal check = {{0x64A597C7, 0x55442C56, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3275
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -56124981125209295167536.305876
    s21_decimal check = {{0x252916D4, 0x553EFE3C, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3276
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -56124981125209347986311.715386
    s21_decimal check = {{0xF9819A3A, 0x553F2E45, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3277
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -56124981125209295167536.512025
    s21_decimal check = {{0x252C3C19, 0x553EFE3C, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3278
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -56124981125209347986311.509237
    s21_decimal check = {{0xF97E74F5, 0x553F2E45, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3279
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -56124981125209295167537.010631
    s21_decimal check = {{0x2533D7C7, 0x553EFE3C, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3280
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -56124981125209347986311.010631
    s21_decimal check = {{0xF976D947, 0x553F2E45, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3281
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -56124981125209321576916.087815
    s21_decimal check = {{0xEDC7407, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3282
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -56124981125209321576931.933447
    s21_decimal check = {{0xFCE3D07, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3283
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -56124981125209321576916.010631
    s21_decimal check = {{0xEDB4687, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3284
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -56124981125209321576932.010631
    s21_decimal check = {{0xFCF6A87, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3285
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -56124981125209321576920.376965
    s21_decimal check = {{0xF1DE685, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3286
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -56124981125209321576927.644297
    s21_decimal check = {{0xF8CCA89, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3287
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3288
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3289
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3290
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3291
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3292
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3293
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3294
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3295
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -112249962250418643153848.02126
    s21_decimal check = {{0x9CAAAB4E, 0xAAA637A6, 0x24451968, 0x80050000}};

    test_add(decimal1, decimal2, check);

#test test_add3296
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -0.000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3297
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -56124981125259025578346.402302
    s21_decimal check = {{0xB407D1FE, 0x55EFABC7, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3298
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -56124981125159617575501.618960
    s21_decimal check = {{0x6AA2DF10, 0x548E80BA, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3299
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -56124981125209970820926.219046
    s21_decimal check = {{0xF5752326, 0x554164BC, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3300
    // -56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -56124981125208672332921.802216
    s21_decimal check = {{0x29358DE8, 0x553CC7C5, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3301
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add3302
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228106389283212384222373411
    s21_decimal check = {{0x3AC4E623, 0x756BD584, 0xFFFFF41D, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3303
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add3304
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228106389283212384222373410
    s21_decimal check = {{0x3AC4E622, 0x756BD584, 0xFFFFF41D, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3305
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922872376407558968675971957
    s21_decimal check = {{0x5ED4B375, 0x242DC415, 0x1999A57C, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3306
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922760126445308550032818109.0
    s21_decimal check = {{0x4BB0FD62, 0x9636572A, 0xFFFF8926, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3307
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922872376407558968675971958
    s21_decimal check = {{0x5ED4B376, 0x242DC415, 0x1999A57C, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3308
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922760126445308550032818109.5
    s21_decimal check = {{0x4BB0FD67, 0x9636572A, 0xFFFF8926, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3309
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922872376407558968675971958
    s21_decimal check = {{0x5ED4B376, 0x242DC415, 0x1999A57C, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3310
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922760126445308550032818110.0
    s21_decimal check = {{0x4BB0FD6C, 0x9636572A, 0xFFFF8926, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3311
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922872376407558968675971959
    s21_decimal check = {{0x5ED4B377, 0x242DC415, 0x1999A57C, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3312
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922760126445308550032818111.0
    s21_decimal check = {{0x4BB0FD76, 0x9636572A, 0xFFFF8926, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3313
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 56124981125209321576925.010631
    s21_decimal check = {{0xF649AC7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3314
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 56124981125209321576923.010631
    s21_decimal check = {{0xF461647, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3315
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3316
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3317
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3318
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3319
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 56124981125209321576924.510631
    s21_decimal check = {{0xF5CF9A7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3320
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 56124981125209321576923.510631
    s21_decimal check = {{0xF4DB767, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3321
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 56124981125209321576926.010631
    s21_decimal check = {{0xF73DD07, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3322
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 56124981125209321576922.010631
    s21_decimal check = {{0xF36D407, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3323
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 56124981125209321576925.010631
    s21_decimal check = {{0xF649AC7, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3324
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 56124981125209321576923.010631
    s21_decimal check = {{0xF461647, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3325
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409443629735904407169560369
    s21_decimal check = {{0x1A906F31, 0xDFE97FD1, 0x55556137, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3326
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409331379773653988526406521
    s21_decimal check = {{0x901A3B79, 0xCAC12AD9, 0x55554972, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3327
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409443623586989717364698929
    s21_decimal check = {{0x1A906F31, 0x8A942A7C, 0x55556137, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3328
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409331373624739298721545081
    s21_decimal check = {{0x901A3B79, 0x756BD584, 0x55554972, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3329
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 56131130039900558094129.010631
    s21_decimal check = {{0x64A597C7, 0xAA946B96, 0xB55E9520, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3330
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // 56118832210518085059719.010631
    s21_decimal check = {{0xBA051947, 0xFFE9C0EB, 0xB55468F5, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3331
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 56131130039899126438364.010631
    s21_decimal check = {{0xF555887, 0xAA8F5581, 0xB55E9520, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3332
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // 56118832210519516715484.010631
    s21_decimal check = {{0xF555887, 0xFFEED701, 0xB55468F5, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3333
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 56124981125210753232689.010631
    s21_decimal check = {{0x64A597C7, 0x55442C56, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3334
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 56124981125207889921159.010631
    s21_decimal check = {{0xBA051947, 0x553A002B, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3335
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 56124981125209347986311.715386
    s21_decimal check = {{0xF9819A3A, 0x553F2E45, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3336
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 56124981125209295167536.305876
    s21_decimal check = {{0x252916D4, 0x553EFE3C, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3337
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 56124981125209347986311.509237
    s21_decimal check = {{0xF97E74F5, 0x553F2E45, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3338
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 56124981125209295167536.512025
    s21_decimal check = {{0x252C3C19, 0x553EFE3C, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3339
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 56124981125209347986311.010631
    s21_decimal check = {{0xF976D947, 0x553F2E45, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3340
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 56124981125209295167537.010631
    s21_decimal check = {{0x2533D7C7, 0x553EFE3C, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3341
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 56124981125209321576931.933447
    s21_decimal check = {{0xFCE3D07, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3342
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 56124981125209321576916.087815
    s21_decimal check = {{0xEDC7407, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3343
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 56124981125209321576932.010631
    s21_decimal check = {{0xFCF6A87, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3344
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 56124981125209321576916.010631
    s21_decimal check = {{0xEDB4687, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3345
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 56124981125209321576927.644297
    s21_decimal check = {{0xF8CCA89, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3346
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 56124981125209321576920.376965
    s21_decimal check = {{0xF1DE685, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3347
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3348
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3349
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3350
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3351
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3352
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3353
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3354
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 56124981125209321576924.010631
    s21_decimal check = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3355
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // 0.000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3356
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 112249962250418643153848.02126
    s21_decimal check = {{0x9CAAAB4E, 0xAAA637A6, 0x24451968, 0x50000}};

    test_add(decimal1, decimal2, check);

#test test_add3357
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 56124981125159617575501.618960
    s21_decimal check = {{0x6AA2DF10, 0x548E80BA, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3358
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 56124981125259025578346.402302
    s21_decimal check = {{0xB407D1FE, 0x55EFABC7, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3359
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 56124981125208672332921.802216
    s21_decimal check = {{0x29358DE8, 0x553CC7C5, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3360
    // 56124981125209321576924.010631
    s21_decimal decimal1 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 56124981125209970820926.219046
    s21_decimal check = {{0xF5752326, 0x554164BC, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3361
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337543839948913
    s21_decimal check = {{0x6D692071, 0xFFFFFFF4, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3362
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add3363
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337543839948912
    s21_decimal check = {{0x6D692070, 0xFFFFFFF4, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3364
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add3365
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433709650393610.6
    s21_decimal check = {{0x461B446A, 0xFFFFFF8C, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3366
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433809058396455
    s21_decimal check = {{0x2C307927, 0x999999A5, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3367
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433709650393611.1
    s21_decimal check = {{0x461B446F, 0xFFFFFF8C, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3368
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433809058396456
    s21_decimal check = {{0x2C307928, 0x999999A5, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3369
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433709650393611.6
    s21_decimal check = {{0x461B4474, 0xFFFFFF8C, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3370
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433809058396456
    s21_decimal check = {{0x2C307928, 0x999999A5, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3371
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433709650393612.6
    s21_decimal check = {{0x461B447E, 0xFFFFFF8C, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3372
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433809058396457
    s21_decimal check = {{0x2C307929, 0x999999A5, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3373
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -49704001421.391670881925172831
    s21_decimal check = {{0xD8178E5F, 0x1D61BAF2, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3374
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -49704001423.391670881925172831
    s21_decimal check = {{0x26DF8E5F, 0x3923285A, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3375
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3376
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3377
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3378
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3379
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3380
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3381
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -49704001420.391670881925172831
    s21_decimal check = {{0x30B38E5F, 0xF81043F, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3382
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -49704001424.391670881925172831
    s21_decimal check = {{0xCE438E5F, 0x4703DF0D, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3383
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -49704001421.391670881925172831
    s21_decimal check = {{0xD8178E5F, 0x1D61BAF2, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3384
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -49704001423.391670881925172831
    s21_decimal check = {{0x26DF8E5F, 0x3923285A, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3385
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779148143982023
    s21_decimal check = {{0xC2BE75C7, 0x55555549, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3386
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779247551984867
    s21_decimal check = {{0xE7EC34E3, 0x55555560, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3387
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864458339120583
    s21_decimal check = {{0xC2BE75C7, 0xFFFFFFF4, 0x55555554, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3388
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864557747123427
    s21_decimal check = {{0xE7EC34E3, 0xB, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3389
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914641532515782.6083291181
    s21_decimal check = {{0x12FE002D, 0x638479D3, 0xC6AEA13A, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3390
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914740940518627.3916708819
    s21_decimal check = {{0xA4F67D3, 0x472630D6, 0xC6AEA170, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3391
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914640100860017.6083291181
    s21_decimal check = {{0x84574C2D, 0x9CD5D87E, 0xC6AEA139, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3392
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914739508862862.3916708819
    s21_decimal check = {{0x7BA8B3D3, 0x80778F81, 0xC6AEA16F, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3393
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // -48272345657.391670881925172831
    s21_decimal check = {{0xB7478E5F, 0xA2C15937, 0x9BF9F2CD, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3394
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -51135657187.391670881925172831
    s21_decimal check = {{0x47AF8E5F, 0xB3C38A15, 0xA53A6C9A, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3395
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -49677592034.686916102727324848
    s21_decimal check = {{0x8FD6D4B0, 0x648F0410, 0xA084574C, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3396
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -49730410810.096425661123020814
    s21_decimal check = {{0x6F20480E, 0xF1F5DF3C, 0xA0B0081B, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3397
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -49677592034.893065017417129709
    s21_decimal check = {{0xEC1DEED, 0x676B6769, 0xA084574C, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3398
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -49730410809.890276746433215953
    s21_decimal check = {{0xF0353DD1, 0xEF197BE3, 0xA0B0081B, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3399
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -49677592035.391670881925172831
    s21_decimal check = {{0x6BAF8E5F, 0x6E56CECD, 0xA084574C, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3400
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -49730410809.391670881925172831
    s21_decimal check = {{0x93478E5F, 0xE82E147F, 0xA0B0081B, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3401
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -49704001414.468854630498739072
    s21_decimal check = {{0x2084A380, 0xBD4EF23F, 0xA09A2FB3, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3402
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -49704001430.314487133351606590
    s21_decimal check = {{0xDE72793E, 0x9935F10D, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3403
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -49704001414.391670881925172831
    s21_decimal check = {{0x445B8E5F, 0xBC3CBC09, 0xA09A2FB3, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3404
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -49704001430.391670881925172831
    s21_decimal check = {{0xBA9B8E5F, 0x9A482743, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3405
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -49704001418.758004853605019231
    s21_decimal check = {{0x4D0E2E5F, 0xF8D511A6, 0xA09A2FB3, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3406
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -49704001426.025336910245326431
    s21_decimal check = {{0xB1E8EE5F, 0x5DAFD1A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3407
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3408
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3409
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3410
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3411
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3412
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3413
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3414
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3415
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125259025578346.402302
    s21_decimal check = {{0xB407D1FE, 0x55EFABC7, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3416
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125159617575501.618960
    s21_decimal check = {{0x6AA2DF10, 0x548E80BA, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3417
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -99408002844.78334176385034566
    s21_decimal check = {{0xE64BE946, 0x3BDA16BA, 0x201ED657, 0x80110000}};

    test_add(decimal1, decimal2, check);

#test test_add3418
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -0.000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3419
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -50353245424.600086053750658706
    s21_decimal check = {{0xC2395692, 0xD677691, 0xA2B33A78, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3420
    // -49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -49054757420.183255710099686956
    s21_decimal check = {{0x3CBDC62C, 0x491D6CBB, 0x9E8124F0, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3421
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add3422
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337543839948913
    s21_decimal check = {{0x6D692071, 0xFFFFFFF4, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3423
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add3424
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337543839948912
    s21_decimal check = {{0x6D692070, 0xFFFFFFF4, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3425
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433809058396455
    s21_decimal check = {{0x2C307927, 0x999999A5, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3426
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433709650393610.6
    s21_decimal check = {{0x461B446A, 0xFFFFFF8C, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3427
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433809058396456
    s21_decimal check = {{0x2C307928, 0x999999A5, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3428
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433709650393611.1
    s21_decimal check = {{0x461B446F, 0xFFFFFF8C, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3429
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433809058396456
    s21_decimal check = {{0x2C307928, 0x999999A5, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3430
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433709650393611.6
    s21_decimal check = {{0x461B4474, 0xFFFFFF8C, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3431
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433809058396457
    s21_decimal check = {{0x2C307929, 0x999999A5, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3432
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433709650393612.6
    s21_decimal check = {{0x461B447E, 0xFFFFFF8C, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3433
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 49704001423.391670881925172831
    s21_decimal check = {{0x26DF8E5F, 0x3923285A, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3434
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 49704001421.391670881925172831
    s21_decimal check = {{0xD8178E5F, 0x1D61BAF2, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3435
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3436
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3437
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3438
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3439
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 49704001422.891670881925172831
    s21_decimal check = {{0x532D8E5F, 0x3232CD00, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3440
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 49704001421.891670881925172831
    s21_decimal check = {{0xABC98E5F, 0x2452164C, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3441
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 49704001424.391670881925172831
    s21_decimal check = {{0xCE438E5F, 0x4703DF0D, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3442
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 49704001420.391670881925172831
    s21_decimal check = {{0x30B38E5F, 0xF81043F, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3443
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 49704001423.391670881925172831
    s21_decimal check = {{0x26DF8E5F, 0x3923285A, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3444
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 49704001421.391670881925172831
    s21_decimal check = {{0xD8178E5F, 0x1D61BAF2, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3445
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779247551984867
    s21_decimal check = {{0xE7EC34E3, 0x55555560, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3446
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779148143982023
    s21_decimal check = {{0xC2BE75C7, 0x55555549, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3447
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864557747123427
    s21_decimal check = {{0xE7EC34E3, 0xB, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3448
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864458339120583
    s21_decimal check = {{0xC2BE75C7, 0xFFFFFFF4, 0x55555554, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3449
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914740940518627.3916708819
    s21_decimal check = {{0xA4F67D3, 0x472630D6, 0xC6AEA170, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3450
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914641532515782.6083291181
    s21_decimal check = {{0x12FE002D, 0x638479D3, 0xC6AEA13A, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3451
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914739508862862.3916708819
    s21_decimal check = {{0x7BA8B3D3, 0x80778F81, 0xC6AEA16F, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3452
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914640100860017.6083291181
    s21_decimal check = {{0x84574C2D, 0x9CD5D87E, 0xC6AEA139, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3453
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 51135657187.391670881925172831
    s21_decimal check = {{0x47AF8E5F, 0xB3C38A15, 0xA53A6C9A, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3454
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // 48272345657.391670881925172831
    s21_decimal check = {{0xB7478E5F, 0xA2C15937, 0x9BF9F2CD, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3455
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 49730410810.096425661123020814
    s21_decimal check = {{0x6F20480E, 0xF1F5DF3C, 0xA0B0081B, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3456
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 49677592034.686916102727324848
    s21_decimal check = {{0x8FD6D4B0, 0x648F0410, 0xA084574C, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3457
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 49730410809.890276746433215953
    s21_decimal check = {{0xF0353DD1, 0xEF197BE3, 0xA0B0081B, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3458
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 49677592034.893065017417129709
    s21_decimal check = {{0xEC1DEED, 0x676B6769, 0xA084574C, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3459
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 49730410809.391670881925172831
    s21_decimal check = {{0x93478E5F, 0xE82E147F, 0xA0B0081B, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3460
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 49677592035.391670881925172831
    s21_decimal check = {{0x6BAF8E5F, 0x6E56CECD, 0xA084574C, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3461
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 49704001430.314487133351606590
    s21_decimal check = {{0xDE72793E, 0x9935F10D, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3462
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 49704001414.468854630498739072
    s21_decimal check = {{0x2084A380, 0xBD4EF23F, 0xA09A2FB3, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3463
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 49704001430.391670881925172831
    s21_decimal check = {{0xBA9B8E5F, 0x9A482743, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3464
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 49704001414.391670881925172831
    s21_decimal check = {{0x445B8E5F, 0xBC3CBC09, 0xA09A2FB3, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3465
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 49704001426.025336910245326431
    s21_decimal check = {{0xB1E8EE5F, 0x5DAFD1A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3466
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 49704001418.758004853605019231
    s21_decimal check = {{0x4D0E2E5F, 0xF8D511A6, 0xA09A2FB3, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3467
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3468
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3469
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3470
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3471
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3472
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3473
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3474
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 49704001422.391670881925172831
    s21_decimal check = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3475
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125159617575501.618960
    s21_decimal check = {{0x6AA2DF10, 0x548E80BA, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3476
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125259025578346.402302
    s21_decimal check = {{0xB407D1FE, 0x55EFABC7, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3477
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // 0.000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3478
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 99408002844.78334176385034566
    s21_decimal check = {{0xE64BE946, 0x3BDA16BA, 0x201ED657, 0x110000}};

    test_add(decimal1, decimal2, check);

#test test_add3479
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 49054757420.183255710099686956
    s21_decimal check = {{0x3CBDC62C, 0x491D6CBB, 0x9E8124F0, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3480
    // 49704001422.391670881925172831
    s21_decimal decimal1 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 50353245424.600086053750658706
    s21_decimal check = {{0xC2395692, 0xD677691, 0xA2B33A78, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3481
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337592894706333
    s21_decimal check = {{0xD94D529D, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3482
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add3483
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // 79228162514264337592894706332
    s21_decimal check = {{0xD94D529C, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3484
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // overflow
    int check = IS_TOO_SMALL;

    test_add_fail(decimal1, decimal2, check);

#test test_add3485
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433758705151030.8
    s21_decimal check = {{0x7D053A24, 0xFFFFFFFE, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3486
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433760003639035
    s21_decimal check = {{0xC04C46FB, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3487
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433758705151031.3
    s21_decimal check = {{0x7D053A29, 0xFFFFFFFE, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3488
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433760003639036
    s21_decimal check = {{0xC04C46FC, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3489
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433758705151031.8
    s21_decimal check = {{0x7D053A2E, 0xFFFFFFFE, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3490
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433760003639036
    s21_decimal check = {{0xC04C46FC, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3491
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433758705151032.8
    s21_decimal check = {{0x7D053A38, 0xFFFFFFFE, 0xFFFFFFFF, 0x10000}};

    test_add(decimal1, decimal2, check);

#test test_add3492
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433760003639037
    s21_decimal check = {{0xC04C46FD, 0x99999999, 0x19999999, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3493
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // -649244001.20841517182548587502
    s21_decimal check = {{0xAF1233EE, 0xEAAE8DB8, 0xD1C8347E, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3494
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // -649244003.20841517182548587502
    s21_decimal check = {{0x753233EE, 0xC23D4A13, 0xD1C83489, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3495
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // -649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3496
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // -649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3497
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3498
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3499
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // -649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3500
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // -649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3501
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // -649244000.20841517182548587502
    s21_decimal check = {{0x4C0233EE, 0x7EE72F8B, 0xD1C83479, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3502
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // -649244004.20841517182548587502
    s21_decimal check = {{0xD84233EE, 0x2E04A840, 0xD1C8348F, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3503
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // -649244001.20841517182548587502
    s21_decimal check = {{0xAF1233EE, 0xEAAE8DB8, 0xD1C8347E, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3504
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // -649244003.20841517182548587502
    s21_decimal check = {{0x753233EE, 0xC23D4A13, 0xD1C83489, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3505
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779197198739443
    s21_decimal check = {{0x2EA2A7F3, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3506
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779198497227447
    s21_decimal check = {{0x7C0802B7, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3507
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864507393878003
    s21_decimal check = {{0x2EA2A7F3, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3508
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864508692366007
    s21_decimal check = {{0x7C0802B7, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3509
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914690587273202.7915848282
    s21_decimal check = {{0x54CBCA5A, 0xFB3B8D87, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3510
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914691885761207.2084151718
    s21_decimal check = {{0xC8819DA6, 0xAF6F1D21, 0xC6AEA155, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3511
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914689155617437.7915848282
    s21_decimal check = {{0xC625165A, 0x348CEC32, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3512
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914690454105442.2084151718
    s21_decimal check = {{0x39DAE9A6, 0xE8C07BCD, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3513
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 782411762.79158482817451412498
    s21_decimal check = {{0x222DCC12, 0xFBF79F60, 0xFCCF9588, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3514
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -2080899767.2084151718254858750
    s21_decimal check = {{0x6D71D1FE, 0x2A7D2584, 0x433CCCA8, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add3515
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // -622834614.50366039262763789158
    s21_decimal check = {{0x75C9AB66, 0xB85F1D54, 0xC93FABFA, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3516
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // -675653389.91316995102333385846
    s21_decimal check = {{0xAE7ABC76, 0xF48CBA77, 0xDA50BD0D, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3517
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // -622834614.70980930731744275302
    s21_decimal check = {{0x999AB66, 0xD675EBE6, 0xC93FABFB, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3518
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // -675653389.70702103633352899702
    s21_decimal check = {{0x1AAABC76, 0xD675EBE6, 0xDA50BD0C, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3519
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // -622834615.20841517182548587502
    s21_decimal check = {{0x567233EE, 0x8A6A4F1A, 0xC93FABFE, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3520
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // -675653389.20841517182548587502
    s21_decimal check = {{0xCDD233EE, 0x228188B1, 0xDA50BD0A, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3521
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // -649243994.28559892039905211567
    s21_decimal check = {{0xF9AE74AF, 0x63582784, 0xD1C83459, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3522
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // -649244010.13123142325191963437
    s21_decimal check = {{0x2A95F32D, 0x4993B047, 0xD1C834AF, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3523
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // -649243994.20841517182548587502
    s21_decimal check = {{0xF9A233EE, 0xF83AFA7A, 0xD1C83458, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3524
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // -649244010.20841517182548587502
    s21_decimal check = {{0x2AA233EE, 0xB4B0DD51, 0xD1C834AF, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3525
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // -649243998.57474914350533227502
    s21_decimal check = {{0x5F68B3EE, 0xA3BC6BD2, 0xD1C83470, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3526
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // -649244005.84208120014563947502
    s21_decimal check = {{0xC4DBB3EE, 0x92F6BF9, 0xD1C83498, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3527
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3528
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3529
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3530
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3531
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3532
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3533
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3534
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // -649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3535
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125209970820926.219046
    s21_decimal check = {{0xF5752326, 0x554164BC, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3536
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125208672332921.802216
    s21_decimal check = {{0x29358DE8, 0x553CC7C5, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3537
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -50353245424.600086053750658706
    s21_decimal check = {{0xC2395692, 0xD677691, 0xA2B33A78, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3538
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 49054757420.183255710099686956
    s21_decimal check = {{0x3CBDC62C, 0x491D6CBB, 0x9E8124F0, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3539
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // -1298488004.4168303436509717500
    s21_decimal check = {{0x36D3A3FC, 0xAAE46261, 0x29F4D74D, 0x80130000}};

    test_add(decimal1, decimal2, check);

#test test_add3540
    // -649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -0.00000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3541
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add3542
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -79228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337592894706333
    s21_decimal check = {{0xD94D529D, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3543
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x0}};
    // overflow
    int check = IS_TOO_LARGE;

    test_add_fail(decimal1, decimal2, check);

#test test_add3544
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -79228162514264337593543950334
    s21_decimal decimal2 = {{0xFFFFFFFE, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};
    // -79228162514264337592894706332
    s21_decimal check = {{0xD94D529C, 0xFFFFFFFF, 0xFFFFFFFF, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3545
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433760003639035
    s21_decimal check = {{0xC04C46FB, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3546
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -7922816251426433759354395033
    s21_decimal decimal2 = {{0x99999999, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433758705151030.8
    s21_decimal check = {{0x7D053A24, 0xFFFFFFFE, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3547
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x10000}};
    // 7922816251426433760003639036
    s21_decimal check = {{0xC04C46FC, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3548
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -7922816251426433759354395033.5
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x80010000}};
    // -7922816251426433758705151031.3
    s21_decimal check = {{0x7D053A29, 0xFFFFFFFE, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3549
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433760003639036
    s21_decimal check = {{0xC04C46FC, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3550
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -7922816251426433759354395034
    s21_decimal decimal2 = {{0x9999999A, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433758705151031.8
    s21_decimal check = {{0x7D053A2E, 0xFFFFFFFE, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3551
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x0}};
    // 7922816251426433760003639037
    s21_decimal check = {{0xC04C46FD, 0x99999999, 0x19999999, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3552
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -7922816251426433759354395035
    s21_decimal decimal2 = {{0x9999999B, 0x99999999, 0x19999999, 0x80000000}};
    // -7922816251426433758705151032.8
    s21_decimal check = {{0x7D053A38, 0xFFFFFFFE, 0xFFFFFFFF, 0x80010000}};

    test_add(decimal1, decimal2, check);

#test test_add3553
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x0}};
    // 649244003.20841517182548587502
    s21_decimal check = {{0x753233EE, 0xC23D4A13, 0xD1C83489, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3554
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -1
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x80000000}};
    // 649244001.20841517182548587502
    s21_decimal check = {{0xAF1233EE, 0xEAAE8DB8, 0xD1C8347E, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3555
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x10000}};
    // 649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3556
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -0.5
    s21_decimal decimal2 = {{0x5, 0x0, 0x0, 0x80010000}};
    // 649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3557
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3558
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -0.4999999999999999999999999999
    s21_decimal decimal2 = {{0x87FFFFFF, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3559
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x1C0000}};
    // 649244002.70841517182548587502
    s21_decimal check = {{0xC3AA33EE, 0xC599AFC, 0xD1C83487, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3560
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -0.5000000000000000000000000001
    s21_decimal decimal2 = {{0x88000001, 0x1F128130, 0x1027E72F, 0x801C0000}};
    // 649244001.70841517182548587502
    s21_decimal check = {{0x609A33EE, 0xA0923CCF, 0xD1C83481, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3561
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x1C0000}};
    // 649244004.20841517182548587502
    s21_decimal check = {{0xD84233EE, 0x2E04A840, 0xD1C8348F, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3562
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -1.9999999999999999999999999000
    s21_decimal decimal2 = {{0x1FFFFC18, 0x7C4A04C2, 0x409F9CBC, 0x801C0000}};
    // 649244000.20841517182548587502
    s21_decimal check = {{0x4C0233EE, 0x7EE72F8B, 0xD1C83479, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3563
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x1C0000}};
    // 649244003.20841517182548587502
    s21_decimal check = {{0x753233EE, 0xC23D4A13, 0xD1C83489, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3564
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -1.0000000000000000000000000001
    s21_decimal decimal2 = {{0x10000001, 0x3E250261, 0x204FCE5E, 0x801C0000}};
    // 649244001.20841517182548587502
    s21_decimal check = {{0xAF1233EE, 0xEAAE8DB8, 0xD1C8347E, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3565
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x0}};
    // 26409387504754779198497227447
    s21_decimal check = {{0x7C0802B7, 0x55555555, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3566
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -26409387504754779197847983445
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x55555555, 0x80000000}};
    // -26409387504754779197198739443
    s21_decimal check = {{0x2EA2A7F3, 0x55555555, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3567
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x0}};
    // 26409387498605864508692366007
    s21_decimal check = {{0x7C0802B7, 0x0, 0x55555555, 0x0}};

    test_add(decimal1, decimal2, check);

#test test_add3568
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -26409387498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80000000}};
    // -26409387498605864507393878003
    s21_decimal check = {{0x2EA2A7F3, 0x0, 0x55555555, 0x80000000}};

    test_add(decimal1, decimal2, check);

#test test_add3569
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x0}};
    // 6148914691885761207.2084151718
    s21_decimal check = {{0xC8819DA6, 0xAF6F1D21, 0xC6AEA155, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3570
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -6148914691236517205
    s21_decimal decimal2 = {{0x55555555, 0x55555555, 0x0, 0x80000000}};
    // -6148914690587273202.7915848282
    s21_decimal check = {{0x54CBCA5A, 0xFB3B8D87, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3571
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x0}};
    // 6148914690454105442.2084151718
    s21_decimal check = {{0x39DAE9A6, 0xE8C07BCD, 0xC6AEA154, 0xA0000}};

    test_add(decimal1, decimal2, check);

#test test_add3572
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -6148914689804861440
    s21_decimal decimal2 = {{0x0, 0x55555555, 0x0, 0x80000000}};
    // -6148914689155617437.7915848282
    s21_decimal check = {{0xC625165A, 0x348CEC32, 0xC6AEA154, 0x800A0000}};

    test_add(decimal1, decimal2, check);

#test test_add3573
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x0}};
    // 2080899767.2084151718254858750
    s21_decimal check = {{0x6D71D1FE, 0x2A7D2584, 0x433CCCA8, 0x130000}};

    test_add(decimal1, decimal2, check);

#test test_add3574
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -1431655765
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x0, 0x80000000}};
    // -782411762.79158482817451412498
    s21_decimal check = {{0x222DCC12, 0xFBF79F60, 0xFCCF9588, 0x80140000}};

    test_add(decimal1, decimal2, check);

#test test_add3575
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x150000}};
    // 675653389.91316995102333385846
    s21_decimal check = {{0xAE7ABC76, 0xF48CBA77, 0xDA50BD0D, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3576
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -26409387.704754779197847983445
    s21_decimal decimal2 = {{0x1B755555, 0x2CE411B0, 0x55555560, 0x80150000}};
    // 622834614.50366039262763789158
    s21_decimal check = {{0x75C9AB66, 0xB85F1D54, 0xC93FABFA, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3577
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x150000}};
    // 675653389.70702103633352899702
    s21_decimal check = {{0x1AAABC76, 0xD675EBE6, 0xDA50BD0C, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3578
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -26409387.498605864508043122005
    s21_decimal decimal2 = {{0x55555555, 0x0, 0x55555555, 0x80150000}};
    // 622834614.70980930731744275302
    s21_decimal check = {{0x999AB66, 0xD675EBE6, 0xC93FABFB, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3579
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x0}};
    // 675653389.20841517182548587502
    s21_decimal check = {{0xCDD233EE, 0x228188B1, 0xDA50BD0A, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3580
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -26409387
    s21_decimal decimal2 = {{0x192F9AB, 0x0, 0x0, 0x80000000}};
    // 622834615.20841517182548587502
    s21_decimal check = {{0x567233EE, 0x8A6A4F1A, 0xC93FABFE, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3581
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x1C0000}};
    // 649244010.13123142325191963437
    s21_decimal check = {{0x2A95F32D, 0x4993B047, 0xD1C834AF, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3582
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -7.9228162514264337593543950335
    s21_decimal decimal2 = {{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x801C0000}};
    // 649243994.28559892039905211567
    s21_decimal check = {{0xF9AE74AF, 0x63582784, 0xD1C83459, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3583
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x0}};
    // 649244010.20841517182548587502
    s21_decimal check = {{0x2AA233EE, 0xB4B0DD51, 0xD1C834AF, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3584
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -8
    s21_decimal decimal2 = {{0x8, 0x0, 0x0, 0x80000000}};
    // 649243994.20841517182548587502
    s21_decimal check = {{0xF9A233EE, 0xF83AFA7A, 0xD1C83458, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3585
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x100000}};
    // 649244005.84208120014563947502
    s21_decimal check = {{0xC4DBB3EE, 0x92F6BF9, 0xD1C83498, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3586
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -3.6336660283201536
    s21_decimal decimal2 = {{0x811800, 0x811800, 0x0, 0x80100000}};
    // 649243998.57474914350533227502
    s21_decimal check = {{0x5F68B3EE, 0xA3BC6BD2, 0xD1C83470, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3587
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x80000000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3588
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 0
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x0}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3589
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3590
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 0.0000000000000000000000000000
    s21_decimal decimal2 = {{0x0, 0x0, 0x0, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3591
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3592
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -0.0000000000000000000000000001
    s21_decimal decimal2 = {{0x1, 0x0, 0x0, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3593
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x1C0000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3594
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -0.0000000000000000000000000010
    s21_decimal decimal2 = {{0xA, 0x0, 0x0, 0x801C0000}};
    // 649244002.20841517182548587502
    s21_decimal check = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3595
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x80060000}};
    // -56124981125208672332921.802216
    s21_decimal check = {{0x29358DE8, 0x553CC7C5, 0xB5597F0B, 0x80060000}};

    test_add(decimal1, decimal2, check);

#test test_add3596
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 56124981125209321576924.010631
    s21_decimal decimal2 = {{0xF555887, 0x553F1641, 0xB5597F0B, 0x60000}};
    // 56124981125209970820926.219046
    s21_decimal check = {{0xF5752326, 0x554164BC, 0xB5597F0B, 0x60000}};

    test_add(decimal1, decimal2, check);

#test test_add3597
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x80120000}};
    // -49054757420.183255710099686956
    s21_decimal check = {{0x3CBDC62C, 0x491D6CBB, 0x9E8124F0, 0x80120000}};

    test_add(decimal1, decimal2, check);

#test test_add3598
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 49704001422.391670881925172831
    s21_decimal decimal2 = {{0x7F7B8E5F, 0x2B4271A6, 0xA09A2FB4, 0x120000}};
    // 50353245424.600086053750658706
    s21_decimal check = {{0xC2395692, 0xD677691, 0xA2B33A78, 0x120000}};

    test_add(decimal1, decimal2, check);

#test test_add3599
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // -649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x80140000}};
    // 0.00000000000000000000
    s21_decimal check = {{0x0, 0x0, 0x0, 0x140000}};

    test_add(decimal1, decimal2, check);

#test test_add3600
    // 649244002.20841517182548587502
    s21_decimal decimal1 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 649244002.20841517182548587502
    s21_decimal decimal2 = {{0x122233EE, 0x5675EBE6, 0xD1C83484, 0x140000}};
    // 1298488004.4168303436509717500
    s21_decimal check = {{0x36D3A3FC, 0xAAE46261, 0x29F4D74D, 0x130000}};

    test_add(decimal1, decimal2, check);
